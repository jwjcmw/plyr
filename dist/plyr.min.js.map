{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/i18n.js","src/js/utils/arrays.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","toggle","arguments","undefined","_this","this","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","hasAttribute","removeAttribute","toggleClass","force","method","classList","contains","hasClass","matches","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","querySelectorAll","includes","getElements","container","getElement","querySelector","getFocusElement","focused","activeElement","body","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","_inputType$split","mediaType","isHTML5","media","canPlayType","err","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","map","extend","player","set","_player$media","currentTime","paused","preload","readyState","src","play","load","quality","cancelRequests","config","blankVideo","debug","log","getDeep","path","reduce","obj","target","sources","shift","concat","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","i18n","{seektime}","seekTime","{title}","title","_ref2","dedupe","item","indexOf","Storage","classCallCheck","enabled","storage","store","localStorage","getItem","json","JSON","parse","setItem","stringify","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","hasId","exists","getElementById","update","data","insertAdjacentElement","useStorage","cached","prefix","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","classNames","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","button","label","labelPressed","iconPressed","control","controlPressed","enumerable","pressed","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","createMenuItem","list","_ref$badge","_ref$checked","checked","radio","name","faux","insertAdjacentHTML","updateTimeDisplay","updateVolume","setRange","muted","updateProgress","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this2","tooltips","clientRect","getBoundingClientRect","visible","_toggle","width","pageX","left","parseFloat","timeUpdate","invert","invertTime","seeking","durationUpdate","Math","pow","hasDuration","displayDuration","toggleTab","setting","tabs","setQualityMenu","_this3","panes","checkMenu","sort","a","b","sorting","getLabel","getBadge","updateSetting","pane","currentTrack","default","setCaptionsMenu","_this4","tracks","getTracks","toggled","language","unshift","bind","setSpeedMenu","_this5","speed","isVimeo","values","some","tab","toggleMenu","form","show","isMenuItem","isButton","stopPropagation","getTabSize","clone","position","opacity","scrollWidth","height","scrollHeight","showTab","_this6","size","restore","propertyName","focus","create","_this7","aria-haspopup","aria-controls","aria-expanded","aria-labelled-by","tabindex","inner","home","back","inject","_this8","floor","random","props","seektime","extracontrols","setTimeout","offsetHeight","_config","labels","parseUrl","parser","href","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","trackEvents","_captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","caption","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","loop","selected","keyboard","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","urls","vimeo","sdk","iframe","youtube","googleIMA","listeners","editable","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","tabFocus","google","publisherId","providers","types","noop","Console","console","onChange","first","last","keyCode","shiftKey","preventDefault","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","property","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","build","checkPlaying","ready","setTitle","setPoster","isEmbed","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","Listeners","lastKey","handleKey","firstTouch","code","which","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","delay","hasAudio","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","inputEvent","proxy","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","showHomeTab","currentTarget","eventType","done","seekTo","_player","webkitDirectionInvertedFromDevice","_map","deltaX","deltaY","_map2","direction","sign","abs","factory","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","head","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","module","exports","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","setLoop","currentSrc","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","mapQualityUnit","entry","hd2160","hd1440","hd1080","hd720","large","medium","small","tiny","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","format$$1","playerVars","hl","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackQualityChange","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getPlaybackQuality","setPlaybackQuality","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","levels","getAvailableQualityLevels","level","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","_this9","initialize","init","adError","zIndex","_this10","destroy","_this11","handlers","_this12","base","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","insertElements","attribute","change","_sources$","_sources$$provider","tagName","crossorigin","Plyr","failed","jQuery","original","getProviderByUrl","search","truthy","searchParams","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","closest","states","webkitPresentationMode","inline","t"],"mappings":"kNAIA,IAAMA,EAAiB,SAAAC,GAAA,OAAUA,MAAAA,EAAiDA,EAAMC,YAAc,MAChGC,EAAa,SAACF,EAAOC,GAAR,OAAwBE,QAAQH,GAASC,GAAeD,aAAiBC,IACtFG,EAAoB,SAAAJ,GAAA,OAASA,MAAAA,GAC7BK,EAAW,SAAAL,GAAA,OAASD,EAAeC,KAAWM,QAE9CC,EAAW,SAAAP,GAAA,OAASD,EAAeC,KAAWQ,QAG9CC,EAAU,SAAAT,GAAA,OAASU,MAAMD,QAAQT,IAEjCW,EAAa,SAAAX,GAAA,OAASE,EAAWF,EAAOY,WAOxCC,EAAU,SAAAb,GAAA,OACZI,EAAkBJ,KAChBO,EAASP,IAAUS,EAAQT,IAAUW,EAAWX,MAAYA,EAAMc,QACnET,EAASL,KAAWM,OAAOS,KAAKf,GAAOc,QAqB5CE,EAAe,CACXC,gBAAiBb,EACjBc,OAAQb,EACRc,OAxCa,SAAAnB,GAAA,OAASD,EAAeC,KAAWoB,SAAWA,OAAOC,MAAMrB,IAyCxEsB,OAAQf,EACRgB,QAxCc,SAAAvB,GAAA,OAASD,EAAeC,KAAWG,SAyCjDqB,SAxCe,SAAAxB,GAAA,OAASD,EAAeC,KAAWyB,UAyClDC,MAAOjB,EACPkB,QAxCc,SAAA3B,GAAA,OAASE,EAAWF,EAAO4B,UAyCzCC,SAAUlB,EACVmB,QAxCc,SAAA9B,GAAA,OAASE,EAAWF,EAAO+B,UAyCzCC,SAxCe,SAAAhC,GAAA,OAASD,EAAeC,KAAWiC,MAyClDC,MAxCY,SAAAlC,GAAA,OAASE,EAAWF,EAAOmC,QAyCvCC,IAxCU,SAAApC,GAAA,OAASE,EAAWF,EAAOqC,OAAOC,eAAiBpC,EAAWF,EAAOqC,OAAOE,SAyCtFC,MAxCY,SAAAxC,GAAA,OAASE,EAAWF,EAAOyC,aAAgBrC,EAAkBJ,IAAUO,EAASP,EAAM0C,OAyClGC,IAlCU,SAAA3C,GAEV,GAAIE,EAAWF,EAAOqC,OAAOO,KACzB,OAAO,EAIX,IAAItB,EAAStB,EACRA,EAAM6C,WAAW,YAAe7C,EAAM6C,WAAW,cAClDvB,EAAAA,UAAmBtB,GAGvB,IACI,OAAQa,EAAQ,IAAI+B,IAAItB,GAAQwB,UAClC,MAAOC,GACL,OAAO,IAoBXC,MAAOnC,GCpDLoC,EAA4B,WAE9B,IAAIC,GAAY,EAChB,IACI,IAAMC,EAAU7C,OAAO8C,eAAe,GAAI,UAAW,CACjDC,IADiD,WAG7C,OADAH,GAAY,EACL,QAGfb,OAAOiB,iBAAiB,OAAQ,KAAMH,GACtCd,OAAOkB,oBAAoB,OAAQ,KAAMJ,GAC3C,MAAOJ,IAIT,OAAOG,EAhBuB,GAoB3B,SAASM,EAAe1B,EAASI,EAAOuB,GAA2D,IAAjDC,EAAiDC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAAAE,EAAAC,KAAjCC,IAAiCJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAAjBK,EAAiBL,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAEtG,GAAK7B,GAAa,qBAAsBA,IAAYd,EAAGgC,MAAMd,IAAWlB,EAAGQ,SAASiC,GAApF,CAKA,IAAMQ,EAAS/B,EAAMgC,MAAM,KAIvBf,EAAUa,EAGVf,IACAE,EAAU,CAENY,QAAAA,EAEAC,QAAAA,IAKRC,EAAOE,QAAQ,SAAAC,GACPP,GAAQA,EAAKQ,gBAAkBX,GAE/BG,EAAKQ,eAAeC,KAAK,CAAExC,QAAAA,EAASsC,KAAAA,EAAMX,SAAAA,EAAUN,QAAAA,IAGxDrB,EAAQ4B,EAAS,mBAAqB,uBAAuBU,EAAMX,EAAUN,MAK9E,SAASoB,EAAGzC,GAAiE,IAAxDmC,EAAwDN,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAA/C,GAAIF,EAA2CE,UAAA,GAAjCI,IAAiCJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAAjBK,EAAiBL,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAChFH,EAAegB,KAAKV,KAAMhC,EAASmC,EAAQR,GAAU,EAAMM,EAASC,GAIjE,SAASS,EAAI3C,GAAiE,IAAxDmC,EAAwDN,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAA/C,GAAIF,EAA2CE,UAAA,GAAjCI,IAAiCJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAAjBK,EAAiBL,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GACjFH,EAAegB,KAAKV,KAAMhC,EAASmC,EAAQR,GAAU,EAAOM,EAASC,GAIlE,SAASU,EAAK5C,GAAiE,IAAxDmC,EAAwDN,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAA/C,GAAIF,EAA2CE,UAAA,GAAjCI,IAAiCJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAAjBK,EAAiBL,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAMlFH,EAAegB,KAAKV,KAAMhC,EAASmC,EALnC,SAASU,IACLF,EAAI3C,EAASmC,EAAQU,EAAcZ,EAASC,GADjB,IAAA,IAAAY,EAAAjB,UAAA7C,OAAN+D,EAAMnE,MAAAkE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,GAAAnB,UAAAmB,GAE3BrB,EAASsB,MAAMjB,KAAMe,KAGgC,EAAMd,EAASC,GAIrE,SAASgB,EAAalD,GAAkD,IAAzCsC,EAAyCT,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAlC,GAAIsB,EAA8BtB,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAAbuB,EAAavB,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAEvE,GAAK3C,EAAGc,QAAQA,KAAYd,EAAGgC,MAAMoB,GAArC,CAKA,IAAMlC,EAAQ,IAAIiD,YAAYf,EAAM,CAChCa,QAAAA,EACAC,OAAQ5E,OAAO8E,OAAO,GAAIF,EAAQ,CAC9BG,KAAMvB,SAKdhC,EAAQwD,cAAcpD,w3BC3FnB,SAASqD,EAAKC,EAAUC,GAE3B,IAAMC,EAAUF,EAAS1E,OAAS0E,EAAW,CAACA,GAI9C9E,MAAMiF,KAAKD,GACNE,UACAzB,QAAQ,SAACrC,EAAS+D,GACf,IAAMC,EAAQD,EAAQ,EAAIJ,EAAQM,WAAU,GAAQN,EAG9CO,EAASlE,EAAQmE,WACjBC,EAAUpE,EAAQqE,YAIxBL,EAAMM,YAAYtE,GAKdoE,EACAF,EAAOK,aAAaP,EAAOI,GAE3BF,EAAOI,YAAYN,KAM5B,SAASQ,EAAcxE,EAASyE,GAC9BvF,EAAGc,QAAQA,KAAYd,EAAGgC,MAAMuD,IAMrCjG,OAAOkG,QAAQD,GACVE,OAAO,SAAAC,GAAA,IAAIC,EAAJC,EAAAF,EAAA,GAAA,GAAA,OAAgB1F,EAAGC,gBAAgB0F,KAC1CxC,QAAQ,SAAA0C,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAEE,EAAFD,EAAA,GAAOH,EAAPG,EAAA,GAAA,OAAkBhF,EAAQkF,aAAaD,EAAKJ,KAItD,SAASM,EAAc7C,EAAMmC,EAAYW,GAE5C,IAAMpF,EAAUqF,SAASF,cAAc7C,GAavC,OAVIpD,EAAGE,OAAOqF,IACVD,EAAcxE,EAASyE,GAIvBvF,EAAGM,OAAO4F,KACVpF,EAAQsF,UAAYF,GAIjBpF,EASJ,SAASuF,EAAcjD,EAAM4B,EAAQO,EAAYW,GAEpDlB,EAAOI,YAAYa,EAAc7C,EAAMmC,EAAYW,IAIhD,SAASI,EAAcxF,GACtBd,EAAGa,SAASC,IAAYd,EAAGU,MAAMI,GACjCpB,MAAMiF,KAAK7D,GAASqC,QAAQmD,GAI3BtG,EAAGc,QAAQA,IAAad,EAAGc,QAAQA,EAAQmE,aAIhDnE,EAAQmE,WAAWsB,YAAYzF,GAI5B,SAAS0F,EAAa1F,GAGzB,IAHkC,IAC5BhB,EAAWgB,EAAQ2F,WAAnB3G,OAECA,EAAS,GACZgB,EAAQyF,YAAYzF,EAAQ4F,WAC5B5G,GAAU,EAKX,SAAS6G,EAAeC,EAAUC,GACrC,OAAK7G,EAAGc,QAAQ+F,IAAc7G,EAAGc,QAAQ+F,EAAS5B,aAAgBjF,EAAGc,QAAQ8F,IAI7EC,EAAS5B,WAAW6B,aAAaF,EAAUC,GAEpCD,GALI,KASR,SAASG,EAA0BC,EAAKC,GAM3C,IAAKjH,EAAGM,OAAO0G,IAAQhH,EAAGgC,MAAMgF,GAC5B,MAAO,GAGX,IAAMzB,EAAa,GACb2B,EAAWD,EA0CjB,OAxCAD,EAAI9D,MAAM,KAAKC,QAAQ,SAAAgE,GAEnB,IAAMC,EAAWD,EAAEE,OACbC,EAAYF,EAASG,QAAQ,IAAK,IAIlCC,EAHWJ,EAASG,QAAQ,SAAU,IAGrBrE,MAAM,KACvB6C,EAAMyB,EAAM,GACZ7B,EAAQ6B,EAAM1H,OAAS,EAAI0H,EAAM,GAAGD,QAAQ,QAAS,IAAM,GAKjE,OAFcH,EAASK,OAAO,IAG1B,IAAK,IAEGzH,EAAGE,OAAOgH,IAAalH,EAAGM,OAAO4G,EAASQ,SAC1CR,EAASQ,OAAT,IAAsBJ,GAG1B/B,EAAWmC,MAAQJ,EACnB,MAEJ,IAAK,IAED/B,EAAWoC,GAAKP,EAASG,QAAQ,IAAK,IACtC,MAEJ,IAAK,IAEDhC,EAAWQ,GAAOJ,KASvBJ,EAIJ,SAASqC,EAAa9G,EAAS+G,GAClC,GAAK7H,EAAGc,QAAQA,GAAhB,CAIA,IAAIgH,EAAOD,EAEN7H,EAAGO,QAAQuH,KACZA,GAAQhH,EAAQiH,aAAa,WAG7BD,EACAhH,EAAQkF,aAAa,SAAU,IAE/BlF,EAAQkH,gBAAgB,WAKzB,SAASC,EAAYnH,EAASwG,EAAWY,GAC5C,GAAIlI,EAAGc,QAAQA,GAAU,CACrB,IAAIqH,EAAS,SAMb,YALqB,IAAVD,IACPC,EAASD,EAAQ,MAAQ,UAG7BpH,EAAQsH,UAAUD,GAAQb,GACnBxG,EAAQsH,UAAUC,SAASf,GAGtC,OAAO,KAIJ,SAASgB,EAASxH,EAASwG,GAC9B,OAAOtH,EAAGc,QAAQA,IAAYA,EAAQsH,UAAUC,SAASf,GAItD,SAASiB,EAAQzH,EAASsG,GAC7B,IAAMoB,EAAY,CAAEzH,QAAAA,SAapB,OANIyH,EAAUD,SACVC,EAAUC,uBACVD,EAAUE,oBACVF,EAAUG,mBARd,WACI,OAAOjJ,MAAMiF,KAAKwB,SAASyC,iBAAiBxB,IAAWyB,SAAS/F,QAUrDU,KAAK1C,EAASsG,GAI1B,SAAS0B,EAAY1B,GACxB,OAAOtE,KAAK0B,SAASuE,UAAUH,iBAAiBxB,GAI7C,SAAS4B,EAAW5B,GACvB,OAAOtE,KAAK0B,SAASuE,UAAUE,cAAc7B,GAI1C,SAAS8B,IACZ,IAAIC,EAAUhD,SAASiD,cAQvB,OAHID,EAHCA,GAAWA,IAAYhD,SAASkD,KAGvBlD,SAAS8C,cAAc,UAFvB,KC9OX,IACGnI,EAEAmC,EAOAG,EAVGkG,GACHxI,EAAUqF,SAASF,cAAc,QAEjChD,EAAS,CACXsG,iBAAkB,sBAClBC,cAAe,gBACfC,YAAa,gCACbC,WAAY,iBAGVtG,EAAO9D,OAAOS,KAAKkD,GAAQ0G,KAAK,SAAAzI,GAAA,YAAkC0B,IAAzB9B,EAAQ8I,MAAM1I,OAEtDlB,EAAGM,OAAO8C,IAAQH,EAAOG,ICdpC,IC6EcyG,ED7ERC,EAAU,CACZC,OAAgC5D,SAAS6D,aACzCC,SAAU,qBAAsB9D,SAAS+D,gBAAgBN,QAAU,OAAOO,KAAKC,UAAUC,WACzFC,SAAU,kBAAkBH,KAAKC,UAAUG,UAC3CC,MAAO,uBAAuBL,KAAKC,UAAUG,WCC3CE,EAAgB,CAClBC,YAAa,SACbC,YAAa,IACbC,aAAc,cACdC,YAAa,yBACbC,YAAa,UAIXC,EAAU,CAEZC,MAAO,gBAAiB7E,SAASF,cAAc,SAC/CgF,MAAO,gBAAiB9E,SAASF,cAAc,SAI/CiF,MAPY,SAON9H,EAAM+H,EAAUC,GAClB,IAAMC,EAAgBvB,EAAQQ,UAAYc,GAAeL,EAAQK,YAC3DE,EAAMP,EAAQ3H,IAAsB,UAAb+H,EAG7B,MAAO,CACHG,IAAAA,EACAC,GAJOD,GAAOP,EAAQS,aAAwB,UAATpI,IAAqB0G,EAAQQ,UAAYe,KAUtFI,KAAa3B,EAAQQ,UAAYtK,EAAGQ,SAASyF,EAAc,SAASyF,2BAIpEC,QAAS3L,EAAGQ,SAASa,OAAOuK,uCAI5BR,YAAa,gBAAiBjF,SAASF,cAAc,SAKrD4F,KAjCY,SAiCPC,GAAW,IAAAC,EACQD,EAAU5I,MAAM,KAA7B8I,EADKpG,EAAAmG,EAAA,GAAA,GAEZ,IAAKjJ,KAAKmJ,SAAWD,IAAclJ,KAAKM,KACpC,OAAO,EAGX,IAAIA,OAAAA,EACA0I,GAAaA,EAAUjD,SAAS,WAEhCzF,EAAO0I,EACc,eAAdA,EAEP1I,EAAO,cACA0I,KAAarB,IAEpBrH,EAAU0I,EAAV,aAAgCrB,EAAcqB,GAA9C,KAGJ,IACI,OAAO3M,QAAQiE,GAAQN,KAAKoJ,MAAMC,YAAY/I,GAAMmE,QAAQ,KAAM,KACpE,MAAO6E,GACL,OAAO,IAKfC,WAAY,eAAgBlG,SAASF,cAAc,SAGnDuF,YACU3B,EAAQ1D,SAASF,cAAc,SACrC4D,EAAMzG,KAAO,QACS,UAAfyG,EAAMzG,MAKjBkJ,MAAO,iBAAkBnG,SAAS+D,gBAGlCqC,aAAoC,IAAvBjD,EAIbkD,cAAe,eAAgBnL,QAAUA,OAAOoL,WAAW,4BAA4BlE,SCxFrFmE,EAAQ,CACVC,WADU,WACG,IAAA9J,EAAAC,KACT,OAAKA,KAAKmJ,QAIMvM,MAAMiF,KAAK7B,KAAKoJ,MAAMtD,iBAAiB,WAGxCnD,OAAO,SAAAmH,GAAA,OAAU7B,EAAQc,KAAKrI,KAAKX,EAAM+J,EAAOC,aAAa,WANjE,IAUfC,kBAbU,WAeN,OAAOJ,EAAMC,WACRnJ,KAAKV,MACLiK,IAAI,SAAAH,GAAA,OAAUxM,OAAOwM,EAAOC,aAAa,WACzCpH,OAAOtG,UAGhB6N,OArBU,WAsBN,GAAKlK,KAAKmJ,QAAV,CAIA,IAAMgB,EAASnK,KAGfxD,OAAO8C,eAAe6K,EAAOf,MAAO,UAAW,CAC3C7J,IAD2C,WAGvC,IACMuK,EADUF,EAAMC,WAAWnJ,KAAKyJ,GACftD,KAAK,SAAAiD,GAAA,OAAUA,EAAOC,aAAa,SAAWI,EAAOL,SAG5E,OAAOA,GAAUxM,OAAOwM,EAAOC,aAAa,UAEhDK,IAT2C,SASvClO,GAEA,IAGM4N,EAHUF,EAAMC,WAAWnJ,KAAKyJ,GAGftD,KAAK,SAAAiD,GAAA,OAAUxM,OAAOwM,EAAOC,aAAa,WAAa7N,IAG9E,GAAK4N,EAAL,CARO,IAAAO,EAa8CF,EAAOf,MAApDkB,EAbDD,EAaCC,YAAaC,EAbdF,EAacE,OAAQC,EAbtBH,EAasBG,QAASC,EAb/BJ,EAa+BI,WAGtCN,EAAOf,MAAMsB,IAAMZ,EAAOC,aAAa,QAGvB,SAAZS,GAAsBC,KAEtBN,EAAOvJ,KAAK,iBAAkB,WAC1BuJ,EAAOG,YAAcA,EAGhBC,GACDJ,EAAOQ,SAKfR,EAAOf,MAAMwB,QAIjB1J,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,iBAAiB,EAAO,CAC5DyB,QAAS3O,UAQzB4O,eAlFU,WAmFD9K,KAAKmJ,UAKV3F,EAAcoG,EAAMC,WAAWnJ,KAAKV,OAKpCA,KAAKoJ,MAAMlG,aAAa,MAAOlD,KAAK+K,OAAOC,YAK3ChL,KAAKoJ,MAAMwB,OAGX5K,KAAKiL,MAAMC,IAAI,iCCjGhB,SAASC,EAAQ/N,EAAQgO,GAC5B,OAAOA,EAAKhL,MAAM,KAAKiL,OAAO,SAACC,EAAKrI,GAAN,OAAcqI,GAAOA,EAAIrI,IAAM7F,GAI1D,SAAS8M,IAAgC,IAAA,IAAzBqB,EAAyB1L,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAhB,GAAgBiB,EAAAjB,UAAA7C,OAATwO,EAAS5O,MAAAkE,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATwK,EAASxK,EAAA,GAAAnB,UAAAmB,GAC5C,IAAKwK,EAAQxO,OACT,OAAOuO,EAGX,IAAMzB,EAAS0B,EAAQC,QAEvB,OAAKvO,EAAGE,OAAO0M,IAIftN,OAAOS,KAAK6M,GAAQzJ,QAAQ,SAAA4C,GACpB/F,EAAGE,OAAO0M,EAAO7G,KACZzG,OAAOS,KAAKsO,GAAQxF,SAAS9C,IAC9BzG,OAAO8E,OAAOiK,EAAdjM,EAAA,GAAyB2D,EAAM,KAGnCiH,EAAOqB,EAAOtI,GAAM6G,EAAO7G,KAE3BzG,OAAO8E,OAAOiK,EAAdjM,EAAA,GAAyB2D,EAAM6G,EAAO7G,OAIvCiH,EAAAA,WAAAA,EAAAA,CAAOqB,GAAPG,OAAkBF,KAfdD,ECbR,SAASI,EAAOzP,GAAgB,IAAA,IAAA4E,EAAAjB,UAAA7C,OAAN+D,EAAMnE,MAAAkE,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,EAAA,GAAAnB,UAAAmB,GACnC,OAAI9D,EAAGgC,MAAMhD,GACFA,EAGJA,EAAM0P,WAAWnH,QAAQ,WAAY,SAACoH,EAAOC,GAAR,OAAc/K,EAAK+K,GAAGF,aAa/D,SAASG,IAAgD,IAArC7P,EAAqC2D,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAA7B,GAAIgH,EAAyBhH,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAlB,GAAI4E,EAAc5E,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACxD,OAAO3D,EAAMuI,QACT,IAAIuH,OAAOnF,EAAK+E,WAAWnH,QAAQ,6BAA6B,QAAS,KACzEA,EAAQmH,YAKT,SAASK,IACZ,OADoCpM,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IACnB+L,WAAWnH,QAAQ,SAAU,SAAArB,GAAA,OAAQA,EAAKuB,OAAO,GAAGuH,cAAgB9I,EAAK+I,OAAO,GAAGC,gBAqB7F,SAASC,IAAwB,IAChC7O,GADgCqC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IACb+L,WAMnB,OAHApO,EArBG,WAAkC,IACjCA,GADiCqC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IACd+L,WAYnB,OATApO,EAASuO,EAAWvO,EAAQ,IAAK,KAGjCA,EAASuO,EAAWvO,EAAQ,IAAK,KAM1BuO,EAHPvO,EAASyO,EAAYzO,GAGK,IAAK,IAQtB8O,CAAa9O,IAGRmH,OAAO,GAAGyH,cAAgB5O,EAAO+O,MAAM,GAalD,SAASC,EAAQxO,GACpB,IAAM2D,EAAU0B,SAASF,cAAc,OAEvC,OADAxB,EAAQW,YAAYtE,GACb2D,EAAQ8K,UC3EnB,IAAMC,EAAO,WACkB,IAAvBzJ,EAAuBpD,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAjB,GAAIkL,EAAalL,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACnB,GAAI3C,EAAGgC,MAAM+D,IAAQ/F,EAAGgC,MAAM6L,GAC1B,MAAO,GAGX,IAAIvN,EAAS2N,EAAQJ,EAAO2B,KAAMzJ,GAElC,GAAI/F,EAAGgC,MAAM1B,GACT,MAAO,GAGX,IAAMiH,EAAU,CACZkI,aAAc5B,EAAO6B,SACrBC,UAAW9B,EAAO+B,OAOtB,OAJAtQ,OAAOkG,QAAQ+B,GAASpE,QAAQ,SAAAuC,GAAkB,IAAAmK,EAAAjK,EAAAF,EAAA,GAAhBK,EAAgB8J,EAAA,GAAXlK,EAAWkK,EAAA,GAC9CvP,EAASuO,EAAWvO,EAAQyF,EAAKJ,KAG9BrF,GCtBR,SAASwP,EAAOpP,GACnB,OAAKV,EAAGU,MAAMA,GAIPA,EAAM+E,OAAO,SAACsK,EAAMlL,GAAP,OAAiBnE,EAAMsP,QAAQD,KAAUlL,IAHlDnE,MCFTuP,EAAAA,WACF,SAAAA,EAAYhD,GAAQiD,EAAApN,KAAAmN,GAChBnN,KAAKqN,QAAUlD,EAAOY,OAAOuC,QAAQD,QACrCrN,KAAKiD,IAAMkH,EAAOY,OAAOuC,QAAQrK,0CAuBjCA,GACA,IAAKkK,EAAQ/N,YAAcY,KAAKqN,QAC5B,OAAO,KAGX,IAAME,EAAQhP,OAAOiP,aAAaC,QAAQzN,KAAKiD,KAE/C,GAAI/F,EAAGgC,MAAMqO,GACT,OAAO,KAGX,IAAMG,EAAOC,KAAKC,MAAML,GAExB,OAAOrQ,EAAGM,OAAOyF,IAAQA,EAAIjG,OAAS0Q,EAAKzK,GAAOyK,8BAGlDtQ,GAEA,GAAK+P,EAAQ/N,WAAcY,KAAKqN,SAK3BnQ,EAAGE,OAAOA,GAAf,CAKA,IAAIkQ,EAAUtN,KAAKT,MAGfrC,EAAGgC,MAAMoO,KACTA,EAAU,IAIdpD,EAAOoD,EAASlQ,GAGhBmB,OAAOiP,aAAaK,QAAQ7N,KAAKiD,IAAK0K,KAAKG,UAAUR,yCAzDrD,IACI,KAAM,iBAAkB/O,QACpB,OAAO,EAUX,OAHAA,OAAOiP,aAAaK,QAJP,UAAA,WAKbtP,OAAOiP,aAAaO,WALP,YAON,EACT,MAAO9O,GACL,OAAO,SAtBbkO,GCFS,SAASa,EAAMnP,GAA4B,IAAvBoP,EAAuBpO,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAR,OAC9C,OAAO,IAAIqO,QAAQ,SAACC,EAASC,GACzB,IACI,IAAMC,EAAU,IAAIC,eAGpB,KAAM,oBAAqBD,GACvB,OAGJA,EAAQ7O,iBAAiB,OAAQ,WAC7B,GAAqB,SAAjByO,EACA,IACIE,EAAQR,KAAKC,MAAMS,EAAQE,eAC7B,MAAOtP,GACLkP,EAAQE,EAAQE,mBAGpBJ,EAAQE,EAAQG,YAIxBH,EAAQ7O,iBAAiB,QAAS,WAC9B,MAAM,IAAIiP,MAAMJ,EAAQK,UAG5BL,EAAQM,KAAK,MAAO9P,GAAK,GAGzBwP,EAAQJ,aAAeA,EAEvBI,EAAQO,OACV,MAAO3P,GACLmP,EAAOnP,MC7BJ,SAAS4P,GAAWhQ,EAAKgG,GACpC,GAAK3H,EAAGM,OAAOqB,GAAf,CAIA,IACMiQ,EAAQ5R,EAAGM,OAAOqH,GAGlBkK,EAAS,WAAA,OAAsC,OAAhC1L,SAAS2L,eAAenK,IAEvCoK,EAAS,SAAChJ,EAAWiJ,GACvBjJ,EAAUwG,UAAYyC,EAGlBJ,GAASC,KAKb1L,SAASkD,KAAK4I,sBAAsB,aAAclJ,IAItD,IAAK6I,IAAUC,IAAU,CACrB,IAAMK,EAAajC,EAAQ/N,UAGrB6G,EAAY5C,SAASF,cAAc,OAQzC,GAPA8C,EAAU/C,aAAa,SAAU,IAE7B4L,GACA7I,EAAU/C,aAAa,KAAM2B,GAI7BuK,EAAY,CACZ,IAAMC,EAAS9Q,OAAOiP,aAAaC,QAAW6B,SAAUzK,GAGxD,GAFsB,OAAXwK,EAEG,CACV,IAAMH,EAAOvB,KAAKC,MAAMyB,GACxBJ,EAAOhJ,EAAWiJ,EAAKK,UAK/BvB,EAAMnP,GACD2Q,KAAK,SAAAC,GACEvS,EAAGgC,MAAMuQ,KAITL,GACA7Q,OAAOiP,aAAaK,QACbyB,SAAUzK,EACb8I,KAAKG,UAAU,CACXyB,QAASE,KAKrBR,EAAOhJ,EAAWwJ,MAErBC,MAAM,gBClEZ,IAAMC,GAAW,SAAA9M,GAAA,OAAS+M,SAAU/M,EAAQ,GAAK,GAAM,GAAI,KACrDgN,GAAa,SAAAhN,GAAA,OAAS+M,SAAU/M,EAAQ,GAAM,GAAI,KAClDiN,GAAa,SAAAjN,GAAA,OAAS+M,SAAS/M,EAAQ,GAAI,KAGjD,SAASkN,KAA6D,IAAlDC,EAAkDnQ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAA3C,EAAGoQ,EAAwCpQ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAAlBqQ,EAAkBrQ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAEzE,IAAK3C,EAAGG,OAAO2S,GACX,OAAOD,GAAW,KAAME,EAAcC,GAI1C,IAAMvE,EAAS,SAAA9I,GAAA,OAAS,IAAIA,GAAQ0J,OAAO,IAGvC4D,EAAQR,GAASK,GACfI,EAAOP,GAAWG,GAClBK,EAAOP,GAAWE,GAUxB,OAPIC,GAAgBE,EAAQ,EACxBA,GAAA,IAEAA,EAAQ,IAIFD,GAAYF,EAAO,EAAI,IAAM,IAAKG,EAAQxE,EAAOyE,GAA3D,IAAoEzE,EAAO0E,GCF/E,IAAMC,GAAW,CAEbC,WAFa,WAGT,IACMC,EADM,IAAI1R,IAAIkB,KAAK+K,OAAO0F,QAASlS,OAAOmS,UAC/BC,OAASpS,OAAOmS,SAASC,MAAS3J,EAAQC,OAAS1I,OAAOqS,cAE3E,MAAO,CACH/R,IAAKmB,KAAK+K,OAAO0F,QACjBD,KAAAA,IAKRK,aAba,WAcT,IAyCI,OAxCA7Q,KAAK0B,SAAS4O,SAAWpK,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUR,SAAS3O,SAG9E3B,KAAK0B,SAASqP,QAAU,CACpBpG,KAAM3E,EAAYtF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUC,QAAQpG,MAC3DqG,MAAO9K,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUC,QAAQC,OAC3DC,QAAS/K,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUC,QAAQE,SAC7DC,OAAQhL,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUC,QAAQG,QAC5DC,YAAajL,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUC,QAAQI,aACjEC,KAAMlL,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUC,QAAQK,MAC1DzI,IAAKzC,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUC,QAAQpI,KACzDE,QAAS3C,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUC,QAAQlI,SAC7DwI,SAAUnL,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUC,QAAQM,UAC9DC,SAAUpL,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUC,QAAQO,UAC9DC,WAAYrL,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUC,QAAQQ,aAIpEvR,KAAK0B,SAAS8P,SAAWtL,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUU,UAGrExR,KAAK0B,SAAS+P,OAAS,CACnBC,KAAMxL,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUW,OAAOC,MACzDC,OAAQzL,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUW,OAAOE,SAI/D3R,KAAK0B,SAASkQ,QAAU,CACpBC,OAAQ3L,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUc,QAAQC,QAC5DvH,YAAapE,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUc,QAAQtH,aACjEwH,SAAU5L,EAAWxF,KAAKV,KAAMA,KAAK+K,OAAO+F,UAAUc,QAAQE,WAI9D5U,EAAGc,QAAQgC,KAAK0B,SAAS8P,YACzBxR,KAAK0B,SAASkQ,QAAQG,YAAc/R,KAAK0B,SAAS8P,SAASrL,cAAvB,IAC5BnG,KAAK+K,OAAOiH,WAAWC,WAI5B,EACT,MAAOC,GAOL,OALAlS,KAAKiL,MAAMkH,KAAK,kEAAmED,GAGnFlS,KAAKoS,sBAAqB,IAEnB,IAKfC,WApEa,SAoEF/R,EAAMmC,GACb,IACMgO,EAAUH,GAASC,WAAW7P,KAAKV,MACnCsS,GAAe7B,EAAQD,KAAqB,GAAdC,EAAQ5R,KAAtC,IAAkDmB,KAAK+K,OAAOwH,WAG9DC,EAAOnP,SAASoP,gBALJ,6BAK+B,OACjDjQ,EACIgQ,EACAtI,EAAOzH,EAAY,CACfiQ,KAAM,eACNC,UAAW,WAKnB,IAAMC,EAAMvP,SAASoP,gBAfH,6BAe8B,OAC1CrH,EAAUkH,EAAV,IAAsBhS,EAc5B,MATI,SAAUsS,EACVA,EAAIC,eAAe,+BAAgC,OAAQzH,GAE3DwH,EAAIC,eAAe,+BAAgC,aAAczH,GAIrEoH,EAAKlQ,YAAYsQ,GAEVJ,GAIXM,YAvGa,SAuGDxS,GAAiB,IAAXyS,EAAWlT,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAMfuD,EAJa,CACfuF,IAAK,MACLE,QAAS,WAEWvI,IAASoM,EAASpM,EAAMN,KAAK+K,QAKrD,OAAO5H,EAAc,OAHF3G,OAAO8E,OAAO,GAAIyR,EAAM,CACvCnO,MAAO,CAACmO,EAAKnO,MAAO5E,KAAK+K,OAAOiH,WAAWjN,QAAQpC,OAAOtG,SAAS2W,KAAK,OAEnC5P,IAI7C6P,YAtHa,SAsHD7P,GACR,GAAIlG,EAAGgC,MAAMkE,GACT,OAAO,KAGX,IAAM8P,EAAQ/P,EAAc,OAAQ,CAChCyB,MAAO5E,KAAK+K,OAAOiH,WAAWmB,KAAKtQ,QAavC,OAVAqQ,EAAM5Q,YACFa,EACI,OACA,CACIyB,MAAO5E,KAAK+K,OAAOiH,WAAWmB,KAAKD,OAEvC9P,IAID8P,GAIXE,aA7Ia,SA6IAC,EAAYN,GACrB,IAAMO,EAASnQ,EAAc,UACvBV,EAAajG,OAAO8E,OAAO,GAAIyR,GACjCzS,EAAO+L,EAAYgH,GAEnBzT,GAAS,EACT2T,OAAAA,EACAf,OAAAA,EACAgB,OAAAA,EACAC,OAAAA,EAeJ,OAbM,SAAUhR,IACZA,EAAWnC,KAAO,UAGlB,UAAWmC,EACNA,EAAWmC,MAAMmB,SAAS/F,KAAK+K,OAAOiH,WAAW0B,WAClDjR,EAAWmC,OAAX,IAAwB5E,KAAK+K,OAAOiH,WAAW0B,SAGnDjR,EAAWmC,MAAQ5E,KAAK+K,OAAOiH,WAAW0B,QAItCL,GACJ,IAAK,OACDzT,GAAS,EACT2T,EAAQ,OACRC,EAAe,QACfhB,EAAO,OACPiB,EAAc,QACd,MAEJ,IAAK,OACD7T,GAAS,EACT2T,EAAQ,OACRC,EAAe,SACfhB,EAAO,SACPiB,EAAc,QACd,MAEJ,IAAK,WACD7T,GAAS,EACT2T,EAAQ,iBACRC,EAAe,kBACfhB,EAAO,eACPiB,EAAc,cACd,MAEJ,IAAK,aACD7T,GAAS,EACT2T,EAAQ,kBACRC,EAAe,iBACfhB,EAAO,mBACPiB,EAAc,kBACd,MAEJ,IAAK,aACDhR,EAAWmC,OAAX,IAAwB5E,KAAK+K,OAAOiH,WAAW0B,QAA/C,aACApT,EAAO,OACPiT,EAAQ,OACRf,EAAO,OACP,MAEJ,QACIe,EAAQjT,EACRkS,EAAOa,EAIXzT,GAEA0T,EAAOhR,YAAYgO,GAAS+B,WAAW3R,KAAKV,KAAMyT,EAAa,CAAE7O,MAAO,mBACxE0O,EAAOhR,YAAYgO,GAAS+B,WAAW3R,KAAKV,KAAMwS,EAAM,CAAE5N,MAAO,uBAGjE0O,EAAOhR,YAAYgO,GAASwC,YAAYpS,KAAKV,KAAMwT,EAAc,CAAE5O,MAAO,oBAC1E0O,EAAOhR,YAAYgO,GAASwC,YAAYpS,KAAKV,KAAMuT,EAAO,CAAE3O,MAAO,0BAEnE0O,EAAOhR,YAAYgO,GAAS+B,WAAW3R,KAAKV,KAAMwS,IAClDc,EAAOhR,YAAYgO,GAASwC,YAAYpS,KAAKV,KAAMuT,KAIvDrJ,EAAOzH,EAAYwB,EAA0BjE,KAAK+K,OAAO+F,UAAUC,QAAQzQ,GAAOmC,IAElFD,EAAc8Q,EAAQ7Q,GAGT,SAATnC,GACKpD,EAAGU,MAAMoC,KAAK0B,SAASqP,QAAQzQ,MAChCN,KAAK0B,SAASqP,QAAQzQ,GAAQ,IAGlCN,KAAK0B,SAASqP,QAAQzQ,GAAME,KAAK8S,IAEjCtT,KAAK0B,SAASqP,QAAQzQ,GAAQgT,EAIlC,IAAM9O,EAAYxE,KAAK+K,OAAOiH,WAAW2B,eAWzC,OAVAnX,OAAO8C,eAAegU,EAAQ,UAAW,CACrCM,YAAY,EACZrU,IAFqC,WAGjC,OAAOiG,EAAS8N,EAAQ9O,IAE5B4F,IALqC,WAKhB,IAAjByJ,EAAiBhU,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GACjBsF,EAAYmO,EAAQ9O,EAAWqP,MAIhCP,GAIXQ,YAhQa,SAgQDxT,EAAMmC,GAEd,IAAMvG,EAAQiH,EACV,QACA+G,EACIjG,EAA0BjE,KAAK+K,OAAO+F,UAAUW,OAAOnR,IACvD,CACIA,KAAM,QACNyT,IAAK,EACLC,IAAK,IACLC,KAAM,IACNpR,MAAO,EACPqR,aAAc,MAEdxB,KAAM,SACNyB,aAAczH,EAASpM,EAAMN,KAAK+K,QAClCqJ,gBAAiB,EACjBC,gBAAiB,IACjBC,gBAAiB,GAErB7R,IASR,OALAzC,KAAK0B,SAAS+P,OAAOnR,GAAQpE,EAG7BoU,GAASiE,gBAAgB7T,KAAKV,KAAM9D,GAE7BA,GAIXsY,eAjSa,SAiSElU,EAAMmC,GACjB,IAAM+O,EAAWrO,EACb,WACA+G,EACIjG,EAA0BjE,KAAK+K,OAAO+F,UAAUc,QAAQtR,IACxD,CACIyT,IAAK,EACLC,IAAK,IACLnR,MAAO,EACP6P,KAAM,eACN+B,eAAe,GAEnBhS,IAKR,GAAa,WAATnC,EAAmB,CACnBkR,EAASlP,YAAYa,EAAc,OAAQ,KAAM,MAEjD,IAAMuR,EAAY,CACdC,OAAQ,SACR9C,OAAQ,YACVvR,GACIsU,EAASF,EAAYhI,EAASgI,EAAW1U,KAAK+K,QAAU,GAE9DyG,EAASlO,UAAT,KAA0BsR,EAAOxI,cAKrC,OAFApM,KAAK0B,SAASkQ,QAAQtR,GAAQkR,EAEvBA,GAIXqD,WApUa,SAoUFvU,GACP,IAAMmC,EAAawB,EAA0BjE,KAAK+K,OAAO+F,UAAUc,QAAQtR,IAErE2F,EAAY9C,EACd,MACA+G,EAAOzH,EAAY,CACfmC,MAAAA,cAAqBnC,EAAWmC,MAChCuP,aAAczH,EAASpM,EAAMN,KAAK+K,UAEtC,SAMJ,OAFA/K,KAAK0B,SAASkQ,QAAQtR,GAAQ2F,EAEvBA,GAIX6O,eAvVa,SAAAlS,GAuV+D,IAA3DC,EAA2DD,EAA3DC,MAAOkS,EAAoDnS,EAApDmS,KAAMzU,EAA8CsC,EAA9CtC,KAAMwM,EAAwClK,EAAxCkK,MAAwCkI,EAAApS,EAAjCsQ,MAAAA,OAAiCpT,IAAAkV,EAAzB,KAAyBA,EAAAC,EAAArS,EAAnBsS,QAAAA,OAAmBpV,IAAAmV,GAAAA,EAClEhI,EAAO9J,EAAc,MAErBoQ,EAAQpQ,EAAc,QAAS,CACjCyB,MAAO5E,KAAK+K,OAAOiH,WAAW0B,UAG5ByB,EAAQhS,EACV,QACA+G,EAAOjG,EAA0BjE,KAAK+K,OAAO+F,UAAUW,OAAOnR,IAAQ,CAClEA,KAAM,QACN8U,KAAAA,QAAc9U,EACduC,MAAAA,EACAqS,QAAAA,EACAtQ,MAAO,mBAITyQ,EAAOlS,EAAc,OAAQ,CAAE4B,OAAQ,KAE7CwO,EAAMjR,YAAY6S,GAClB5B,EAAMjR,YAAY+S,GAClB9B,EAAM+B,mBAAmB,YAAaxI,GAElC5P,EAAGc,QAAQkV,IACXK,EAAMjR,YAAY4Q,GAGtBjG,EAAK3K,YAAYiR,GACjBwB,EAAKzS,YAAY2K,IAIrB8C,WAxXa,WAwX0B,IAA5BC,EAA4BnQ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAArB,EAAGqQ,EAAkBrQ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAEnC,OAAK3C,EAAGG,OAAO2S,GAORD,GAAWC,EAFCL,GAAS3P,KAAK8R,UAAY,EAET5B,GANzBF,GAUfuF,kBArYa,WAqYgD,IAA3ChK,EAA2C1L,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAlC,KAAMmQ,EAA4BnQ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAArB,EAAGqQ,EAAkBrQ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAEpD3C,EAAGc,QAAQuN,IAAYrO,EAAGG,OAAO2S,KAKtCzE,EAAOjI,UAAYgN,GAASP,WAAWC,EAAME,KAIjDsF,aAhZa,WAiZJxV,KAAKZ,UAAUqJ,KAKhBvL,EAAGc,QAAQgC,KAAK0B,SAAS+P,OAAOE,SAChCrB,GAASmF,SAAS/U,KAAKV,KAAMA,KAAK0B,SAAS+P,OAAOE,OAAQ3R,KAAK0V,MAAQ,EAAI1V,KAAK2R,QAIhFzU,EAAGc,QAAQgC,KAAK0B,SAASqP,QAAQK,QACjCpR,KAAK0B,SAASqP,QAAQK,KAAKyC,QAAU7T,KAAK0V,OAAyB,IAAhB1V,KAAK2R,UAKhE8D,SAjaa,SAiaJlK,GAAmB,IAAX1I,EAAWhD,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAH,EAChB3C,EAAGc,QAAQuN,KAKhBA,EAAO1I,MAAQA,EAGfyN,GAASiE,gBAAgB7T,KAAKV,KAAMuL,KAIxCoK,eA9aa,SA8aEvX,GAAO,IAAA2B,EAAAC,KAClB,GAAKA,KAAKZ,UAAUqJ,IAAOvL,EAAGkB,MAAMA,GAApC,CAIA,IP9bsBwX,EAAS5B,EO8b3BnR,EAAQ,EAkBZ,GAAIzE,EACA,OAAQA,EAAMkC,MAEV,IAAK,aACL,IAAK,UACL,IAAK,SPrdSsV,EOsdY5V,KAAKsK,YPtdR0J,EOsdqBhU,KAAK8R,SAA7CjP,EPrdA,IAAZ+S,GAAyB,IAAR5B,GAAa1W,OAAOC,MAAMqY,IAAYtY,OAAOC,MAAMyW,GAC7D,GAGH4B,EAAU5B,EAAM,KAAK6B,QAAQ,GOodF,eAAfzX,EAAMkC,MACNgQ,GAASmF,SAAS/U,KAAKV,KAAMA,KAAK0B,SAAS+P,OAAOC,KAAM7O,GAG5D,MAGJ,IAAK,UACL,IAAK,YAjCO,SAAC0I,EAAQrP,GACzB,IAAM2G,EAAQ3F,EAAGG,OAAOnB,GAASA,EAAQ,EACnCsV,EAAWtU,EAAGc,QAAQuN,GAAUA,EAASxL,EAAK2B,SAASkQ,QAAQC,OAGrE,GAAI3U,EAAGc,QAAQwT,GAAW,CACtBA,EAAS3O,MAAQA,EAGjB,IAAM0Q,EAAQ/B,EAASsE,qBAAqB,QAAQ,GAChD5Y,EAAGc,QAAQuV,KACXA,EAAM5P,WAAW,GAAGoS,UAAYlT,IAuBhCmT,CAAYhW,KAAK0B,SAASkQ,QAAQC,OAAwB,IAAhB7R,KAAKiW,aAW/D1B,gBAlea,SAkeGhJ,GAEZ,IAAMxE,EAAQ7J,EAAGkB,MAAMmN,GAAUA,EAAOA,OAASA,EAGjD,GAAKrO,EAAGc,QAAQ+I,IAAyC,UAA/BA,EAAMgD,aAAa,QAA7C,CAKA,GAAItE,EAAQsB,EAAO/G,KAAK+K,OAAO+F,UAAUW,OAAOC,MAAO,CACnD3K,EAAM7D,aAAa,gBAAiBlD,KAAKsK,aACzC,IAAMA,EAAcgG,GAASP,WAAW/P,KAAKsK,aACvCwH,EAAWxB,GAASP,WAAW/P,KAAK8R,UACpCnG,EAASe,EAAS,YAAa1M,KAAK+K,QAC1ChE,EAAM7D,aACF,iBACAyI,EAAOlH,QAAQ,gBAAiB6F,GAAa7F,QAAQ,aAAcqN,SAEpE,GAAIrM,EAAQsB,EAAO/G,KAAK+K,OAAO+F,UAAUW,OAAOE,QAAS,CAC5D,IAAMuE,EAAwB,IAAdnP,EAAMlE,MACtBkE,EAAM7D,aAAa,gBAAiBgT,GACpCnP,EAAM7D,aAAa,iBAAqBgT,EAAxC,UAEAnP,EAAM7D,aAAa,gBAAiB6D,EAAMlE,OAIzCmE,EAAQG,UAKbJ,EAAMD,MAAMqP,YAAY,UAAcpP,EAAMlE,MAAQkE,EAAMiN,IAAM,IAAhE,OAIJoC,kBAvgBa,SAugBKhY,GAAO,IAAAiY,EAAArW,KAErB,GACKA,KAAK+K,OAAOuL,SAAS5E,MACrBxU,EAAGc,QAAQgC,KAAK0B,SAAS+P,OAAOC,OAChCxU,EAAGc,QAAQgC,KAAK0B,SAASkQ,QAAQG,cAChB,IAAlB/R,KAAK8R,SAJT,CAUA,IAAIoE,EAAU,EACRK,EAAavW,KAAK0B,SAAS8P,SAASgF,wBACpCC,EAAazW,KAAK+K,OAAOiH,WAAWC,QAApC,YAEArS,EAAS,SAAA8W,GACXvR,EAAYkR,EAAK3U,SAASkQ,QAAQG,YAAa0E,EAAS7W,IAI5D,GAAII,KAAKwJ,MACL5J,GAAO,OADX,CAMA,GAAI1C,EAAGkB,MAAMA,GACT8X,EAAU,IAAMK,EAAWI,OAASvY,EAAMwY,MAAQL,EAAWM,UAC1D,CAAA,IAAIrR,EAASxF,KAAK0B,SAASkQ,QAAQG,YAAa0E,GAGnD,OAFAP,EAAUY,WAAW9W,KAAK0B,SAASkQ,QAAQG,YAAYjL,MAAM+P,KAAM,IAMnEX,EAAU,EACVA,EAAU,EACHA,EAAU,MACjBA,EAAU,KAId5F,GAASiF,kBAAkB7U,KAAKV,KAAMA,KAAK0B,SAASkQ,QAAQG,YAAa/R,KAAK8R,SAAW,IAAMoE,GAG/FlW,KAAK0B,SAASkQ,QAAQG,YAAYjL,MAAM+P,KAAUX,EAAlD,IAIIhZ,EAAGkB,MAAMA,IAAU,CAAC,aAAc,cAAc2H,SAAS3H,EAAMkC,OAC/DV,EAAsB,eAAfxB,EAAMkC,SAKrByW,WA/jBa,SA+jBF3Y,GAEP,IAAM4Y,GAAU9Z,EAAGc,QAAQgC,KAAK0B,SAASkQ,QAAQE,WAAa9R,KAAK+K,OAAOkM,WAG1E3G,GAASiF,kBAAkB7U,KACvBV,KACAA,KAAK0B,SAASkQ,QAAQtH,YACtB0M,EAAShX,KAAK8R,SAAW9R,KAAKsK,YAActK,KAAKsK,YACjD0M,GAIA5Y,GAAwB,eAAfA,EAAMkC,MAAyBN,KAAKoJ,MAAM8N,SAKvD5G,GAASqF,eAAejV,KAAKV,KAAM5B,IAIvC+Y,eArlBa,WAulBT,GAAKnX,KAAKZ,UAAUqJ,KAAQzI,KAAK+K,OAAOkM,aAAcjX,KAAKsK,aAA3D,CAQA,GAAItK,KAAK8R,UAALsF,KAAAC,IAAiB,EAAG,IAGpB,OAFAvS,EAAa9E,KAAK0B,SAASkQ,QAAQtH,aAAa,QAChDxF,EAAa9E,KAAK0B,SAAS8P,UAAU,GAKrCtU,EAAGc,QAAQgC,KAAK0B,SAAS+P,OAAOC,OAChC1R,KAAK0B,SAAS+P,OAAOC,KAAKxO,aAAa,gBAAiBlD,KAAK8R,UAIjE,IAAMwF,EAAcpa,EAAGc,QAAQgC,KAAK0B,SAASkQ,QAAQE,WAGhDwF,GAAetX,KAAK+K,OAAOwM,iBAAmBvX,KAAKuK,QACpD+F,GAASiF,kBAAkB7U,KAAKV,KAAMA,KAAK0B,SAASkQ,QAAQtH,YAAatK,KAAK8R,UAI9EwF,GACAhH,GAASiF,kBAAkB7U,KAAKV,KAAMA,KAAK0B,SAASkQ,QAAQE,SAAU9R,KAAK8R,UAI/ExB,GAAS8F,kBAAkB1V,KAAKV,QAIpCwX,UA5nBa,SA4nBHC,EAAS7X,GACfkF,EAAa9E,KAAK0B,SAAS2P,SAASqG,KAAKD,IAAW7X,IAIxD+X,eAjoBa,SAioBEtY,GAAS,IAAAuY,EAAA5X,KAEpB,GAAK9C,EAAGc,QAAQgC,KAAK0B,SAAS2P,SAASwG,MAAMhN,SAA7C,CAIA,IACMkK,EAAO/U,KAAK0B,SAAS2P,SAASwG,MAAMhN,QAAQ1E,cAAc,MAG5DjJ,EAAGU,MAAMyB,KACTW,KAAKX,QAAQwL,QAAUmC,EAAO3N,GAASsD,OAAO,SAAAkI,GAAA,OAAW+M,EAAK7M,OAAOF,QAAQxL,QAAQ0G,SAAS8E,MAIlG,IAAMjL,GAAU1C,EAAGgC,MAAMc,KAAKX,QAAQwL,UAAY7K,KAAKX,QAAQwL,QAAQ7N,OAAS,EAOhF,GANAsT,GAASkH,UAAU9W,KAAKV,KAVX,UAUuBJ,GAGpC0Q,GAASwH,UAAUpX,KAAKV,MAGnBJ,EAAL,CAKA8D,EAAaqR,GAcb/U,KAAKX,QAAQwL,QACRkN,KAAK,SAACC,EAAGC,GACN,IAAMC,EAAUN,EAAK7M,OAAOF,QAAQxL,QACpC,OAAO6Y,EAAQhL,QAAQ8K,GAAKE,EAAQhL,QAAQ+K,GAAK,GAAK,IAEzD5X,QAAQ,SAAAwK,GACLyF,GAASwE,eAAepU,KAAKkX,EAAM,CAC/B/U,MAAOgI,EACPkK,KAAAA,EACAzU,KA5CC,UA6CDwM,MAAOwD,GAAS6H,SAASzX,KAAKkX,EAAM,UAAW/M,GAC/CqI,MAtBK,SAAArI,GACb,IAAM0I,EAAQ7G,EAAA,gBAAyB7B,EAAW+M,EAAK7M,QAEvD,OAAKwI,EAAMvW,OAIJsT,GAAS2C,YAAYvS,KAAKkX,EAAMrE,GAH5B,KAkBI6E,CAASvN,OAI5ByF,GAAS+H,cAAc3X,KAAKV,KAlDf,UAkD2B+U,MAI5CoD,SA7rBa,SA6rBJV,EAAS5U,GACd,OAAQ4U,GACJ,IAAK,QACD,OAAiB,IAAV5U,EAAc6J,EAAS,SAAU1M,KAAK+K,QAAalI,EAAnD,UAEX,IAAK,UACD,GAAI3F,EAAGG,OAAOwF,GAAQ,CAClB,IAAM0Q,EAAQ7G,EAAA,gBAAyB7J,EAAS7C,KAAK+K,QAErD,OAAKwI,EAAMvW,OAIJuW,EAHO1Q,EAAV,IAMR,OAAOoJ,EAAYpJ,GAEvB,IAAK,WACD,OAAOyO,GAAS6G,SAASzX,KAAKV,MAElC,QACI,OAAO,OAKnBqY,cAxtBa,SAwtBCZ,EAASxR,EAAW/J,GAC9B,IAAMoc,EAAOtY,KAAK0B,SAAS2P,SAASwG,MAAMJ,GACtC5U,EAAQ,KACRkS,EAAO9O,EAEX,GAAgB,aAAZwR,EACA5U,EAAQ7C,KAAKuY,iBACV,CASH,GARA1V,EAAS3F,EAAGgC,MAAMhD,GAAiB8D,KAAKyX,GAAbvb,EAGvBgB,EAAGgC,MAAM2D,KACTA,EAAQ7C,KAAK+K,OAAO0M,GAASe,UAI5Btb,EAAGgC,MAAMc,KAAKX,QAAQoY,MAAczX,KAAKX,QAAQoY,GAAS1R,SAASlD,GAEpE,YADA7C,KAAKiL,MAAMkH,KAAX,yBAAyCtP,EAAzC,SAAuD4U,GAK3D,IAAKzX,KAAK+K,OAAO0M,GAASpY,QAAQ0G,SAASlD,GAEvC,YADA7C,KAAKiL,MAAMkH,KAAX,sBAAsCtP,EAAtC,SAAoD4U,GAW5D,GALKva,EAAGc,QAAQ+W,KACZA,EAAOuD,GAAQA,EAAKnS,cAAc,OAIjCjJ,EAAGc,QAAQ+W,GAAhB,CAKc/U,KAAK0B,SAAS2P,SAASqG,KAAKD,GAAStR,cAArC,IAAuDnG,KAAK+K,OAAOiH,WAAWmB,KAAKtQ,OAC3F4J,UAAY6D,GAAS6H,SAASzX,KAAKV,KAAMyX,EAAS5U,GAGxD,IAAM0I,EAASwJ,GAAQA,EAAK5O,cAAL,gBAAmCtD,EAAnC,MAEnB3F,EAAGc,QAAQuN,KACXA,EAAO2J,SAAU,KAoDzBuD,gBA1zBa,WA0zBK,IAAAC,EAAA1Y,KAGR+U,EAAO/U,KAAK0B,SAAS2P,SAASwG,MAAMvG,SAASnL,cAAc,MAC3DwS,EAASrH,GAASsH,UAAUlY,KAAKV,MAYvC,GATAsQ,GAASkH,UAAU9W,KAAKV,KALX,WAKuB2Y,EAAO3b,QAG3C0G,EAAaqR,GAGbzE,GAASwH,UAAUpX,KAAKV,MAGnB2Y,EAAO3b,OAAZ,CAKA,IAAMqC,EAAUsZ,EAAO1O,IAAI,SAACvL,EAAOmE,GAAR,MAAmB,CAC1CA,MAAAA,EACAqS,QAASwD,EAAKpH,SAASuH,SAAWH,EAAKH,eAAiB1V,EACxDiK,MAAOwE,GAAS6G,SAASzX,KAAKgY,EAAMha,GACpCwU,MAAOxU,EAAMoa,UAAYxI,GAAS2C,YAAYvS,KAAKgY,EAAMha,EAAMoa,SAAS5M,eACxE6I,KAAAA,EACAzU,KAAM,cAIVjB,EAAQ0Z,QAAQ,CACZlW,OAAQ,EACRqS,SAAUlV,KAAKsR,SAASuH,QACxB/L,MAAOJ,EAAS,WAAY1M,KAAK+K,QACjCgK,KAAAA,EACAzU,KAAM,aAIVjB,EAAQgB,QAAQiQ,GAASwE,eAAekE,KAAKhZ,OAE7CsQ,GAAS+H,cAAc3X,KAAKV,KAxCf,WAwC2B+U,KAI5CkE,aAx2Ba,SAw2BA5Z,GAAS,IAAA6Z,EAAAlZ,KAElB,GAAKA,KAAK+K,OAAOuF,SAASvK,SAAS,aAAgB/F,KAAK+K,OAAOsG,SAAStL,SAAS,UAK5E7I,EAAGc,QAAQgC,KAAK0B,SAAS2P,SAASwG,MAAMsB,OAA7C,CAOIjc,EAAGU,MAAMyB,GACTW,KAAKX,QAAQ8Z,MAAQ9Z,GACdW,KAAKmJ,SAAWnJ,KAAKoZ,WAC5BpZ,KAAKX,QAAQ8Z,MAAQ,CAAC,GAAK,IAAM,EAAG,KAAM,IAAK,KAAM,IAIzDnZ,KAAKX,QAAQ8Z,MAAQnZ,KAAKX,QAAQ8Z,MAAMxW,OAAO,SAAAwW,GAAA,OAASD,EAAKnO,OAAOoO,MAAM9Z,QAAQ0G,SAASoT,KAG3F,IAAMvZ,GAAU1C,EAAGgC,MAAMc,KAAKX,QAAQ8Z,QAAUnZ,KAAKX,QAAQ8Z,MAAMnc,OAAS,EAO5E,GANAsT,GAASkH,UAAU9W,KAAKV,KAdX,QAcuBJ,GAGpC0Q,GAASwH,UAAUpX,KAAKV,MAGnBJ,EAAL,CAKA,IAAMmV,EAAO/U,KAAK0B,SAAS2P,SAASwG,MAAMsB,MAAMhT,cAAc,MAG9DzC,EAAaqR,GAGb/U,KAAKX,QAAQ8Z,MAAM9Y,QAAQ,SAAA8Y,GACvB7I,GAASwE,eAAepU,KAAKwY,EAAM,CAC/BrW,MAAOsW,EACPpE,KAAAA,EACAzU,KAnCK,QAoCLwM,MAAOwD,GAAS6H,SAASzX,KAAKwY,EAAM,QAASC,OAIrD7I,GAAS+H,cAAc3X,KAAKV,KAxCf,QAwC2B+U,MAI5C+C,UA/5Ba,WA+5BD,IACAJ,EAAS1X,KAAK0B,SAAS2P,SAAvBqG,KACFjB,GAAWvZ,EAAGgC,MAAMwY,IAASlb,OAAO6c,OAAO3B,GAAM4B,KAAK,SAAAC,GAAA,OAAQA,EAAIxU,SAExED,EAAa9E,KAAK0B,SAAS2P,SAAS8B,MAAOsD,IAI/C+C,WAv6Ba,SAu6BFpb,GAAO,IACNqb,EAASzZ,KAAK0B,SAAS2P,SAAvBoI,KACFnG,EAAStT,KAAK0B,SAASqP,QAAQM,SAGrC,GAAKnU,EAAGc,QAAQyb,IAAUvc,EAAGc,QAAQsV,GAArC,CAIA,IAAMoG,EAAOxc,EAAGO,QAAQW,GAASA,EAAQlB,EAAGc,QAAQyb,IAASA,EAAKxU,aAAa,UAE/E,GAAI/H,EAAGkB,MAAMA,GAAQ,CACjB,IAAMub,EAAazc,EAAGc,QAAQyb,IAASA,EAAKlU,SAASnH,EAAMmN,QACrDqO,EAAWxb,EAAMmN,SAAWvL,KAAK0B,SAASqP,QAAQM,SAKxD,GAAIsI,IAAgBA,IAAeC,GAAYF,EAC3C,OAIAE,GACAxb,EAAMyb,kBAKV3c,EAAGc,QAAQsV,IACXA,EAAOpQ,aAAa,gBAAiBwW,GAGrCxc,EAAGc,QAAQyb,KACX3U,EAAa2U,GAAOC,GACpBvU,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAWmB,KAAKxE,KAAM+K,GAEnEA,EACAD,EAAKvU,gBAAgB,YAErBuU,EAAKvW,aAAa,YAAa,MAM3C4W,WAr9Ba,SAq9BFP,GACP,IAAMQ,EAAQR,EAAItX,WAAU,GAC5B8X,EAAMjT,MAAMkT,SAAW,WACvBD,EAAMjT,MAAMmT,QAAU,EACtBF,EAAM7U,gBAAgB,UAGtBtI,MAAMiF,KAAKkY,EAAMjU,iBAAiB,gBAAgBzF,QAAQ,SAAAnE,GACtD,IAAMkZ,EAAOlZ,EAAM6N,aAAa,QAChC7N,EAAMgH,aAAa,OAAWkS,EAA9B,YAIJmE,EAAIpX,WAAWG,YAAYyX,GAG3B,IAAMpD,EAAQoD,EAAMG,YACdC,EAASJ,EAAMK,aAKrB,OAFA5W,EAAcuW,GAEP,CACHpD,MAAAA,EACAwD,OAAAA,IAKRE,QAl/Ba,WAk/BQ,IAAAC,EAAAta,KAAbuL,EAAa1L,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACLsT,EAASnT,KAAK0B,SAAS2P,SAAvB8B,KACFmF,EAAOjV,SAAS2L,eAAezD,GAGrC,GAAKrO,EAAGc,QAAQsa,IAK4B,aAA9BA,EAAKvO,aAAa,QAChC,CAMA,IAAM6L,EAAUzC,EAAKhN,cAAc,mCAC7BF,EAAY2P,EAAQzT,WAQ1B,GALAvF,MAAMiF,KAAKsR,EAAKrN,iBAAL,mBAAyC8P,EAAQ7L,aAAa,MAA9D,OAA0E1J,QAAQ,SAAAT,GACzFA,EAAOsD,aAAa,iBAAiB,KAIrC+E,EAAQwB,cAAgBxB,EAAQyB,cAAe,CAE/CzD,EAAUa,MAAM6P,MAAWf,EAAQsE,YAAnC,KACAjU,EAAUa,MAAMqT,OAAYvE,EAAQwE,aAApC,KAGA,IAAMG,EAAOjK,GAASwJ,WAAWpZ,KAAKV,KAAMsY,GAkB5C7X,EAAGC,KAAKV,KAAMiG,EAAWO,EAfT,SAAVgU,EAAUvb,GAERA,EAAEsM,SAAWtF,GAAc,CAAC,QAAS,UAAUF,SAAS9G,EAAEwb,gBAK9DxU,EAAUa,MAAM6P,MAAQ,GACxB1Q,EAAUa,MAAMqT,OAAS,GAGzBxZ,EAAID,KAAK4Z,EAAMrU,EAAWO,EAAoBgU,MAOlDvU,EAAUa,MAAM6P,MAAW4D,EAAK5D,MAAhC,KACA1Q,EAAUa,MAAMqT,OAAYI,EAAKJ,OAAjC,KAIJrV,EAAa8Q,GAAS,GACtBA,EAAQ1S,aAAa,YAAa,GAGlC4B,EAAawT,GAAM,GAEnB,IAAMZ,EAAO1R,EAAYtF,KAAKV,KAAjB,mBAA0CuL,EAA1C,MACb3O,MAAMiF,KAAK6V,GAAMrX,QAAQ,SAAAkZ,GACrBA,EAAIrW,aAAa,iBAAiB,KAEtCoV,EAAKpT,gBAAgB,YAGrBoT,EAAKxS,iBAAiB,2DAA2D,GAAG4U,UAKxFC,OA9jCa,SA8jCNzL,GAAM,IAAA0L,EAAA5a,KAET,GAAI9C,EAAGgC,MAAMc,KAAK+K,OAAOuF,UACrB,OAAO,KAIX,IAAMrK,EAAY9C,EAAc,MAAOc,EAA0BjE,KAAK+K,OAAO+F,UAAUR,SAAS3O,UAuBhG,GApBI3B,KAAK+K,OAAOuF,SAASvK,SAAS,YAC9BE,EAAU3D,YAAYgO,GAAS8C,aAAa1S,KAAKV,KAAM,YAIvDA,KAAK+K,OAAOuF,SAASvK,SAAS,WAC9BE,EAAU3D,YAAYgO,GAAS8C,aAAa1S,KAAKV,KAAM,WAIvDA,KAAK+K,OAAOuF,SAASvK,SAAS,SAC9BE,EAAU3D,YAAYgO,GAAS8C,aAAa1S,KAAKV,KAAM,SAIvDA,KAAK+K,OAAOuF,SAASvK,SAAS,iBAC9BE,EAAU3D,YAAYgO,GAAS8C,aAAa1S,KAAKV,KAAM,iBAIvDA,KAAK+K,OAAOuF,SAASvK,SAAS,YAAa,CAC3C,IAAMyL,EAAWrO,EAAc,MAAOc,EAA0BjE,KAAK+K,OAAO+F,UAAUU,WAetF,GAZAA,EAASlP,YACLgO,GAASwD,YAAYpT,KAAKV,KAAM,OAAQ,CACpC6E,GAAAA,aAAiBqK,EAAKrK,MAK9B2M,EAASlP,YAAYgO,GAASkE,eAAe9T,KAAKV,KAAM,WAKpDA,KAAK+K,OAAOuL,SAAS5E,KAAM,CAC3B,IAAMO,EAAU9O,EACZ,OACA,CACIyB,MAAO5E,KAAK+K,OAAOiH,WAAWC,SAElC,SAGJT,EAASlP,YAAY2P,GACrBjS,KAAK0B,SAASkQ,QAAQG,YAAcE,EAGxCjS,KAAK0B,SAAS8P,SAAWA,EACzBvL,EAAU3D,YAAYtC,KAAK0B,SAAS8P,UAmBxC,GAfIxR,KAAK+K,OAAOuF,SAASvK,SAAS,iBAC9BE,EAAU3D,YAAYgO,GAASuE,WAAWnU,KAAKV,KAAM,gBAIrDA,KAAK+K,OAAOuF,SAASvK,SAAS,aAC9BE,EAAU3D,YAAYgO,GAASuE,WAAWnU,KAAKV,KAAM,aAIrDA,KAAK+K,OAAOuF,SAASvK,SAAS,SAC9BE,EAAU3D,YAAYgO,GAAS8C,aAAa1S,KAAKV,KAAM,SAIvDA,KAAK+K,OAAOuF,SAASvK,SAAS,UAAW,CACzC,IAAM4L,EAASxO,EAAc,MAAO,CAChCyB,MAAO,iBAILnC,EAAa,CACfuR,IAAK,EACLC,KAAM,IACNpR,MAAO7C,KAAK+K,OAAO4G,QAIvBA,EAAOrP,YACHgO,GAASwD,YAAYpT,KACjBV,KACA,SACAkK,EAAOzH,EAAY,CACfoC,GAAAA,eAAmBqK,EAAKrK,OAKpC7E,KAAK0B,SAASiQ,OAASA,EAEvB1L,EAAU3D,YAAYqP,GAS1B,GALI3R,KAAK+K,OAAOuF,SAASvK,SAAS,aAC9BE,EAAU3D,YAAYgO,GAAS8C,aAAa1S,KAAKV,KAAM,aAIvDA,KAAK+K,OAAOuF,SAASvK,SAAS,cAAgB7I,EAAGgC,MAAMc,KAAK+K,OAAOsG,UAAW,CAC9E,IAAM8B,EAAOhQ,EAAc,MAAO,CAC9ByB,MAAO,aACPG,OAAQ,KAGZoO,EAAK7Q,YACDgO,GAAS8C,aAAa1S,KAAKV,KAAM,WAAY,CACzC6E,GAAAA,wBAA4BqK,EAAKrK,GACjCgW,iBAAiB,EACjBC,gBAAA,iBAAkC5L,EAAKrK,GACvCkW,iBAAiB,KAIzB,IAAMtB,EAAOtW,EAAc,OAAQ,CAC/ByB,MAAO,wBACPC,GAAAA,iBAAqBqK,EAAKrK,GAC1BE,OAAQ,GACRiW,mBAAA,wBAA4C9L,EAAKrK,GACjD6N,KAAM,UACNuI,UAAW,IAGTC,EAAQ/X,EAAc,OAEtBgY,EAAOhY,EAAc,MAAO,CAC9B0B,GAAAA,iBAAqBqK,EAAKrK,GAA1B,QACAmW,mBAAA,wBAA4C9L,EAAKrK,GACjD6N,KAAM,aAIJgF,EAAOvU,EAAc,KAAM,CAC7BuP,KAAM,YAIV1S,KAAK+K,OAAOsG,SAAShR,QAAQ,SAAAC,GACzB,IAAMiZ,EAAMpW,EAAc,KAAM,CAC5BuP,KAAM,MACN3N,OAAQ,KAGNuO,EAASnQ,EACX,SACA+G,EAAOjG,EAA0B2W,EAAK7P,OAAO+F,UAAUC,QAAQM,UAAW,CACtE/Q,KAAM,SACNsE,MAAUgW,EAAK7P,OAAOiH,WAAW0B,QAAjC,IAA4CkH,EAAK7P,OAAOiH,WAAW0B,QAAnE,YACA7O,GAAAA,iBAAqBqK,EAAKrK,GAA1B,IAAgCvE,EAAhC,OACAua,iBAAiB,EACjBC,gBAAA,iBAAkC5L,EAAKrK,GAAvC,IAA6CvE,EAC7Cya,iBAAiB,IAErBrO,EAASpM,EAAMsa,EAAK7P,SAGlBlI,EAAQM,EAAc,OAAQ,CAChCyB,MAAOgW,EAAK7P,OAAOiH,WAAWmB,KAAKtQ,QAIvCA,EAAM4J,UAAYyC,EAAK5O,GAEvBgT,EAAOhR,YAAYO,GACnB0W,EAAIjX,YAAYgR,GAChBoE,EAAKpV,YAAYiX,GAEjBqB,EAAKlZ,SAAS2P,SAASqG,KAAKpX,GAAQiZ,IAGxC4B,EAAK7Y,YAAYoV,GACjBwD,EAAM5Y,YAAY6Y,GAGlBnb,KAAK+K,OAAOsG,SAAShR,QAAQ,SAAAC,GACzB,IAAMgY,EAAOnV,EAAc,MAAO,CAC9B0B,GAAAA,iBAAqBqK,EAAKrK,GAA1B,IAAgCvE,EAChCyE,OAAQ,GACRiW,mBAAA,iBAAqC9L,EAAKrK,GAA1C,IAAgDvE,EAAhD,OACAoS,KAAM,WACNuI,UAAW,IAGTG,EAAOjY,EACT,SACA,CACI7C,KAAM,SACNsE,MAAUgW,EAAK7P,OAAOiH,WAAW0B,QAAjC,IAA4CkH,EAAK7P,OAAOiH,WAAW0B,QAAnE,SACAmH,iBAAiB,EACjBC,gBAAA,iBAAkC5L,EAAKrK,GAAvC,QACAkW,iBAAiB,GAErBrO,EAASpM,EAAMsa,EAAK7P,SAGxBuN,EAAKhW,YAAY8Y,GAEjB,IAAM/b,EAAU8D,EAAc,MAE9BmV,EAAKhW,YAAYjD,GACjB6b,EAAM5Y,YAAYgW,GAElBsC,EAAKlZ,SAAS2P,SAASwG,MAAMvX,GAAQgY,IAGzCmB,EAAKnX,YAAY4Y,GACjB/H,EAAK7Q,YAAYmX,GACjBxT,EAAU3D,YAAY6Q,GAEtBnT,KAAK0B,SAAS2P,SAASoI,KAAOA,EAC9BzZ,KAAK0B,SAAS2P,SAAS8B,KAAOA,EA+BlC,OA3BInT,KAAK+K,OAAOuF,SAASvK,SAAS,QAAUkC,EAAQU,KAChD1C,EAAU3D,YAAYgO,GAAS8C,aAAa1S,KAAKV,KAAM,QAIvDA,KAAK+K,OAAOuF,SAASvK,SAAS,YAAckC,EAAQY,SACpD5C,EAAU3D,YAAYgO,GAAS8C,aAAa1S,KAAKV,KAAM,YAIvDA,KAAK+K,OAAOuF,SAASvK,SAAS,eAC9BE,EAAU3D,YAAYgO,GAAS8C,aAAa1S,KAAKV,KAAM,eAIvDA,KAAK+K,OAAOuF,SAASvK,SAAS,eAC9B/F,KAAK0B,SAASuE,UAAU3D,YAAYgO,GAAS8C,aAAa1S,KAAKV,KAAM,eAGzEA,KAAK0B,SAAS4O,SAAWrK,EAErBjG,KAAKmJ,SACLmH,GAASqH,eAAejX,KAAKV,KAAM4J,EAAMI,kBAAkBtJ,KAAKV,OAGpEsQ,GAAS2I,aAAavY,KAAKV,MAEpBiG,GAIXoV,OAj0Ca,WAi0CJ,IAAAC,EAAAtb,KAEL,GAAIA,KAAK+K,OAAO8D,WAAY,CACxB,IAAM2D,EAAOlC,GAASC,WAAW7P,KAAKV,MAGlCwS,EAAKhC,MACL3B,GAAW2D,EAAK3T,IAAK,eAK7BmB,KAAK6E,GAAKuS,KAAKmE,MAAsB,IAAhBnE,KAAKoE,UAG1B,IAAIvV,EAAY,KAChBjG,KAAK0B,SAAS4O,SAAW,KAGzB,IAAMmL,EAAQ,CACV5W,GAAI7E,KAAK6E,GACT6W,SAAU1b,KAAK+K,OAAO6B,SACtBE,MAAO9M,KAAK+K,OAAO+B,OAEnBmC,GAAS,EAET/R,EAAGM,OAAOwC,KAAK+K,OAAOuF,WAAapT,EAAGc,QAAQgC,KAAK+K,OAAOuF,UAE1DrK,EAAYjG,KAAK+K,OAAOuF,SACjBpT,EAAGQ,SAASsC,KAAK+K,OAAOuF,UAG/BrK,EAAYjG,KAAK+K,OAAOuF,SAAS5P,KAAKV,KAAMyb,IAG5CxV,EAAYqK,GAASqK,OAAOja,KAAKV,KAAM,CACnC6E,GAAI7E,KAAK6E,GACT6W,SAAU1b,KAAK+K,OAAO6B,SACtBuM,MAAOnZ,KAAKmZ,MACZtO,QAAS7K,KAAK6K,QACdyG,SAAUA,GAAS6G,SAASzX,KAAKV,QAIrCiP,GAAS,GAIb,IAAMxK,EAAU,SAAAvI,GACZ,IAAIuT,EAASvT,EAMb,OAJAM,OAAOkG,QAAQ+Y,GAAOpb,QAAQ,SAAA0M,GAAkB,IAAAhK,EAAAD,EAAAiK,EAAA,GAAhB9J,EAAgBF,EAAA,GAAXF,EAAWE,EAAA,GAC5C0M,EAAS1D,EAAW0D,EAAX,IAAuBxM,EAAvB,IAA+BJ,KAGrC4M,GAIPR,IACI/R,EAAGM,OAAOwC,KAAK+K,OAAOuF,UACtBrK,EAAYxB,EAAQwB,GACb/I,EAAGc,QAAQiI,KAClBA,EAAUwG,UAAYhI,EAAQwB,EAAUwG,aAKhD,IZ94CgBzO,EY84CZuN,OAAAA,EAgCJ,GA7BIrO,EAAGM,OAAOwC,KAAK+K,OAAO+F,UAAUR,SAASrK,aACzCsF,EAASlI,SAAS8C,cAAcnG,KAAK+K,OAAO+F,UAAUR,SAASrK,YAI9D/I,EAAGc,QAAQuN,KACZA,EAASvL,KAAK0B,SAASuE,WAK3BsF,EADqBrO,EAAGc,QAAQiI,GAAa,wBAA0B,sBAClD,aAAcA,GAG/B/I,EAAGM,OAAOwC,KAAK+K,OAAO4Q,gBACtBpQ,EAAA,mBAA6B,aAAcvL,KAAK+K,OAAO4Q,eAItDze,EAAGc,QAAQgC,KAAK0B,SAAS4O,WAC1BA,GAASO,aAAanQ,KAAKV,MAI3BzB,OAAO+I,UAAUC,UAAUxB,SAAS,UZz6CxB/H,EY06CJuN,EZz6ChBqQ,WAAW,WACP9W,EAAa9G,GAAS,GACtBA,EAAQ6d,aACR/W,EAAa9G,GAAS,IACvB,IYy6CKgC,KAAK+K,OAAOuL,SAAShG,SAAU,CAAA,IAAAwL,EACG9b,KAAK+K,OAA/BiH,EADuB8J,EACvB9J,WAAYlB,EADWgL,EACXhL,UACdxM,EAAcwM,EAAUR,SAAS3O,QAAjC,IAA4CmP,EAAUiL,OAAtD,KAAiE/J,EAAWjN,OAC5EgX,EAAS/V,EAAYtF,KAAKV,KAAMsE,GAEtC1H,MAAMiF,KAAKka,GAAQ1b,QAAQ,SAAAkT,GACvBpO,EAAYoO,EAAO+H,EAAKvQ,OAAOiH,WAAWjN,QAAQ,GAClDI,EAAYoO,EAAO+H,EAAKvQ,OAAOiH,WAAWC,SAAS,QCj8C5D,SAAS+J,GAAS9f,GAAoB,IACrC2C,EAAM3C,EAEV,KAHyC2D,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAG/B,CACN,IAAMoc,EAAS5Y,SAASF,cAAc,KACtC8Y,EAAOC,KAAOrd,EACdA,EAAMod,EAAOC,KAGjB,IACI,OAAO,IAAIpd,IAAID,GACjB,MAAOI,GACL,OAAO,MAKR,SAASkd,GAAejgB,GAC3B,IAAMkgB,EAAS,IAAIC,gBAQnB,OANInf,EAAGE,OAAOlB,IACVM,OAAOkG,QAAQxG,GAAOmE,QAAQ,SAAAuC,GAAkB,IAAAmK,EAAAjK,EAAAF,EAAA,GAAhBK,EAAgB8J,EAAA,GAAXlK,EAAWkK,EAAA,GAC5CqP,EAAOhS,IAAInH,EAAKJ,KAIjBuZ,ECbX,IAAM9K,GAAW,CAEbgL,MAFa,WAIT,GAAKtc,KAAKZ,UAAUqJ,GAKpB,IAAKzI,KAAKuc,SAAWvc,KAAKwc,WAAcxc,KAAKmJ,UAAYlB,EAAQsB,WAGzDrM,EAAGU,MAAMoC,KAAK+K,OAAOuF,WACrBtQ,KAAK+K,OAAOuF,SAASvK,SAAS,aAC9B/F,KAAK+K,OAAOsG,SAAStL,SAAS,aAE9BuK,GAASmI,gBAAgB/X,KAAKV,UAPtC,CfsCD,IAAqBhC,EAASuN,EehB7B,GARKrO,EAAGc,QAAQgC,KAAK0B,SAAS4P,YAC1BtR,KAAK0B,SAAS4P,SAAWnO,EAAc,MAAOc,EAA0BjE,KAAK+K,OAAO+F,UAAUQ,WfuB9EtT,EerBJgC,KAAK0B,SAAS4P,UfqBD/F,EerBWvL,KAAK0B,SAASC,SfsBnDQ,WAAWI,aAAavE,EAASuN,EAAOlJ,cejBvC2E,EAAQC,MAAQ1I,OAAOO,IAAK,CAC5B,IAAM4C,EAAW1B,KAAKoJ,MAAMtD,iBAAiB,SAE7ClJ,MAAMiF,KAAKH,GAAUrB,QAAQ,SAAA3B,GACzB,IAAMgM,EAAMhM,EAAMqL,aAAa,OACzBlL,EAAMmd,GAAStR,GAGT,OAAR7L,GACAA,EAAIG,WAAaT,OAAOmS,SAASwL,KAAKld,UACtC,CAAC,QAAS,UAAU+G,SAASlH,EAAI4d,WAEjCzO,EAAMtD,EAAK,QACN8E,KAAK,SAAAkN,GACFhe,EAAMwE,aAAa,MAAO3E,OAAOO,IAAI6d,gBAAgBD,MAExDhN,MAAM,WACHlM,EAAc9E,OAalC,IAAMke,EAAY5P,EACdpQ,MAAMiF,KAAKyF,UAAUsV,WAAatV,UAAUwR,UAAYxR,UAAUuV,cAAc5S,IAAI,SAAA6O,GAAA,OAAYA,EAAS1Y,MAAM,KAAK,MAGpH0Y,GAAY9Y,KAAKsN,QAAQ/N,IAAI,aAAeS,KAAK+K,OAAOuG,SAASwH,UAAY,QAAQ1M,cAGzF,GAAiB,SAAb0M,EACCA,EADoBhW,EACR8Z,EADQ,GAAA,GAIzB,IAAIE,EAAS9c,KAAKsN,QAAQ/N,IAAI,YAa9B,GAZKrC,EAAGO,QAAQqf,KACTA,EAAW9c,KAAK+K,OAAOuG,SAAvBwL,QAGPtgB,OAAO8E,OAAOtB,KAAKsR,SAAU,CACzBuH,SAAS,EACTiE,OAAAA,EACAhE,SAAAA,EACA8D,UAAAA,IAIA5c,KAAKmJ,QAAS,CACd,IAAM4T,EAAc/c,KAAK+K,OAAOuG,SAASrC,OAAS,uBAAyB,cAC3ExO,EAAGC,KAAKV,KAAMA,KAAKoJ,MAAMG,WAAYwT,EAAazL,GAASrC,OAAO+J,KAAKhZ,OAI3E4b,WAAWtK,GAASrC,OAAO+J,KAAKhZ,MAAO,KAI3CiP,OA/Fa,WA+FJ,IAAAlP,EAAAC,KACC2Y,EAASrH,GAASsH,UAAUlY,KAAKV,MAAM,GADxCgd,EAGgDhd,KAAKsR,SAAlDwL,EAHHE,EAGGF,OAAQhE,EAHXkE,EAGWlE,SAAUmE,EAHrBD,EAGqBC,KAAMC,EAH3BF,EAG2BE,iBAC1BC,EAAiB9gB,QAAQsc,EAAO9R,KAAK,SAAAnI,GAAA,OAASA,EAAMoa,WAAaA,KAGnE9Y,KAAKmJ,SAAWnJ,KAAKuc,SACrB5D,EAAOhW,OAAO,SAAAjE,GAAA,OAAUue,EAAK1d,IAAIb,KAAQ2B,QAAQ,SAAA3B,GAC7CqB,EAAKkL,MAAMC,IAAI,cAAexM,GAE9Bue,EAAK7S,IAAI1L,EAAO,CACZ8Z,QAAwB,YAAf9Z,EAAM0e,OAInB1e,EAAM0e,KAAO,SAGb3c,EAAGC,KAAKX,EAAMrB,EAAO,YAAa,WAAA,OAAM4S,GAAS+L,WAAW3c,KAAKX,QAKpEod,GAAkBnd,KAAK8Y,WAAaA,IAAcH,EAAO5S,SAASmX,MACnE5L,GAASgM,YAAY5c,KAAKV,KAAM8Y,GAChCxH,GAAS1R,OAAOc,KAAKV,KAAM8c,GAAUK,IAIzChY,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAWV,SAASjE,SAAUnQ,EAAGgC,MAAMyZ,KAGnF3Y,KAAK+K,OAAOuF,UAAY,IAAIvK,SAAS,aAAe/F,KAAK+K,OAAOsG,SAAStL,SAAS,aACnFuK,GAASmI,gBAAgB/X,KAAKV,OAMtCJ,OAvIa,SAuIN1D,GAAuB,IAAhB+D,IAAgBJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAE1B,GAAKG,KAAKZ,UAAUqJ,GAApB,CAF0B,IAMlBoQ,EAAY7Y,KAAKsR,SAAjBuH,QACF0E,EAAcvd,KAAK+K,OAAOiH,WAAWV,SAASwL,OAI9CA,EAAS5f,EAAGC,gBAAgBjB,IAAU2c,EAAU3c,EAGtD,GAAI4gB,IAAWjE,EAAS,CAQpB,GANK5Y,IACDD,KAAKsR,SAASwL,OAASA,EACvB9c,KAAKsN,QAAQlD,IAAI,CAAEkH,SAAUwL,MAI5B9c,KAAK8Y,UAAYgE,IAAW7c,EAAS,CACtC,IAAM0Y,EAASrH,GAASsH,UAAUlY,KAAKV,MACjCtB,EAAQ4S,GAASkM,UAAU9c,KAAKV,KAAxB,CAA+BA,KAAKsR,SAASwH,UAA7CpN,6HAAA+R,CAA0Dzd,KAAKsR,SAASsL,aAAY,GAOlG,OAJA5c,KAAKsR,SAASwH,SAAWpa,EAAMoa,cAG/BxH,GAASlH,IAAI1J,KAAKV,KAAM2Y,EAAOzL,QAAQxO,IAKvCsB,KAAK0B,SAASqP,QAAQO,WACtBtR,KAAK0B,SAASqP,QAAQO,SAASuC,QAAUiJ,GAI7C3X,EAAYnF,KAAK0B,SAASuE,UAAWsX,EAAaT,GAElD9c,KAAKsR,SAASuH,QAAUiE,EAGxBxM,GAAS+H,cAAc3X,KAAKV,KAAM,YAGlCkB,EAAaR,KAAKV,KAAMA,KAAKoJ,MAAO0T,EAAS,kBAAoB,uBAMzE1S,IA7La,SA6LTrI,GAAuB,IAAhB9B,IAAgBJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GACjB8Y,EAASrH,GAASsH,UAAUlY,KAAKV,MAGvC,IAAe,IAAX+B,EAKJ,GAAK7E,EAAGG,OAAO0E,GAKf,GAAMA,KAAS4W,EAAf,CAKA,GAAI3Y,KAAKsR,SAASiH,eAAiBxW,EAAO,CACtC/B,KAAKsR,SAASiH,aAAexW,EAC7B,IAAMrD,EAAQia,EAAO5W,GACb+W,GAAapa,GAAS,IAAtBoa,SAGR9Y,KAAKsR,SAAS4L,iBAAmBxe,EAGjC4R,GAAS+H,cAAc3X,KAAKV,KAAM,YAG7BC,IACDD,KAAKsR,SAASwH,SAAWA,EACzB9Y,KAAKsN,QAAQlD,IAAI,CAAE0O,SAAAA,KAInB9Y,KAAKoZ,SACLpZ,KAAK0d,MAAMC,gBAAgB7E,GAI/B5X,EAAaR,KAAKV,KAAMA,KAAKoJ,MAAO,kBAIxCkI,GAAS1R,OAAOc,KAAKV,MAAM,EAAMC,GAE7BD,KAAKmJ,SAAWnJ,KAAKuc,SAErBjL,GAAS+L,WAAW3c,KAAKV,WAnCzBA,KAAKiL,MAAMkH,KAAK,kBAAmBpQ,QALnC/B,KAAKiL,MAAMkH,KAAK,2BAA4BpQ,QAL5CuP,GAAS1R,OAAOc,KAAKV,MAAM,EAAOC,IAmD1Cqd,YArPa,SAqPDphB,GAAuB,IAAhB+D,IAAgBJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAC/B,GAAK3C,EAAGM,OAAOtB,GAAf,CAKA,IAAM4c,EAAW5c,EAAMkQ,cACvBpM,KAAKsR,SAASwH,SAAWA,EAGzB,IAAMH,EAASrH,GAASsH,UAAUlY,KAAKV,MACjCtB,EAAQ4S,GAASkM,UAAU9c,KAAKV,KAAM,CAAC8Y,IAC7CxH,GAASlH,IAAI1J,KAAKV,KAAM2Y,EAAOzL,QAAQxO,GAAQuB,QAV3CD,KAAKiL,MAAMkH,KAAK,4BAA6BjW,IAgBrD0c,UAvQa,WAuQa,IAAAvC,EAAArW,KAAhBiP,EAAgBpP,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAKtB,OAHejD,MAAMiF,MAAM7B,KAAKoJ,OAAS,IAAIG,YAAc,IAItD5G,OAAO,SAAAjE,GAAA,OAAU2X,EAAKlN,SAAW8F,GAAUoH,EAAK/E,SAAS2L,KAAKW,IAAIlf,KAClEiE,OAAO,SAAAjE,GAAA,MAAS,CAAC,WAAY,aAAaqH,SAASrH,EAAME,SAIlE4e,UAlRa,SAkRHZ,GAA0B,IAAAhF,EAAA5X,KAAfoF,EAAevF,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAC1B8Y,EAASrH,GAASsH,UAAUlY,KAAKV,MACjC6d,EAAgB,SAAAnf,GAAA,OAASpB,QAAQsa,EAAKtG,SAAS2L,KAAK1d,IAAIb,IAAU,IAAI8Z,UACtEsF,EAASlhB,MAAMiF,KAAK8W,GAAQZ,KAAK,SAACC,EAAGC,GAAJ,OAAU4F,EAAc5F,GAAK4F,EAAc7F,KAC9EtZ,OAAAA,EAMJ,OALAke,EAAUmB,MAAM,SAAAjF,GAEZ,QADApa,EAAQof,EAAOjX,KAAK,SAAAnI,GAAA,OAASA,EAAMoa,WAAaA,OAI7Cpa,IAAU0G,EAAQ0Y,EAAO,QAAKhe,IAIzCke,gBAhSa,WAiST,OAAO1M,GAASsH,UAAUlY,KAAKV,MAAMA,KAAKuY,eAI9CJ,SArSa,SAqSJzZ,GACL,IAAI6Z,EAAe7Z,EAMnB,OAJKxB,EAAGwB,MAAM6Z,IAAiBtQ,EAAQsB,YAAcvJ,KAAKsR,SAASuH,UAC/DN,EAAejH,GAAS0M,gBAAgBtd,KAAKV,OAG7C9C,EAAGwB,MAAM6Z,GACJrb,EAAGgC,MAAMqZ,EAAahF,OAItBrW,EAAGgC,MAAMqZ,EAAaO,UAIpBpM,EAAS,UAAW1M,KAAK+K,QAHrBrM,EAAMoa,SAAS5M,cAJfqM,EAAahF,MAUrB7G,EAAS,WAAY1M,KAAK+K,SAKrCsS,WA7Ta,SA6TFnhB,GAEP,GAAK8D,KAAKZ,UAAUqJ,GAIpB,GAAKvL,EAAGc,QAAQgC,KAAK0B,SAAS4P,UAM9B,GAAKpU,EAAGC,gBAAgBjB,IAAWU,MAAMD,QAAQT,GAAjD,CAKA,IAAI+hB,EAAO/hB,EAGX,IAAK+hB,EAAM,CACP,IAAMvf,EAAQ4S,GAAS0M,gBAAgBtd,KAAKV,MAC5Cie,EAAOrhB,MAAMiF,MAAMnD,GAAS,IAAIwf,YAAc,IACzCjU,IAAI,SAAA3L,GAAA,OAAOA,EAAI6f,iBACflU,IAAIuC,GAIb,IAAM+C,EAAU0O,EAAKhU,IAAI,SAAAmU,GAAA,OAAWA,EAAQ7Z,SAAQyO,KAAK,MAGzD,GAFgBzD,IAAYvP,KAAK0B,SAAS4P,SAAS7E,UAEtC,CAET/I,EAAa1D,KAAK0B,SAAS4P,UAC3B,IAAM+M,EAAUlb,EAAc,OAAQc,EAA0BjE,KAAK+K,OAAO+F,UAAUuN,UACtFA,EAAQ5R,UAAY8C,EACpBvP,KAAK0B,SAAS4P,SAAShP,YAAY+b,GAGnCnd,EAAaR,KAAKV,KAAMA,KAAKoJ,MAAO,mBA1BpCpJ,KAAKiL,MAAMkH,KAAK,4BAA6BjW,QAN7C8D,KAAKiL,MAAMkH,KAAK,sCCxVtBmM,GAAW,CAEbjR,SAAS,EAGTP,MAAO,GAGP7B,OAAO,EAGPsT,UAAU,EAGVC,WAAW,EAIXlW,aAAa,EAGbsE,SAAU,GAGV+E,OAAQ,EACR+D,OAAO,EAGP5D,SAAU,KAIVyF,iBAAiB,EAGjBN,YAAY,EAGZwH,cAAc,EAGdC,MAAO,OAGPC,aAAa,EAGbC,cAAc,EAGdC,YAAY,EAGZC,oBAAoB,EAGpBjQ,YAAY,EACZ0D,WAAY,OACZ9B,QAAS,sCAGTzF,WAAY,uCAGZH,QAAS,CACL2N,QAAS,IACTnZ,QAAS,CACL,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,YAKR0f,KAAM,CACFjC,QAAQ,GAMZ3D,MAAO,CACH6F,SAAU,EACV3f,QAAS,CAAC,GAAK,IAAM,EAAG,KAAM,IAAK,KAAM,IAI7C4f,SAAU,CACN5Y,SAAS,EACT6Y,QAAQ,GAIZ5I,SAAU,CACNhG,UAAU,EACVoB,MAAM,GAIVJ,SAAU,CACNwL,QAAQ,EACRhE,SAAU,OAGV7J,QAAQ,GAIZsC,WAAY,CACRlE,SAAS,EACT8R,UAAU,EACVC,WAAW,GAIf9R,QAAS,CACLD,SAAS,EACTpK,IAAK,QAITqN,SAAU,CACN,aAGA,OAEA,WACA,eACA,OACA,SACA,WACA,WACA,MACA,UACA,cAGJqL,cAAe,KAEftK,SAAU,CAAC,WAAY,UAAW,SAGlC3E,KAAM,CACFuE,QAAS,UACTC,OAAQ,qBACRvG,KAAM,OACNqG,MAAO,QACPG,YAAa,sBACbO,KAAM,OACN2N,UAAW,8BACX1K,OAAQ,SACRsB,SAAU,WACV3L,YAAa,eACbwH,SAAU,WACVH,OAAQ,SACRP,KAAM,OACNkO,OAAQ,SACRC,eAAgB,kBAChBC,gBAAiB,mBACjBC,gBAAiB,mBACjBC,eAAgB,kBAChBC,WAAY,qBACZrO,SAAU,WACVD,SAAU,WACVuO,SAAU,2BACVzG,MAAO,QACP0G,OAAQ,SACRhV,QAAS,UACTkU,KAAM,OACNe,MAAO,QACPC,IAAK,MACLC,IAAK,MACLC,MAAO,QACPC,SAAU,WACV7S,QAAS,UACT8S,cAAe,KACfC,aAAc,CACVC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLC,IAAK,OAKbC,KAAM,CACFC,MAAO,CACHC,IAAK,yCACLC,OAAQ,yCACRtY,IAAK,2CAETuY,QAAS,CACLF,IAAK,qCACLrY,IACI,yGAERwY,UAAW,CACPH,IAAK,uDAKbI,UAAW,CACPvP,KAAM,KACN/G,KAAM,KACNqG,MAAO,KACPC,QAAS,KACTC,OAAQ,KACRC,YAAa,KACbC,KAAM,KACNO,OAAQ,KACRL,SAAU,KACVC,WAAY,KACZ5I,IAAK,KACLE,QAAS,KACTsQ,MAAO,KACPtO,QAAS,KACTkU,KAAM,KACNjG,SAAU,MAId3Y,OAAQ,CAGJ,QACA,WACA,UACA,UACA,UACA,UACA,iBACA,YACA,aACA,iBACA,aACA,eACA,OACA,QACA,QACA,UACA,SACA,UACA,aACA,YAGA,kBACA,iBACA,kBACA,mBACA,iBACA,iBACA,gBACA,QAGA,cACA,gBACA,mBAGA,YACA,kBACA,mBACA,YACA,cACA,cACA,iBACA,gBACA,YAKJ2Q,UAAW,CACPoQ,SAAU,6CACVjb,UAAW,QACXqK,SAAU,CACNrK,UAAW,KACXtE,QAAS,mBAEboa,OAAQ,cACRhL,QAAS,CACLpG,KAAM,qBACNqG,MAAO,sBACPC,QAAS,wBACTC,OAAQ,uBACRC,YAAa,6BACbC,KAAM,qBACNE,SAAU,yBACVC,WAAY,2BACZ5I,IAAK,oBACLE,QAAS,wBACTwI,SAAU,yBACV0N,KAAM,sBAEVtN,OAAQ,CACJC,KAAM,qBACNC,OAAQ,uBACRwH,MAAO,sBACPL,SAAU,yBACVjO,QAAS,yBAEb+G,QAAS,CACLtH,YAAa,uBACbwH,SAAU,wBACVD,OAAQ,0BACRkN,KAAM,wBACNpN,OAAQ,0BAEZH,SAAU,kBACVF,SAAU,kBACV+M,QAAS,iBACTlL,KAAM,CACFtI,QAAS,kCAKjBmH,WAAY,CACR1R,KAAM,YACN+H,SAAU,YACVF,MAAO,sBACPuV,MAAO,oBACPyD,eAAgB,+BAChBC,OAAQ,eACRC,cAAe,uBACfC,IAAK,YACL5N,QAAS,gBACTC,eAAgB,yBAChB4N,QAAS,gBACThX,OAAQ,eACRiX,QAAS,gBACTC,QAAS,gBACTC,MAAO,cACPzP,QAAS,gBACTgM,KAAM,aACNlZ,OAAQ,gBACR6Z,aAAc,sBACdlX,MAAO,eACPia,QAAS,iBACTC,YAAa,gBACbC,aAAc,sBACd1O,KAAM,CACFtQ,MAAO,oBACPqQ,MAAO,cACPvE,KAAM,mBAEV2C,SAAU,CACNjE,QAAS,yBACTyP,OAAQ,yBAEZvL,WAAY,CACRlE,QAAS,2BACT8R,SAAU,6BAEdxW,IAAK,CACDvJ,UAAW,sBACX0d,OAAQ,oBAEZjU,QAAS,CACLzJ,UAAW,0BACX0d,OAAQ,wBAEZgF,SAAU,mBAIdrf,WAAY,CACRib,MAAO,CACHrV,SAAU,qBACVxD,GAAI,uBAKZ5H,KAAM,CACF8kB,OAAQ,MAKZT,IAAK,CACDjU,SAAS,EACT2U,YAAa,KC5YRC,GAAY,CACrBrY,MAAO,QACPmX,QAAS,UACTH,MAAO,SAGEsB,GAAQ,CACjBha,MAAO,QACPC,MAAO,SCRX,IAAMga,GAAO,aAEQC,GAAAA,WACjB,SAAAA,IAA6B,IAAjB/U,EAAiBxN,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAAAuN,EAAApN,KAAAoiB,GACzBpiB,KAAKqN,QAAU9O,OAAO8jB,SAAWhV,EAE7BrN,KAAKqN,SACLrN,KAAKkL,IAAI,2DAMb,OAAOlL,KAAKqN,QAAU1P,SAAS+H,UAAUsT,KAAKtY,KAAK2hB,QAAQnX,IAAKmX,SAAWF,gCAK3E,OAAOniB,KAAKqN,QAAU1P,SAAS+H,UAAUsT,KAAKtY,KAAK2hB,QAAQlQ,KAAMkQ,SAAWF,iCAK5E,OAAOniB,KAAKqN,QAAU1P,SAAS+H,UAAUsT,KAAKtY,KAAK2hB,QAAQnQ,MAAOmQ,SAAWF,SArBhEC,GCIrB,SAASE,KACL,GAAKtiB,KAAKqN,QAAV,CAKA,IAAMiG,EAAStT,KAAKmK,OAAOzI,SAASqP,QAAQQ,WACxCrU,EAAGc,QAAQsV,KACXA,EAAOO,QAAU7T,KAAK8c,QAI1B5b,EAAaR,KAAKV,KAAKmK,OAAQnK,KAAKuL,OAAQvL,KAAK8c,OAAS,kBAAoB,kBAAkB,GAG3F9V,EAAQU,OnBqOV,WAAmD,IAAhC1J,EAAgC6B,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAtB,KAAMD,EAAgBC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GACtD,GAAK3C,EAAGc,QAAQA,GAAhB,CAIA,IAAM2U,EAAY3M,EAAYtF,KAAKV,KAAM,2DACnCuiB,EAAQ5P,EAAU,GAClB6P,EAAO7P,EAAUA,EAAU3V,OAAS,GAsB1C0C,EAAegB,KAAKV,KAAMA,KAAK0B,SAASuE,UAAW,UApBtC,SAAA7H,GAET,GAAkB,QAAdA,EAAM6E,KAAmC,IAAlB7E,EAAMqkB,QAAjC,CAKA,IAAMpc,EAAUD,IAEZC,IAAYmc,GAASpkB,EAAMskB,SAIpBrc,IAAYkc,GAASnkB,EAAMskB,WAElCF,EAAK9H,QACLtc,EAAMukB,mBALNJ,EAAM7H,QACNtc,EAAMukB,oBAQsD/iB,GAAQ,KmBjQ9Dc,KAAKV,KAAKmK,OAAQnK,KAAKuL,OAAQvL,KAAK8c,SAItD,SAAS8F,KAA+B,IAAhBhjB,EAAgBC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAEhCD,EACAI,KAAK6iB,eAAiB,CAClBC,EAAGvkB,OAAOwkB,SAAW,EACrBC,EAAGzkB,OAAO0kB,SAAW,GAGzB1kB,OAAO2kB,SAASljB,KAAK6iB,eAAeC,EAAG9iB,KAAK6iB,eAAeG,GAI/D3f,SAASkD,KAAKO,MAAMqc,SAAWvjB,EAAS,SAAW,GAGnDuF,EAAYnF,KAAKuL,OAAQvL,KAAKmK,OAAOY,OAAOiH,WAAWT,WAAW4N,SAAUvf,GAG5E0iB,GAAS5hB,KAAKV,UAGZojB,GAAAA,WACF,SAAAA,EAAYjZ,GAAQ,IAAApK,EAAAC,KAAAoN,EAAApN,KAAAojB,GAEhBpjB,KAAKmK,OAASA,EAGdnK,KAAKsP,OAAS8T,EAAW9T,OACzBtP,KAAKqjB,SAAWD,EAAWC,SAG3BrjB,KAAK6iB,eAAiB,CAAEC,EAAG,EAAGE,EAAG,GAIjCviB,EAAGC,KACCV,KAAKmK,OACL9G,SACgB,OAAhBrD,KAAKsP,OAAkB,qBAA0BtP,KAAKsP,OAAtD,mBACA,WAEIgT,GAAS5hB,KAAKX,KAKtBU,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOzI,SAASuE,UAAW,WAAY,SAAA7H,GAEzDlB,EAAGc,QAAQ+B,EAAKoK,OAAOzI,SAAS4O,WAAavQ,EAAKoK,OAAOzI,SAAS4O,SAAS/K,SAASnH,EAAMmN,SAI9FxL,EAAKH,WAITI,KAAKiP,oDA2EDjP,KAAKqN,QACLrN,KAAKmK,OAAOc,MAAMC,KAAOkY,EAAWE,OAAS,SAAW,YAAxD,uBAEAtjB,KAAKmK,OAAOc,MAAMC,IAAI,kDAI1B/F,EAAYnF,KAAKmK,OAAOzI,SAASuE,UAAWjG,KAAKmK,OAAOY,OAAOiH,WAAWT,WAAWlE,QAASrN,KAAKqN,yCAK9FrN,KAAKqN,UAKNrG,EAAQU,OAAS1H,KAAKmK,OAAOY,OAAOwG,WAAW6N,UAC3Cpf,KAAKmK,OAAOoX,SACZvhB,KAAKuL,OAAOgY,wBAERH,EAAWE,OAEXtjB,KAAKsP,OAELpS,EAAGgC,MAAMc,KAAKsP,SACtBtP,KAAKuL,OAAUvL,KAAKsP,OAApB,UAAoCtP,KAAKqjB,YAFzCrjB,KAAKuL,OAAOiY,oBAFZZ,GAAeliB,KAAKV,MAAM,mCAU9B,GAAKA,KAAKqN,QAKV,GAAIrG,EAAQU,OAAS1H,KAAKmK,OAAOY,OAAOwG,WAAW6N,UAC/Cpf,KAAKuL,OAAOkY,uBACZzjB,KAAKmK,OAAOQ,YACT,GAAKyY,EAAWE,OAEhB,GAAKtjB,KAAKsP,QAEV,IAAKpS,EAAGgC,MAAMc,KAAKsP,QAAS,CAC/B,IAAMoU,EAAyB,QAAhB1jB,KAAKsP,OAAmB,SAAW,OAClDjM,SAAAA,GAAYrD,KAAKsP,OAASoU,EAAS1jB,KAAKqjB,kBAHvChgB,SAASsgB,kBAAoBtgB,SAASqc,gBAAgBhf,KAAK2C,eAF5Duf,GAAeliB,KAAKV,MAAM,oCAWzBA,KAAK8c,OAGN9c,KAAK4jB,OAFL5jB,KAAK6jB,wCAtFT,OACKT,EAAWE,QAAUtjB,KAAKmK,OAAOY,OAAOwG,WAAW4N,WACpDnf,KAAKmK,OAAOY,OAAOwG,WAAWlE,SAC9BrN,KAAKmK,OAAO/K,UAAUqJ,IACtBzI,KAAKmK,OAAOoS,uCAMhB,QAAKvc,KAAKqN,UAKL+V,EAAWE,QAICtjB,KAAKsP,OAAsCjM,SAAAA,GAAYrD,KAAKsP,OAAStP,KAAKqjB,SAA/B,WAA7BhgB,SAASygB,qBAErB9jB,KAAKuL,OALb/F,EAASxF,KAAKuL,OAAQvL,KAAKmK,OAAOY,OAAOiH,WAAWT,WAAW4N,0CAU1E,OAAOnY,EAAQU,OAAS1H,KAAKmK,OAAOY,OAAOwG,WAAW6N,UAChDpf,KAAKmK,OAAOf,MACZpJ,KAAKmK,OAAOzI,SAASuE,2CAjE3B,SACI5C,SAAS0gB,mBACT1gB,SAAS2gB,yBACT3gB,SAAS4gB,sBACT5gB,SAAS6gB,oDAOb,GAAIhnB,EAAGQ,SAAS2F,SAASqc,gBACrB,MAAO,GAIX,IAAI7c,EAAQ,GAYZ,MAXiB,CAAC,SAAU,MAAO,MAE1ByW,KAAK,SAAA6K,GACV,SAAIjnB,EAAGQ,SAAS2F,SAAY8gB,EAAZ,qBAAqCjnB,EAAGQ,SAAS2F,SAAY8gB,EAAZ,wBAC7DthB,EAAQshB,GACD,KAMRthB,mCAIP,MAAuB,QAAhB7C,KAAKsP,OAAmB,aAAe,mBAxEhD8T,GC7CS,SAASgB,GAAU1Z,GAAmB,IAAd2Z,EAAcxkB,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAH,EAC9C,OAAO,IAAIqO,QAAQ,SAACC,EAASC,GACzB,IAAMkW,EAAQ,IAAIC,MAEZC,EAAU,kBACLF,EAAMG,cACNH,EAAMI,SACZJ,EAAMK,cAAgBN,EAAWlW,EAAUC,GAAQkW,IAGxD9nB,OAAO8E,OAAOgjB,EAAO,CAAEG,OAAQD,EAASE,QAASF,EAAS9Z,IAAAA,MCFlE,IAAMjC,GAAK,CACPmc,aADO,WAEHzf,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAO+F,UAAU7K,UAAUxB,QAAQ,IAAK,KAAK,GACvFU,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAW4P,YAAa5hB,KAAKZ,UAAUqJ,KAI5F2J,qBAPO,WAO8BvS,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,IACnBG,KAAKmJ,QACfnJ,KAAKoJ,MAAMlG,aAAa,WAAY,IAEpClD,KAAKoJ,MAAMlE,gBAAgB,aAKnC2f,MAhBO,WAgBC,IAAA9kB,EAAAC,KAMJ,GAHAA,KAAKihB,UAAU7X,SAGVpJ,KAAKZ,UAAUqJ,GAOhB,OANAzI,KAAKiL,MAAMkH,KAAX,0BAA0CnS,KAAKqI,SAA/C,IAA2DrI,KAAKM,WAGhEmI,GAAG2J,qBAAqB1R,KAAKV,MAAM,GAOlC9C,EAAGc,QAAQgC,KAAK0B,SAAS4O,YAE1BA,GAAS+K,OAAO3a,KAAKV,MAGrBA,KAAKihB,UAAU3Q,YAInB7H,GAAG2J,qBAAqB1R,KAAKV,MAGzBA,KAAKmJ,SACLmI,GAASgL,MAAM5b,KAAKV,MAIxBA,KAAK2R,OAAS,KAGd3R,KAAK0V,MAAQ,KAGb1V,KAAKmZ,MAAQ,KAGbnZ,KAAK+e,KAAO,KAGZ/e,KAAK6K,QAAU,KAGfyF,GAASkF,aAAa9U,KAAKV,MAG3BsQ,GAASyG,WAAWrW,KAAKV,MAGzByI,GAAGqc,aAAapkB,KAAKV,MAGrBmF,EACInF,KAAK0B,SAASuE,UACdjG,KAAK+K,OAAOiH,WAAWrJ,IAAIvJ,UAC3B6I,EAAQU,KAAO3I,KAAKmJ,SAAWnJ,KAAKuc,SAIxCpX,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAWnJ,QAAQzJ,UAAW6I,EAAQY,SAAW7I,KAAKmJ,SAGvGhE,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAWtK,MAAOV,EAAQU,OAG3EvC,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAW2P,QAAS3hB,KAAKwJ,OAG1ExJ,KAAK+kB,OAAQ,EAGbnJ,WAAW,WACP1a,EAAaR,KAAKX,EAAMA,EAAKqJ,MAAO,UACrC,GAGHX,GAAGuc,SAAStkB,KAAKV,MAGbA,KAAKohB,QACL3Y,GAAGwc,UAAUvkB,KAAKV,KAAMA,KAAKohB,QAAQ,GAAO1R,MAAM,cAKlD1P,KAAK+K,OAAO+G,UACZxB,GAAS6G,eAAezW,KAAKV,OAKrCglB,SAjHO,WAmHH,IAAIzR,EAAQ7G,EAAS,OAAQ1M,KAAK+K,QAclC,GAXI7N,EAAGM,OAAOwC,KAAK+K,OAAO+B,SAAW5P,EAAGgC,MAAMc,KAAK+K,OAAO+B,SACtDyG,GAAAA,KAAcvT,KAAK+K,OAAO+B,OAI9BlQ,MAAMiF,KAAK7B,KAAK0B,SAASqP,QAAQpG,MAAQ,IAAItK,QAAQ,SAAAiT,GACjDA,EAAOpQ,aAAa,aAAcqQ,KAKlCvT,KAAKklB,QAAS,CACd,IAAMpE,EAAS5a,EAAWxF,KAAKV,KAAM,UAErC,IAAK9C,EAAGc,QAAQ8iB,GACZ,OAIJ,IAAMhU,EAAS5P,EAAGgC,MAAMc,KAAK+K,OAAO+B,OAA6B,QAApB9M,KAAK+K,OAAO+B,MACnDnB,EAASe,EAAS,aAAc1M,KAAK+K,QAE3C+V,EAAO5d,aAAa,QAASyI,EAAOlH,QAAQ,UAAWqI,MAK/DqY,aAjJO,SAiJMC,GACTjgB,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAWqP,cAAe+D,IAK/EH,UAvJO,SAuJG7D,GAAwB,IAAA/K,EAAArW,KAE9B,OAF8BH,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,KAEfG,KAAKohB,QAKpBphB,KAAKoJ,MAAMlG,aAAa,SAAUke,GtBzDnC,WAAiB,IAAA/K,EAAArW,KACpB,OAAO,IAAIkO,QACP,SAAAC,GAAA,OAAYkI,EAAK0O,MAAQnJ,WAAWzN,EAAS,GAAK1N,EAAGC,KAAK2V,EAAMA,EAAK3U,SAASuE,UAAW,QAASkI,KACpGqB,KAAK,esB2DM9O,KAAKV,MAELwP,KAAK,WAAA,OAAM4U,GAAUhD,KACrB1R,MAAM,SAAApG,GAMH,MAJI8X,IAAW/K,EAAK+K,QAChB3Y,GAAG0c,aAAazkB,KAAK2V,GAAM,GAGzB/M,IAETkG,KAAK,WAEF,GAAI4R,IAAW/K,EAAK+K,OAChB,MAAM,IAAI3S,MAAM,oDAGvBe,KAAK,WAOF,OANAhT,OAAO8E,OAAO+U,EAAK3U,SAAS0f,OAAOta,MAAO,CACtCue,gBAAAA,QAAyBjE,EAAzB,KAEAkE,eAAgB,KAEpB7c,GAAG0c,aAAazkB,KAAK2V,GAAM,GACpB+K,KAjCRlT,QAAQE,OAAO,IAAIK,MAAM,wBAuCxCqW,aAjMO,SAiMM1mB,GAAO,IAAAwZ,EAAA5X,KAEhBmF,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAWuP,QAASvhB,KAAKuhB,SAC1Epc,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAWzH,OAAQvK,KAAKuK,QACzEpF,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAWwP,QAASxhB,KAAKwhB,SAG1E5kB,MAAMiF,KAAK7B,KAAK0B,SAASqP,QAAQpG,MAAQ,IAAItK,QAAQ,SAAAkL,GACjDA,EAAOsI,QAAU+D,EAAK2J,UAItBrkB,EAAGkB,MAAMA,IAAyB,eAAfA,EAAMkC,MAK7BmI,GAAG8c,eAAe7kB,KAAKV,OAI3BwlB,aAtNO,SAsNMpnB,GAAO,IAAAsa,EAAA1Y,KAChBA,KAAKyhB,QAAU,CAAC,UAAW,WAAW1b,SAAS3H,EAAMkC,MAGrDmlB,aAAazlB,KAAK0lB,OAAOjE,SAGzBzhB,KAAK0lB,OAAOjE,QAAU7F,WAAW,WAE7BzW,EAAYuT,EAAKhX,SAASuE,UAAWyS,EAAK3N,OAAOiH,WAAWyP,QAAS/I,EAAK+I,SAG1EhZ,GAAG8c,eAAe7kB,KAAKgY,IACxB1Y,KAAKyhB,QAAU,IAAM,IAI5B8D,eAvOO,SAuOQngB,GAAO,IACVkL,EAAatQ,KAAK0B,SAAlB4O,SAEJA,GAAYtQ,KAAK+K,OAAO6T,cAExB5e,KAAKulB,eAAelpB,QAAQ+I,GAASpF,KAAKyhB,SAAWzhB,KAAKuK,QAAU+F,EAASuD,SAAWvD,EAASoR,UC/OvGiE,GAAAA,WACF,SAAAA,EAAYxb,GAAQiD,EAAApN,KAAA2lB,GAChB3lB,KAAKmK,OAASA,EACdnK,KAAK4lB,QAAU,KAEf5lB,KAAK6lB,UAAY7lB,KAAK6lB,UAAU7M,KAAKhZ,MACrCA,KAAKwZ,WAAaxZ,KAAKwZ,WAAWR,KAAKhZ,MACvCA,KAAK8lB,WAAa9lB,KAAK8lB,WAAW9M,KAAKhZ,kDAIjC5B,GAAO,IAAA2B,EAAAC,KACP+lB,EAAO3nB,EAAMqkB,QAAUrkB,EAAMqkB,QAAUrkB,EAAM4nB,MAC7CnS,EAAyB,YAAfzV,EAAMkC,KAChB2lB,EAASpS,GAAWkS,IAAS/lB,KAAK4lB,QAGxC,KAAIxnB,EAAM8nB,QAAU9nB,EAAM+nB,SAAW/nB,EAAMgoB,SAAWhoB,EAAMskB,WAMvDxlB,EAAGG,OAAO0oB,GAAf,CAYA,GAAIlS,EAAS,CAET,IAKMxN,EAAUD,IAChB,GACIlJ,EAAGc,QAAQqI,IACVA,IAAYrG,KAAKmK,OAAOzI,SAAS+P,OAAOC,MACrCjM,EAAQY,EAASrG,KAAKmK,OAAOY,OAAO+F,UAAUoQ,UAElD,OASJ,OApBuB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAerFnb,SAASggB,KACxB3nB,EAAMukB,iBACNvkB,EAAMyb,mBAGFkM,GACJ,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAEIE,IAvCblmB,EAAKoK,OAAOG,YAAcvK,EAAKoK,OAAO2H,SAAW,IAAMiU,EAAO,KA0CtD,MAEJ,KAAK,GACL,KAAK,GAEIE,GACDjmB,KAAKmK,OAAOkc,aAEhB,MAEJ,KAAK,GAEDrmB,KAAKmK,OAAOmc,eAAe,IAC3B,MAEJ,KAAK,GAEDtmB,KAAKmK,OAAOoc,eAAe,IAC3B,MAEJ,KAAK,GAEIN,IACDjmB,KAAKmK,OAAOuL,OAAS1V,KAAKmK,OAAOuL,OAErC,MAEJ,KAAK,GAED1V,KAAKmK,OAAOqc,UACZ,MAEJ,KAAK,GAEDxmB,KAAKmK,OAAO+G,SACZ,MAEJ,KAAK,GAEDlR,KAAKmK,OAAOoH,WAAW3R,SACvB,MAEJ,KAAK,GAEIqmB,GACDjmB,KAAKmK,OAAOsc,iBAEhB,MAEJ,KAAK,GAEDzmB,KAAKmK,OAAO4U,MAAQ/e,KAAKmK,OAAO4U,MAqBnC/e,KAAKmK,OAAOoH,WAAWlE,SAAWrN,KAAKmK,OAAOoH,WAAWuL,QAAmB,KAATiJ,GACpE/lB,KAAKmK,OAAOoH,WAAW3R,SAI3BI,KAAK4lB,QAAUG,OAEf/lB,KAAK4lB,QAAU,yCAKZxnB,GACPkS,GAASkJ,WAAW9Y,KAAKV,KAAKmK,OAAQ/L,wCAKtC4B,KAAKmK,OAAOX,OAAQ,EAGpBrE,EAAYnF,KAAKmK,OAAOzI,SAASuE,UAAWjG,KAAKmK,OAAOY,OAAOiH,WAAW2P,SAAS,oCAIjE,IAAf/hB,IAAeC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAEdG,KAAKmK,OAAOY,OAAOkU,SAASC,QAC5Bxf,EAAegB,KAAKV,KAAKmK,OAAQ5L,OAAQ,gBAAiByB,KAAK6lB,UAAWjmB,GAAQ,GAItFF,EAAegB,KAAKV,KAAKmK,OAAQ9G,SAASkD,KAAM,QAASvG,KAAKwZ,WAAY5Z,GAG1EgB,EAAKF,KAAKV,KAAKmK,OAAQ9G,SAASkD,KAAM,aAAcvG,KAAK8lB,gDAIjD,IAAAzP,EAAArW,MAEHA,KAAKmK,OAAOY,OAAOkU,SAASC,QAAUlf,KAAKmK,OAAOY,OAAOkU,SAAS5Y,SACnE5F,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOzI,SAASuE,UAAW,gBAAiBjG,KAAK6lB,WAAW,GAK1FplB,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOzI,SAASuE,UAAW,WAAY,SAAA7H,GAC7D+G,EAAY/G,EAAMmN,OAAQ8K,EAAKlM,OAAOY,OAAOiH,WAAW8P,UAAU,KAGtErhB,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOzI,SAASuE,UAAW,UAAW,SAAA7H,GACtC,IAAlBA,EAAMqkB,SAMV7G,WAAW,WACPzW,EAAYiB,IAAmBiQ,EAAKlM,OAAOY,OAAOiH,WAAW8P,UAAU,IACxE,KAIPrhB,EAAGC,KACCV,KAAKmK,OACLnK,KAAKmK,OAAOzI,SAASuE,UACrB,2EACA,SAAA7H,GAAS,IACGkS,EAAa+F,EAAKlM,OAAOzI,SAAzB4O,SAGW,oBAAflS,EAAMkC,OACNgQ,EAASuD,SAAU,EACnBvD,EAASoR,OAAQ,GAIrB,IAEIgF,EAAQ,EAFC,CAAC,aAAc,YAAa,aAAa3gB,SAAS3H,EAAMkC,QAKjEmI,GAAG8c,eAAe7kB,KAAK2V,EAAKlM,QAAQ,GAEpCuc,EAAQrQ,EAAKlM,OAAOX,MAAQ,IAAO,KAIvCic,aAAapP,EAAKlM,OAAOub,OAAOpV,UAEhC+F,EAAKlM,OAAOub,OAAOpV,SAAWsL,WAAW,WAAA,OAAMnT,GAAG8c,eAAe7kB,KAAK2V,EAAKlM,QAAQ,IAAQuc,qCAM/F,IAAA9O,EAAA5X,KA8DJ,GA5DAS,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,4BAA6B,SAAAhL,GAAA,OACjEkS,GAASyG,WAAWrW,KAAKkX,EAAKzN,OAAQ/L,KAI1CqC,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,2CAA4C,SAAAhL,GAAA,OAChFkS,GAAS6G,eAAezW,KAAKkX,EAAKzN,OAAQ/L,KAK9CqC,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,UAAW,WAC/CtE,EAAa8S,EAAKzN,OAAOzI,SAASiQ,QAASiG,EAAKzN,OAAOwc,UACvD7hB,EAAa8S,EAAKzN,OAAOzI,SAASqP,QAAQK,MAAOwG,EAAKzN,OAAOwc,YAIjElmB,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,QAAS,WAEzCwO,EAAKzN,OAAOhB,SAAWyO,EAAKzN,OAAOoS,SAAW3E,EAAKzN,OAAOY,OAAO8T,YAEjEjH,EAAKzN,OAAO8G,YAKpBxQ,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,kCAAmC,SAAAhL,GAAA,OACvEkS,GAASqF,eAAejV,KAAKkX,EAAKzN,OAAQ/L,KAI9CqC,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,eAAgB,SAAAhL,GAAA,OACpDkS,GAASkF,aAAa9U,KAAKkX,EAAKzN,OAAQ/L,KAI5CqC,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,8CAA+C,SAAAhL,GAAA,OACnFqK,GAAGqc,aAAapkB,KAAKkX,EAAKzN,OAAQ/L,KAItCqC,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,iCAAkC,SAAAhL,GAAA,OACtEqK,GAAG+c,aAAa9kB,KAAKkX,EAAKzN,OAAQ/L,KAKtCqC,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,UAAW,WAC1CwO,EAAKzN,OAAOmX,KAKb1J,EAAKzN,OAAOmX,IAAIjU,UAAYuK,EAAKzN,OAAOmX,IAAIsF,aAE5ChP,EAAKzN,OAAOmX,IAAIuF,eAAerX,KAAK,WAAA,OAAMoI,EAAKzN,OAAOmX,IAAI3W,SAAQ+E,MAAM,WAAA,OAAMkI,EAAKzN,OAAOQ,WAK9F3K,KAAKmK,OAAO/K,UAAUqJ,IAAMzI,KAAKmK,OAAOY,OAAO4T,cAAgB3e,KAAKmK,OAAO2c,QAAS,CAEpF,IAAMnlB,EAAUuE,EAAWxF,KAAKV,KAAKmK,OAArB,IAAiCnK,KAAKmK,OAAOY,OAAOiH,WAAW7J,OAG/E,IAAKjL,EAAGc,QAAQ2D,GACZ,OAIJlB,EAAGC,KAAKV,KAAKmK,OAAQxI,EAAS,QAAS,WAE/BiW,EAAKzN,OAAOY,OAAO6T,cAAgBhH,EAAKzN,OAAOX,QAAUoO,EAAKzN,OAAOI,SAIrEqN,EAAKzN,OAAOI,OACZqN,EAAKzN,OAAOQ,OACLiN,EAAKzN,OAAO4c,OACnBnP,EAAKzN,OAAO8G,UACZ2G,EAAKzN,OAAOQ,QAEZiN,EAAKzN,OAAO6G,WAMpBhR,KAAKmK,OAAO/K,UAAUqJ,IAAMzI,KAAKmK,OAAOY,OAAO+T,oBAC/Cre,EAAGC,KACCV,KAAKmK,OACLnK,KAAKmK,OAAOzI,SAASC,QACrB,cACA,SAAAvD,GACIA,EAAMukB,mBAEV,GAKRliB,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,eAAgB,WAEpDwO,EAAKzN,OAAOmD,QAAQlD,IAAI,CAAEuH,OAAQiG,EAAKzN,OAAOwH,OAAQ+D,MAAOkC,EAAKzN,OAAOuL,UAI7EjV,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,aAAc,WAElDkH,GAAS+H,cAAc3X,KAAKkX,EAAKzN,OAAQ,SAGzCyN,EAAKzN,OAAOmD,QAAQlD,IAAI,CAAE+O,MAAOvB,EAAKzN,OAAOgP,UAIjD1Y,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,mBAAoB,SAAAhL,GAExDwZ,EAAKzN,OAAOmD,QAAQlD,IAAI,CAAES,QAASzM,EAAMgD,OAAOyJ,YAIpDpK,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO,gBAAiB,SAAAhL,GAErDkS,GAAS+H,cAAc3X,KAAKkX,EAAKzN,OAAQ,UAAW,KAAM/L,EAAMgD,OAAOyJ,WAK3E,IAAMmc,EAAchnB,KAAKmK,OAAOY,OAAO5K,OAAOuL,OAAO,CAAC,QAAS,YAAYsH,KAAK,KAChFvS,EAAGC,KAAKV,KAAKmK,OAAQnK,KAAKmK,OAAOf,MAAO4d,EAAa,SAAA5oB,GAAS,IAAA6oB,EACpC7oB,EAAhBgD,OAAAA,OADoDtB,IAAAmnB,EAC3C,GAD2CA,EAIvC,UAAf7oB,EAAMkC,OACNc,EAASwW,EAAKzN,OAAOf,MAAM8I,OAG/BhR,EAAaR,KAAKkX,EAAKzN,OAAQyN,EAAKzN,OAAOzI,SAASuE,UAAW7H,EAAMkC,MAAM,EAAMc,wCAK9E,IAAAsX,EAAA1Y,KAEDknB,EAAalgB,EAAQC,KAAO,SAAW,QAGvCkgB,EAAQ,SAAC/oB,EAAOgpB,EAAgBC,GAClC,IAAMC,EAAgB5O,EAAKvO,OAAOY,OAAOkW,UAAUoG,GAE/CE,GAAW,EADUrqB,EAAGQ,SAAS4pB,KAKjCC,EAAWD,EAAc5mB,KAAKgY,EAAKvO,OAAQ/L,IAI3CmpB,GAAYrqB,EAAGQ,SAAS0pB,IACxBA,EAAe1mB,KAAKgY,EAAKvO,OAAQ/L,IAKnC4a,EAAO,SAAChb,EAASsC,EAAM8mB,EAAgBC,GAAqC,IAAnBpnB,IAAmBJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GACxEynB,EAAgB5O,EAAKvO,OAAOY,OAAOkW,UAAUoG,GAC7CG,EAAmBtqB,EAAGQ,SAAS4pB,GAErC7mB,EAAGC,KACCgY,EAAKvO,OACLnM,EACAsC,EACA,SAAAlC,GAAA,OAAS+oB,EAAM/oB,EAAOgpB,EAAgBC,IACtCpnB,IAAYunB,IAKhBxnB,KAAKmK,OAAOzI,SAASqP,QAAQpG,MAC7B/N,MAAMiF,KAAK7B,KAAKmK,OAAOzI,SAASqP,QAAQpG,MAAMtK,QAAQ,SAAAiT,GAClD0F,EAAK1F,EAAQ,QAASoF,EAAKvO,OAAOkc,WAAY,UAKtDrN,EAAKhZ,KAAKmK,OAAOzI,SAASqP,QAAQE,QAAS,QAASjR,KAAKmK,OAAO8G,QAAS,WAGzE+H,EAAKhZ,KAAKmK,OAAOzI,SAASqP,QAAQG,OAAQ,QAASlR,KAAKmK,OAAO+G,OAAQ,UAGvE8H,EAAKhZ,KAAKmK,OAAOzI,SAASqP,QAAQI,YAAa,QAASnR,KAAKmK,OAAOqc,QAAS,eAG7ExN,EACIhZ,KAAKmK,OAAOzI,SAASqP,QAAQK,KAC7B,QACA,WACIsH,EAAKvO,OAAOuL,OAASgD,EAAKvO,OAAOuL,OAErC,QAIJsD,EAAKhZ,KAAKmK,OAAOzI,SAASqP,QAAQO,SAAU,QAAS,WAAA,OAAMoH,EAAKvO,OAAOsc,mBAGvEzN,EACIhZ,KAAKmK,OAAOzI,SAASqP,QAAQQ,WAC7B,QACA,WACImH,EAAKvO,OAAOoH,WAAW3R,UAE3B,cAIJoZ,EACIhZ,KAAKmK,OAAOzI,SAASqP,QAAQpI,IAC7B,QACA,WACI+P,EAAKvO,OAAOxB,IAAM,UAEtB,OAIJqQ,EAAKhZ,KAAKmK,OAAOzI,SAASqP,QAAQlI,QAAS,QAAS7I,KAAKmK,OAAOtB,QAAS,WAGzEmQ,EAAKhZ,KAAKmK,OAAOzI,SAASqP,QAAQM,SAAU,QAAS,SAAAjT,GACjDkS,GAASkJ,WAAW9Y,KAAKgY,EAAKvO,OAAQ/L,KAI1C4a,EAAKhZ,KAAKmK,OAAOzI,SAAS2P,SAASoI,KAAM,QAAS,SAAArb,GAC9CA,EAAMyb,kBAGN,IAAM4N,EAAc,WAChB,IAAM5iB,EAAAA,iBAAsB6T,EAAKvO,OAAOtF,GAAlC,QACNyL,GAAS+J,QAAQ3Z,KAAKgY,EAAKvO,OAAQtF,IAIvC,GAAIY,EAAQrH,EAAMmN,OAAQmN,EAAKvO,OAAOY,OAAO+F,UAAUW,OAAOqH,UAC1DqO,EACI/oB,EACA,WACIsa,EAAKvO,OAAOoO,aAAejb,OAAOc,EAAMmN,OAAO1I,OAC/C4kB,KAEJ,iBAED,GAAIhiB,EAAQrH,EAAMmN,OAAQmN,EAAKvO,OAAOY,OAAO+F,UAAUW,OAAO5G,SACjEsc,EACI/oB,EACA,WACIsa,EAAKvO,OAAOU,QAAUzM,EAAMmN,OAAO1I,MACnC4kB,KAEJ,gBAED,GAAIhiB,EAAQrH,EAAMmN,OAAQmN,EAAKvO,OAAOY,OAAO+F,UAAUW,OAAO0H,OACjEgO,EACI/oB,EACA,WACIsa,EAAKvO,OAAOgP,MAAQrC,WAAW1Y,EAAMmN,OAAO1I,OAC5C4kB,KAEJ,aAED,CACH,IAAMlO,EAAMnb,EAAMmN,OAClB+E,GAAS+J,QAAQ3Z,KAAKgY,EAAKvO,OAAQoP,EAAIxP,aAAa,qBAK5DiP,EAAKhZ,KAAKmK,OAAOzI,SAAS+P,OAAOC,KAAM,sBAAuB,SAAAtT,GAC1D,IAAMmY,EAAamC,EAAKvO,OAAOzI,SAAS8P,SAASgF,wBAC3CN,EAAU,IAAMK,EAAWI,OAASvY,EAAMwY,MAAQL,EAAWM,MACnEzY,EAAMspB,cAAcxkB,aAAa,aAAcgT,KAInD8C,EAAKhZ,KAAKmK,OAAOzI,SAAS+P,OAAOC,KAAM,sDAAuD,SAAAtT,GAC1F,IAAMsT,EAAOtT,EAAMspB,cAEb3B,EAAO3nB,EAAMqkB,QAAUrkB,EAAMqkB,QAAUrkB,EAAM4nB,MAC7C2B,EAAYvpB,EAAMkC,KAExB,GAAmB,YAAdqnB,GAAyC,UAAdA,GAAoC,KAAT5B,GAAwB,KAATA,EAA1E,CAIA,IAAMpb,EAAO+G,EAAKzM,aAAa,kBAGzB2iB,EAAO,CAAC,UAAW,WAAY,SAAS7hB,SAAS3H,EAAMkC,MAGzDqK,GAAQid,GACRlW,EAAKxM,gBAAgB,kBACrBwT,EAAKvO,OAAOQ,SACJid,GAAQlP,EAAKvO,OAAOoX,UAC5B7P,EAAKxO,aAAa,iBAAkB,IACpCwV,EAAKvO,OAAO6G,YAKpBgI,EACIhZ,KAAKmK,OAAOzI,SAAS+P,OAAOC,KAC5BwV,EACA,SAAA9oB,GACI,IAAMsT,EAAOtT,EAAMspB,cAGfG,EAASnW,EAAK3H,aAAa,cAE3B7M,EAAGgC,MAAM2oB,KACTA,EAASnW,EAAK7O,OAGlB6O,EAAKxM,gBAAgB,cAErBwT,EAAKvO,OAAOG,YAAcud,EAASnW,EAAKsC,IAAM0E,EAAKvO,OAAO2H,UAE9D,QAKA9R,KAAKmK,OAAOY,OAAO0T,eAAiBvhB,EAAGc,QAAQgC,KAAKmK,OAAOzI,SAASkQ,QAAQE,WAC5EkH,EAAKhZ,KAAKmK,OAAOzI,SAASkQ,QAAQtH,YAAa,QAAS,WAEpB,IAA5BoO,EAAKvO,OAAOG,cAIhBoO,EAAKvO,OAAOY,OAAOkM,YAAcyB,EAAKvO,OAAOY,OAAOkM,WAEpD3G,GAASyG,WAAWrW,KAAKgY,EAAKvO,WAKtC6O,EACIhZ,KAAKmK,OAAOzI,SAAS+P,OAAOE,OAC5BuV,EACA,SAAA9oB,GACIsa,EAAKvO,OAAOwH,OAASvT,EAAMmN,OAAO1I,OAEtC,UAIAmE,EAAQG,UACRvK,MAAMiF,KAAKmE,EAAYtF,KAAKV,KAAKmK,OAAQ,wBAAwB9J,QAAQ,SAAArC,GACrEgb,EAAKhb,EAAS,QAAS,SAAAI,GAAA,OAASkS,GAASiE,gBAAgB7T,KAAKgY,EAAKvO,OAAQ/L,EAAMmN,YAKzFyN,EAAKhZ,KAAKmK,OAAOzI,SAAS8P,SAAU,kCAAmC,SAAApT,GAAA,OACnEkS,GAAS8F,kBAAkB1V,KAAKgY,EAAKvO,OAAQ/L,KAIjD4a,EAAKhZ,KAAKmK,OAAOzI,SAAS4O,SAAU,wBAAyB,SAAAlS,GACzDsa,EAAKvO,OAAOzI,SAAS4O,SAASoR,OAAShJ,EAAKvO,OAAOX,OAAwB,eAAfpL,EAAMkC,OAItE0Y,EAAKhZ,KAAKmK,OAAOzI,SAAS4O,SAAU,oDAAqD,SAAAlS,GACrFsa,EAAKvO,OAAOzI,SAAS4O,SAASuD,QAAU,CAAC,YAAa,cAAc9N,SAAS3H,EAAMkC,QAIvF0Y,EAAKhZ,KAAKmK,OAAOzI,SAAS4O,SAAU,mBAAoB,SAAAlS,GAAS,IAAA0pB,EACxBpP,EAAKvO,OAAlCY,EADqD+c,EACrD/c,OAAQrJ,EAD6ComB,EAC7CpmB,SAAUgkB,EADmCoC,EACnCpC,OAS1B,GANAvgB,EAAYzD,EAAS4O,SAAUvF,EAAOiH,WAAW6P,aAA6B,YAAfzjB,EAAMkC,MAGrEmI,GAAG8c,eAAe7kB,KAAKgY,EAAKvO,OAAuB,YAAf/L,EAAMkC,MAGvB,YAAflC,EAAMkC,KAAoB,CAE1Bsb,WAAW,WACPzW,EAAYzD,EAAS4O,SAAUvF,EAAOiH,WAAW6P,cAAc,IAChE,GAGH,IAAM6E,EAAQhO,EAAKlP,MAAQ,IAAO,IAGlCic,aAAaC,EAAOpV,UAEpBoV,EAAOpV,SAAWsL,WAAW,WAAA,OAAMnT,GAAG8c,eAAe7kB,KAAKgY,EAAKvO,QAAQ,IAAQuc,MAKvF1N,EACIhZ,KAAKmK,OAAOzI,SAAS+P,OAAOE,OAC5B,QACA,SAAAvT,GAGI,IAAM8R,EAAW9R,EAAM2pB,kCAHlBC,EAMU,CAAC5pB,EAAM6pB,QAAS7pB,EAAM8pB,QAAQje,IAAI,SAAApH,GAAA,OAAUqN,GAAYrN,EAAQA,IAN1EslB,EAAArlB,EAAAklB,EAAA,GAMElF,EANFqF,EAAA,GAMKnF,EANLmF,EAAA,GASCC,EAAYhR,KAAKiR,KAAKjR,KAAKkR,IAAIxF,GAAK1L,KAAKkR,IAAItF,GAAKF,EAAIE,GAG5DtK,EAAKvO,OAAOmc,eAAe8B,EAAY,IAZlC,IAeGzW,EAAW+G,EAAKvO,OAAOf,MAAvBuI,QACW,IAAdyW,GAAmBzW,EAAS,IAAsB,IAAfyW,GAAoBzW,EAAS,IACjEvT,EAAMukB,kBAGd,UACA,SAnqBNgD,+HCXL,IAAe4C,EAAAA,EAQR,WAMR,IAAIC,EAAU,aACVC,EAAgB,GAChBC,EAAoB,GACpBC,EAAsB,GAmD1B,SAASC,EAAQC,EAAUC,GAEzB,GAAKD,EAAL,CAEA,IAAIE,EAAIJ,EAAoBE,GAM5B,GAHAH,EAAkBG,GAAYC,EAGzBC,EAGL,KAAOA,EAAE/rB,QACP+rB,EAAE,GAAGF,EAAUC,GACfC,EAAEC,OAAO,EAAG,IAUhB,SAASC,EAAiBloB,EAAMmoB,GAE1BnoB,EAAKL,OAAMK,EAAO,CAACooB,QAASpoB,IAG5BmoB,EAAalsB,QAAS+D,EAAKmR,OAASsW,GAASU,IAC3CnoB,EAAKooB,SAAWX,GAASznB,GASjC,SAASqoB,EAAShe,EAAMie,EAAYtoB,EAAMuoB,GACxC,IAKIC,EACAtqB,EANAuqB,EAAMnmB,SACNomB,EAAQ1oB,EAAK0oB,MACbC,GAAY3oB,EAAK4oB,YAAc,GAAK,EACpCC,EAAmB7oB,EAAK8oB,QAAUrB,EAClCsB,EAAe1e,EAAK3G,QAAQ,cAAe,IAI/C6kB,EAAWA,GAAY,EAEnB,iBAAiBjiB,KAAK+D,IACxBme,GAAQ,GAGRtqB,EAAIuqB,EAAIrmB,cAAc,SACpB4mB,IAAM,aACR9qB,EAAEid,KAAO4N,GACA,+BAA+BziB,KAAK+D,IAE7CnM,EAAIuqB,EAAIrmB,cAAc,QACpBuH,IAAMof,IAGR7qB,EAAIuqB,EAAIrmB,cAAc,WACpBuH,IAAMU,EACRnM,EAAEwqB,WAAkB3pB,IAAV2pB,GAA6BA,GAGzCxqB,EAAEwlB,OAASxlB,EAAEylB,QAAUzlB,EAAE+qB,aAAe,SAAUC,GAChD,IAAIxa,EAASwa,EAAG3pB,KAAK,GAIrB,GAAIipB,GAAS,cAAetqB,EAC1B,IACOA,EAAEirB,MAAMC,QAAQntB,SAAQyS,EAAS,KACtC,MAAOqT,GAGPrT,EAAS,IAKb,GAAc,KAAVA,IAEF6Z,GAAY,GAGGI,EACb,OAAON,EAAShe,EAAMie,EAAYtoB,EAAMuoB,GAK5CD,EAAWje,EAAMqE,EAAQwa,EAAGG,oBAII,IAA9BR,EAAiBxe,EAAMnM,IAAcuqB,EAAIa,KAAK/nB,YAAYrD,GA+ChE,SAASqrB,EAAOC,EAAOC,EAAMC,GAC3B,IAAI5B,EACA9nB,EASJ,GANIypB,GAAQA,EAAKjmB,OAAMskB,EAAW2B,GAGlCzpB,GAAQ8nB,EAAW4B,EAAOD,IAAS,GAG/B3B,EAAU,CACZ,GAAIA,KAAYJ,EACd,KAAM,SAENA,EAAcI,IAAY,GArDhC,SAAmB0B,EAAOlB,EAAYtoB,GAIpC,IAGI2pB,EACA5e,EAJA6e,GAFJJ,EAAQA,EAAM/pB,KAAO+pB,EAAQ,CAACA,IAEPvtB,OACnB8lB,EAAI6H,EACJ7B,EAAgB,GAqBpB,IAhBA4B,EAAK,SAAStf,EAAMqE,EAAQ2a,GAM1B,GAJc,KAAV3a,GAAeqZ,EAActoB,KAAK4K,GAIxB,KAAVqE,EAAe,CACjB,IAAI2a,EACC,OADiBtB,EAActoB,KAAK4K,KAI3Cuf,GACiBtB,EAAWP,IAIzBhd,EAAE,EAAGA,EAAIgX,EAAGhX,IAAKsd,EAASmB,EAAMze,GAAI4e,EAAI3pB,GA+B7C6pB,CAAUL,EAAO,SAAUzB,GAEzBG,EAAiBloB,EAAM+nB,GAGvBF,EAAQC,EAAUC,IACjB/nB,GAiDL,OAxCAupB,EAAOvF,MAAQ,SAAe8F,EAAM9pB,GAOlC,OAxOF,SAAmB+pB,EAAWzB,GAE5ByB,EAAYA,EAAUtqB,KAAOsqB,EAAY,CAACA,GAE1C,IAGIJ,EACA7B,EACAkC,EALA7B,EAAe,GACfpd,EAAIgf,EAAU9tB,OACd2tB,EAAa7e,EAejB,IARA4e,EAAK,SAAU7B,EAAUC,GACnBA,EAAc9rB,QAAQksB,EAAa1oB,KAAKqoB,KAE5C8B,GACiBtB,EAAWH,IAIvBpd,KACL+c,EAAWiC,EAAUhf,IAGrBif,EAAIrC,EAAkBG,IAEpB6B,EAAG7B,EAAUkC,IAKXpC,EAAoBE,GAAYF,EAAoBE,IAAa,IACnEroB,KAAKkqB,GAkMTM,CAAUH,EAAM,SAAU3B,GAExBD,EAAiBloB,EAAMmoB,KAGlBoB,GAQTA,EAAO1C,KAAO,SAAciB,GAC1BD,EAAQC,EAAU,KAOpByB,EAAOrK,MAAQ,WACbwI,EAAgB,GAChBC,EAAoB,GACpBC,EAAsB,IAQxB2B,EAAOW,UAAY,SAAmBpC,GACpC,OAAOA,KAAYJ,GAKd6B,GA9RHY,EAAAC,QAAiB5C,6CCEN,SAAS6C,GAAWvsB,GAC/B,OAAO,IAAIqP,QAAQ,SAACC,EAASC,GACzBkc,GAAOzrB,EAAK,CACRsqB,QAAShb,EACT+D,MAAO9D,MC2BnB,SAASid,GAAoB1gB,GACrBA,IAAS3K,KAAK0d,MAAM4N,YACpBtrB,KAAK0d,MAAM4N,WAAY,GAEvBtrB,KAAKoJ,MAAMmB,SAAWI,IACtB3K,KAAKoJ,MAAMmB,QAAUI,EACrBzJ,EAAaR,KAAKV,KAAMA,KAAKoJ,MAAOuB,EAAO,OAAS,UAI5D,IAAMiW,GAAQ,CACVtE,MADU,WACF,IAAAvc,EAAAC,KAEJmF,EAAYnF,KAAK0B,SAASC,QAAS3B,KAAK+K,OAAOiH,WAAW0L,OAAO,GAGjEkD,GAAM2K,eAAe7qB,KAAKV,MAGrB9C,EAAGE,OAAOmB,OAAOitB,OASlB5K,GAAMmE,MAAMrkB,KAAKV,MARjBorB,GAAWprB,KAAK+K,OAAO4V,KAAKC,MAAMC,KAC7BrR,KAAK,WACFoR,GAAMmE,MAAMrkB,KAAKX,KAEpB2P,MAAM,SAAAwC,GACHnS,EAAKkL,MAAMkH,KAAK,2BAA4BD,MAS5DqZ,eAxBU,SAwBKrvB,GAAO,IAAAuvB,GACFvuB,EAAGM,OAAOtB,GAASA,EAAQ8D,KAAK+K,OAAO2T,OAAOte,MAAM,KADlDsrB,EAAA5oB,EAAA2oB,EAAA,GAEZE,EAAU,IAFED,EAAA,GAAAA,EAAA,GAKlB,GAFA1rB,KAAK0B,SAASC,QAAQmF,MAAM8kB,cAAmBD,EAA/C,IAEI3rB,KAAKZ,UAAUqJ,GAAI,CACnB,IACMojB,GADS,IACUF,GAAV,IAEf3rB,KAAKoJ,MAAMtC,MAAMglB,UAAjB,eAA4CD,EAA5C,OAKR9G,MAtCU,WAsCF,IAAA1O,EAAArW,KACEmK,EAASnK,KAeToc,EAASD,GAZC,CACZ4C,KAAM5U,EAAOY,OAAOgU,KAAKjC,OACzByB,SAAUpU,EAAOoU,SAEjBwN,QAAQ,EACRC,UAAU,EACVlf,OAAO,EACPqM,OAAO,EACP8S,YAAa,EACbC,QAAS,QACT5jB,aAActI,KAAK+K,OAAOwG,WAAW6N,YAKrCtV,EAASK,EAAOf,MAAMW,aAAa,OAGnC7M,EAAGgC,MAAM4K,KACTA,EAASK,EAAOf,MAAMW,aAAaI,EAAOY,OAAOtI,WAAWib,MAAM7Y,KAGtE,IA/FShG,EA+FHgG,GA/FGhG,EA+FUiL,EA9FnB5M,EAAGgC,MAAML,GACF,KAGP3B,EAAGG,OAAOC,OAAOuB,IACVA,EAIJA,EAAIgN,MADG,mCACYG,OAAOmgB,GAAKttB,GAwF5BiiB,EAAS3d,EAAc,UACvBuH,EAAMiB,EAAOxB,EAAOY,OAAO4V,KAAKC,MAAME,OAAQjc,EAAIuX,GACxD0E,EAAO5d,aAAa,MAAOwH,GAC3BoW,EAAO5d,aAAa,kBAAmB,IACvC4d,EAAO5d,aAAa,oBAAqB,IACzC4d,EAAO5d,aAAa,QAAS,YAlCzB,IAwCEvB,EAAUwB,EAAc,MAAO,CAAEie,OAHpBjX,EAAXiX,OAGuCxc,MAAOuF,EAAOY,OAAOiH,WAAWmP,iBAC/Exf,EAAQW,YAAYwe,GACpB3W,EAAOf,MAAQvF,EAAelC,EAASwI,EAAOf,OAG9C4E,EAAMrC,EAAOxB,EAAOY,OAAO4V,KAAKC,MAAMpY,IAAK3D,GAAK,QAAQ2K,KAAK,SAAAhB,GACzD,IAAItR,EAAGgC,MAAMsP,GAAb,CAKA,IAAM3P,EAAM,IAAIC,IAAI0P,EAAS,GAAG4d,iBAGhCvtB,EAAIwtB,SAAcxtB,EAAIwtB,SAASjsB,MAAM,KAAK,GAA1C,OAGAqI,GAAGwc,UAAUvkB,KAAKyJ,EAAQtL,EAAIqd,MAAMxM,MAAM,iBAK9CvF,EAAOuT,MAAQ,IAAInf,OAAOitB,MAAMc,OAAOxL,EAAQ,CAC3CtC,UAAWrU,EAAOY,OAAOyT,UACzB9I,MAAOvL,EAAOuL,QAGlBvL,EAAOf,MAAMmB,QAAS,EACtBJ,EAAOf,MAAMkB,YAAc,EAGvBH,EAAO/K,UAAUqJ,IACjB0B,EAAOuT,MAAM6O,mBAIjBpiB,EAAOf,MAAMuB,KAAO,WAEhB,OADA0gB,GAAoB3qB,KAAKyJ,GAAQ,GAC1BA,EAAOuT,MAAM/S,QAGxBR,EAAOf,MAAM4H,MAAQ,WAEjB,OADAqa,GAAoB3qB,KAAKyJ,GAAQ,GAC1BA,EAAOuT,MAAM1M,SAGxB7G,EAAOf,MAAMojB,KAAO,WAChBriB,EAAO6G,QACP7G,EAAOG,YAAc,GAxFrB,IA4FEA,EAAgBH,EAAOf,MAAvBkB,YACN9N,OAAO8C,eAAe6K,EAAOf,MAAO,cAAe,CAC/C7J,IAD+C,WAE3C,OAAO+K,GAEXF,IAJ+C,SAI3C4F,GAAM,IAIE0N,EAAiCvT,EAAjCuT,MAAOtU,EAA0Be,EAA1Bf,MAAOmB,EAAmBJ,EAAnBI,OAAQoH,EAAWxH,EAAXwH,OACxB8a,EAAeliB,IAAWmT,EAAM4N,UAGtCliB,EAAM8N,SAAU,EAChBhW,EAAaR,KAAKyJ,EAAQf,EAAO,WAGjC8E,QAAQC,QAAQse,GAAgB/O,EAAMgP,UAAU,IAE3Cld,KAAK,WAAA,OAAMkO,EAAMiP,eAAe3c,KAEhCR,KAAK,WAAA,OAAMid,GAAgB/O,EAAM1M,UAEjCxB,KAAK,WAAA,OAAMid,GAAgB/O,EAAMgP,UAAU/a,KAC3CjC,MAAM,iBAOnB,IAAIyJ,EAAQhP,EAAOY,OAAOoO,MAAM6F,SAChCxiB,OAAO8C,eAAe6K,EAAOf,MAAO,eAAgB,CAChD7J,IADgD,WAE5C,OAAO4Z,GAEX/O,IAJgD,SAI5ClO,GACAiO,EAAOuT,MACFkP,gBAAgB1wB,GAChBsT,KAAK,WACF2J,EAAQjd,EACRgF,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,gBAE3CsG,MAAM,SAAAwC,GAEgB,UAAfA,EAAMkD,MACN9E,GAAS2I,aAAavY,KAAKyJ,EAAQ,SA1InD,IAiJEwH,EAAWxH,EAAOY,OAAlB4G,OACNnV,OAAO8C,eAAe6K,EAAOf,MAAO,SAAU,CAC1C7J,IAD0C,WAEtC,OAAOoS,GAEXvH,IAJ0C,SAItClO,GACAiO,EAAOuT,MAAMgP,UAAUxwB,GAAOsT,KAAK,WAC/BmC,EAASzV,EACTgF,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,qBAzJhD,IA+JEsM,EAAUvL,EAAOY,OAAjB2K,MACNlZ,OAAO8C,eAAe6K,EAAOf,MAAO,QAAS,CACzC7J,IADyC,WAErC,OAAOmW,GAEXtL,IAJyC,SAIrClO,GACA,IAAM0D,IAAS1C,EAAGO,QAAQvB,IAASA,EAEnCiO,EAAOuT,MAAMgP,UAAU9sB,EAAS,EAAIuK,EAAOY,OAAO4G,QAAQnC,KAAK,WAC3DkG,EAAQ9V,EACRsB,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,qBAzKhD,IA+KE2V,EAAS5U,EAAOY,OAAhBgU,KACNviB,OAAO8C,eAAe6K,EAAOf,MAAO,OAAQ,CACxC7J,IADwC,WAEpC,OAAOwf,GAEX3U,IAJwC,SAIpClO,GACA,IAAM0D,EAAS1C,EAAGO,QAAQvB,GAASA,EAAQiO,EAAOY,OAAOgU,KAAKjC,OAE9D3S,EAAOuT,MAAMmP,QAAQjtB,GAAQ4P,KAAK,WAC9BuP,EAAOnf,OAMnB,IAAIktB,OAAAA,EACJ3iB,EAAOuT,MACFqP,cACAvd,KAAK,SAAA3M,GACFiqB,EAAajqB,IAEhB6M,MAAM,SAAAwC,GACHmE,EAAKpL,MAAMkH,KAAKD,KAGxB1V,OAAO8C,eAAe6K,EAAOf,MAAO,aAAc,CAC9C7J,IAD8C,WAE1C,OAAOutB,KAKftwB,OAAO8C,eAAe6K,EAAOf,MAAO,QAAS,CACzC7J,IADyC,WAErC,OAAO4K,EAAOG,cAAgBH,EAAO2H,YAK7C5D,QAAQ8R,IAAI,CAAC7V,EAAOuT,MAAMsP,gBAAiB7iB,EAAOuT,MAAMuP,mBAAmBzd,KAAK,SAAA0d,GAC5E,IAAMxO,EA9QlB,SAAwB/H,EAAOwD,GAC3B,IACMuE,EADW,SAAXyO,EAAYC,EAAGC,GAAJ,OAAiB,IAANA,EAAUD,EAAID,EAASE,EAAGD,EAAIC,GAC5CF,CAASxW,EAAOwD,GAC9B,OAAUxD,EAAQ+H,EAAlB,IAA2BvE,EAASuE,EA2Qd4O,CAAeJ,EAAW,GAAIA,EAAW,IACvDtM,GAAM2K,eAAe7qB,KAAK2V,EAAMqI,KAIpCvU,EAAOuT,MAAM6P,aAAapjB,EAAOY,OAAOyT,WAAWhP,KAAK,SAAAge,GACpDrjB,EAAOY,OAAOyT,UAAYgP,IAI9BrjB,EAAOuT,MAAM+P,gBAAgBje,KAAK,SAAA1C,GAC9B3C,EAAOY,OAAO+B,MAAQA,EACtBrE,GAAGuc,SAAStkB,KAAK2V,KAIrBlM,EAAOuT,MAAMgQ,iBAAiBle,KAAK,SAAA3M,GAC/ByH,EAAczH,EACd3B,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,gBAI5Ce,EAAOuT,MAAMiQ,cAAcne,KAAK,SAAA3M,GAC5BsH,EAAOf,MAAM0I,SAAWjP,EACxB3B,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,oBAI5Ce,EAAOuT,MAAMkQ,gBAAgBpe,KAAK,SAAAmJ,GAC9BxO,EAAOf,MAAMG,WAAaoP,EAC1BrH,GAASgL,MAAM5b,KAAKyJ,KAGxBA,EAAOuT,MAAMjd,GAAG,YAAa,SAAAmC,GAAmB,IAAAirB,EAAAjrB,EAAhBqb,KACtB6P,QADsChuB,IAAA+tB,EAAT,GAASA,GAClB5jB,IAAI,SAAA3L,GAAA,OnBvQhBwL,EmBuQiCxL,EAAI8E,KnBtQrD2qB,EAAW1qB,SAAS2qB,yBACpBhwB,EAAUqF,SAASF,cAAc,OACvC4qB,EAASzrB,YAAYtE,GACrBA,EAAQyO,UAAY3C,EACbikB,EAASE,WAAW3qB,UALxB,IAAmBwG,EAChBikB,EACA/vB,ImBsQEsT,GAAS+L,WAAW3c,KAAKyJ,EAAQ2jB,KAGrC3jB,EAAOuT,MAAMjd,GAAG,SAAU,YAEtB0J,EAAOuT,MAAMwQ,YAAY1e,KAAK,SAAAjF,GAC1B8gB,GAAoB3qB,KAAKyJ,GAASI,GAC7BA,GACDrJ,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,aAI5ClM,EAAGc,QAAQmM,EAAOuT,MAAM1f,UAAYmM,EAAO/K,UAAUqJ,KACvC0B,EAAOuT,MAAM1f,QAIrBkF,aAAa,YAAa,KAIxCiH,EAAOuT,MAAMjd,GAAG,OAAQ,WACpB4qB,GAAoB3qB,KAAKyJ,GAAQ,GACjCjJ,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,aAG5Ce,EAAOuT,MAAMjd,GAAG,QAAS,WACrB4qB,GAAoB3qB,KAAKyJ,GAAQ,KAGrCA,EAAOuT,MAAMjd,GAAG,aAAc,SAAAyO,GAC1B/E,EAAOf,MAAM8N,SAAU,EACvB5M,EAAc4E,EAAKif,QACnBjtB,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,gBAG5Ce,EAAOuT,MAAMjd,GAAG,WAAY,SAAAyO,GACxB/E,EAAOf,MAAM6M,SAAW/G,EAAKgH,QAC7BhV,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,YAGL,IAA/BwG,SAASV,EAAKgH,QAAS,KACvBhV,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,kBAK5Ce,EAAOuT,MAAMiQ,cAAcne,KAAK,SAAA3M,GACxBA,IAAUsH,EAAOf,MAAM0I,WACvB3H,EAAOf,MAAM0I,SAAWjP,EACxB3B,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,uBAKpDe,EAAOuT,MAAMjd,GAAG,SAAU,WACtB0J,EAAOf,MAAM8N,SAAU,EACvBhW,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,YAG5Ce,EAAOuT,MAAMjd,GAAG,QAAS,WACrB0J,EAAOf,MAAMmB,QAAS,EACtBrJ,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,WAG5Ce,EAAOuT,MAAMjd,GAAG,QAAS,SAAAW,GACrB+I,EAAOf,MAAM8I,MAAQ9Q,EACrBF,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,WAI5CwS,WAAW,WAAA,OAAMnT,GAAGoc,MAAMnkB,KAAKyJ,IAAS,KC5XhD,SAASikB,GAAelyB,GACpB,IAWMmyB,EAAQ7xB,OAAOkG,QAXH,CACd4rB,OAAQ,KACRC,OAAQ,KACRC,OAAQ,KACRC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,KAAM,MAG8BhoB,KAAK,SAAAwnB,GAAA,OAASA,EAAMtoB,SAAS7J,KAErE,OAAImyB,EAEOA,EAAMxnB,KAAK,SAAAhE,GAAA,OAASA,IAAU3G,IAGlC,UAYX,SAASmvB,GAAoB1gB,GACrBA,IAAS3K,KAAK0d,MAAM4N,YACpBtrB,KAAK0d,MAAM4N,WAAY,GAEvBtrB,KAAKoJ,MAAMmB,SAAWI,IACtB3K,KAAKoJ,MAAMmB,QAAUI,EACrBzJ,EAAaR,KAAKV,KAAMA,KAAKoJ,MAAOuB,EAAO,OAAS,UAI5D,IrB5D0BvN,GqB4DpB2jB,GAAU,CACZzE,MADY,WACJ,IAAAvc,EAAAC,KAEJmF,EAAYnF,KAAK0B,SAASC,QAAS3B,KAAK+K,OAAOiH,WAAW0L,OAAO,GAGjEqD,GAAQwK,eAAe7qB,KAAKV,MAGxB9C,EAAGE,OAAOmB,OAAOuwB,KAAO5xB,EAAGQ,SAASa,OAAOuwB,GAAGxC,QAC9CvL,GAAQgE,MAAMrkB,KAAKV,OAGnBorB,GAAWprB,KAAK+K,OAAO4V,KAAKI,QAAQF,KAAKnR,MAAM,SAAAwC,GAC3CnS,EAAKkL,MAAMkH,KAAK,6BAA8BD,KAKlD3T,OAAOwwB,wBAA0BxwB,OAAOwwB,yBAA2B,GAGnExwB,OAAOwwB,wBAAwBvuB,KAAK,WAChCugB,GAAQgE,MAAMrkB,KAAKX,KAIvBxB,OAAOywB,wBAA0B,WAC7BzwB,OAAOwwB,wBAAwB1uB,QAAQ,SAAAV,GACnCA,SAOhBsvB,SApCY,SAoCHC,GAAS,IAAA7Y,EAAArW,KAId,GAAI9C,EAAGQ,SAASsC,KAAK0d,MAAMyR,cAAe,CAAA,IAC9BriB,EAAU9M,KAAK0d,MAAMyR,eAArBriB,MAER,GAAI5P,EAAGgC,MAAM4N,GAGT,OAFA9M,KAAK+K,OAAO+B,MAAQA,OACpBrE,GAAGuc,SAAStkB,KAAKV,MAMzB,IAAMiD,EAAMjD,KAAK+K,OAAO9N,KAAK8kB,OACzB7kB,EAAGM,OAAOyF,KAAS/F,EAAGgC,MAAM+D,IAG5B+K,EAFYrC,EAAO3L,KAAK+K,OAAO4V,KAAKI,QAAQvY,IAAK0mB,EAASjsB,IAGrDuM,KAAK,SAAAC,GACEvS,EAAGE,OAAOqS,KACV4G,EAAKtL,OAAO+B,MAAQ2C,EAAO2f,MAAM,GAAGC,QAAQviB,MAC5CrE,GAAGuc,SAAStkB,KAAK2V,MAGxB3G,MAAM,eAKnB6b,eAnEY,WAoER,IAAM7M,EAAQ1e,KAAK+K,OAAO2T,MAAMte,MAAM,KACtCJ,KAAK0B,SAASC,QAAQmF,MAAM8kB,cAAmB,IAAMlN,EAAM,GAAKA,EAAM,GAAtE,KAIJqG,MAzEY,WA0ER,IAAM5a,EAASnK,KAGTsvB,EAAYnlB,EAAOf,MAAMW,aAAa,MAC5C,GAAK7M,EAAGgC,MAAMowB,KAAcA,EAAUvwB,WAAW,YAAjD,CAKA,IAAI+K,EAASK,EAAOf,MAAMW,aAAa,OAGnC7M,EAAGgC,MAAM4K,KACTA,EAASK,EAAOf,MAAMW,aAAa/J,KAAK+K,OAAOtI,WAAWib,MAAM7Y,KAIpE,IA9IShG,EA8IHqwB,GA9IGrwB,EA8IeiL,EA7IxB5M,EAAGgC,MAAML,GACF,KAIJA,EAAIgN,MADG,gEACYG,OAAOmgB,GAAKttB,GAyI5BgG,EAAgBsF,EAAO9B,SpBvJjC,IAAoB+O,KAAKmE,MAAsB,IAAhBnE,KAAKoE,UoB6J1BvV,EAAY9C,EAAc,MAAO,CAAE0B,GAAAA,EAAIuc,OAH1BjX,EAAXiX,SAIRjX,EAAOf,MAAQvF,EAAeoC,EAAWkE,EAAOf,OAGhD,IAAMmmB,EAAY,SAAAC,GAAA,MAAA,8BAAwCN,EAAxC,IAAmDvjB,EAAnD,eAGlByY,GAAUmL,EAAU,UAAW,KAC1B7f,MAAM,WAAA,OAAM0U,GAAUmL,EAAU,MAAO,OACvC7f,MAAM,WAAA,OAAM0U,GAAUmL,EAAU,SAChC/f,KAAK,SAAA8U,GAAA,OAAS7b,GAAGwc,UAAUvkB,KAAKyJ,EAAQma,EAAM5Z,OAC9C8E,KAAK,SAAA+f,GAEGA,EAAUxpB,SAAS,YACpBoE,EAAOzI,SAAS0f,OAAOta,MAAMwe,eAAiB,WAGrD5V,MAAM,cAIXvF,EAAOuT,MAAQ,IAAInf,OAAOuwB,GAAGxC,OAAOznB,EAAI,CACpCqqB,QAAAA,EACAO,WAAY,CACRlR,SAAUpU,EAAOY,OAAOwT,SAAW,EAAI,EACvCmR,GAAIvlB,EAAOY,OAAO2kB,GAClBpf,SAAUnG,EAAO/K,UAAUqJ,GAAK,EAAI,EACpCshB,IAAK,EACL4F,SAAU,EACVC,eAAgB,EAChBC,eAAgB,EAChBC,UAAW,EACXxnB,YAAa,EAIbynB,gBAAiBxxB,OAASA,OAAOmS,SAASwL,KAAO,KAGjD8T,eAAgB7lB,EAAOmH,SAASwL,OAAS,EAAI,EAC7CmT,aAAc9lB,EAAOY,OAAOuG,SAASwH,UAEzC3Y,OAAQ,CACJ+vB,QADI,SACI9xB,GAEJ,IAAK+L,EAAOf,MAAM8I,MAAO,CACrB,IAAM6T,EAAO3nB,EAAM8Q,KAEbihB,EACF,CACIC,EAAG,uOACHC,EAAG,uHACHC,IAAK,qIACLC,IAAK,uFACLC,IAAK,wFACPzK,IAAS,2BAEf5b,EAAOf,MAAM8I,MAAQ,CAAE6T,KAAAA,EAAMoK,QAAAA,GAE7BjvB,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,WAGhDqnB,wBApBI,WAqBAvvB,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,iBAAiB,EAAO,CAC5DyB,QAASV,EAAOf,MAAMyB,WAG9B6lB,qBAzBI,SAyBiBtyB,GAEjB,IAAMuyB,EAAWvyB,EAAMmN,OAGvBpB,EAAOf,MAAMwnB,aAAeD,EAASE,kBAErC3vB,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,eAE5C0nB,QAlCI,SAkCI1yB,GAEJ,IAAIlB,EAAGQ,SAASyM,EAAOf,MAAMuB,MAA7B,CAIA,IAAMgmB,EAAWvyB,EAAMmN,OAGvBwV,GAAQkO,SAASvuB,KAAKyJ,EAAQ+kB,GAG9B/kB,EAAOf,MAAMuB,KAAO,WAChB0gB,GAAoB3qB,KAAKyJ,GAAQ,GACjCwmB,EAASI,aAGb5mB,EAAOf,MAAM4H,MAAQ,WACjBqa,GAAoB3qB,KAAKyJ,GAAQ,GACjCwmB,EAASK,cAGb7mB,EAAOf,MAAMojB,KAAO,WAChBmE,EAASM,aAGb9mB,EAAOf,MAAM0I,SAAW6e,EAAShD,cACjCxjB,EAAOf,MAAMmB,QAAS,EAGtBJ,EAAOf,MAAMkB,YAAc,EAC3B9N,OAAO8C,eAAe6K,EAAOf,MAAO,cAAe,CAC/C7J,IAD+C,WAE3C,OAAOjC,OAAOqzB,EAASjD,mBAE3BtjB,IAJ+C,SAI3C4F,GAEI7F,EAAOI,SAAWJ,EAAOuT,MAAM4N,WAC/BnhB,EAAOuT,MAAMtM,OAIjBjH,EAAOf,MAAM8N,SAAU,EACvBhW,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,WAGxCunB,EAAS9I,OAAO7X,MAKxBxT,OAAO8C,eAAe6K,EAAOf,MAAO,eAAgB,CAChD7J,IADgD,WAE5C,OAAOoxB,EAASE,mBAEpBzmB,IAJgD,SAI5ClO,GACAy0B,EAAS/D,gBAAgB1wB,MAKjCM,OAAO8C,eAAe6K,EAAOf,MAAO,UAAW,CAC3C7J,IAD2C,WAEvC,OAAO6uB,GAAeuC,EAASO,uBAEnC9mB,IAJ2C,SAIvClO,GACAy0B,EAASQ,mBAAmB/C,GAAelyB,OAlExC,IAuELyV,EAAWxH,EAAOY,OAAlB4G,OACNnV,OAAO8C,eAAe6K,EAAOf,MAAO,SAAU,CAC1C7J,IAD0C,WAEtC,OAAOoS,GAEXvH,IAJ0C,SAItClO,GACAyV,EAASzV,EACTy0B,EAASjE,UAAmB,IAAT/a,GACnBzQ,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,mBA/ErC,IAoFLsM,EAAUvL,EAAOY,OAAjB2K,MACNlZ,OAAO8C,eAAe6K,EAAOf,MAAO,QAAS,CACzC7J,IADyC,WAErC,OAAOmW,GAEXtL,IAJyC,SAIrClO,GACA,IAAM0D,EAAS1C,EAAGO,QAAQvB,GAASA,EAAQwZ,EAC3CA,EAAQ9V,EACR+wB,EAAS/wB,EAAS,OAAS,YAC3BsB,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,mBAKhD5M,OAAO8C,eAAe6K,EAAOf,MAAO,aAAc,CAC9C7J,IAD8C,WAE1C,OAAOoxB,EAAS5D,iBAKxBvwB,OAAO8C,eAAe6K,EAAOf,MAAO,QAAS,CACzC7J,IADyC,WAErC,OAAO4K,EAAOG,cAAgBH,EAAO2H,YAK7C3H,EAAO9K,QAAQ8Z,MAAQwX,EAASS,4BAG5BjnB,EAAO/K,UAAUqJ,IACjB0B,EAAOf,MAAMlG,aAAa,YAAa,GAG3ChC,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,cACxClI,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,kBAGxCioB,cAAclnB,EAAOub,OAAO4L,WAG5BnnB,EAAOub,OAAO4L,UAAYC,YAAY,WAElCpnB,EAAOf,MAAM6M,SAAW0a,EAASa,0BAGC,OAA9BrnB,EAAOf,MAAMqoB,cAAyBtnB,EAAOf,MAAMqoB,aAAetnB,EAAOf,MAAM6M,WAC/E/U,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,YAI5Ce,EAAOf,MAAMqoB,aAAetnB,EAAOf,MAAM6M,SAGX,IAA1B9L,EAAOf,MAAM6M,WACbob,cAAclnB,EAAOub,OAAO4L,WAG5BpwB,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,oBAE7C,KAGHwS,WAAW,WAAA,OAAMnT,GAAGoc,MAAMnkB,KAAKyJ,IAAS,MAE5CunB,cAxLI,SAwLUtzB,GAEV,IAzVKuzB,EAyVChB,EAAWvyB,EAAMmN,OAoBvB,OAjBA8lB,cAAclnB,EAAOub,OAAOnE,SAEbpX,EAAOf,MAAM8N,SAAW,CAAC,EAAG,GAAGnR,SAAS3H,EAAM8Q,QAIzD/E,EAAOf,MAAM8N,SAAU,EACvBhW,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,WAUpChL,EAAM8Q,MACV,KAAM,EAEFhO,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,cAGxCe,EAAOf,MAAM6M,SAAW0a,EAASa,yBACjCtwB,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,YAExC,MAEJ,KAAK,EACDiiB,GAAoB3qB,KAAKyJ,GAAQ,GAG7BA,EAAOf,MAAM2V,MAEb4R,EAASM,YACTN,EAASI,aAET7vB,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,SAG5C,MAEJ,KAAK,EAEGe,EAAOf,MAAMmB,SAAWJ,EAAOuT,MAAM4N,UACrCnhB,EAAOf,MAAM4H,SAEbqa,GAAoB3qB,KAAKyJ,GAAQ,GAEjCjJ,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,WAGxCe,EAAOub,OAAOnE,QAAUgQ,YAAY,WAChCrwB,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,eACzC,IAKCe,EAAOf,MAAM0I,WAAa6e,EAAShD,gBACnCxjB,EAAOf,MAAM0I,SAAW6e,EAAShD,cACjCzsB,EAAaR,KAAKyJ,EAAQA,EAAOf,MAAO,mBAI5CkH,GAASqH,eAAejX,KACpByJ,GA9ZXwnB,EA+Z2BhB,EAASiB,4BA9ZrD10B,EAAGgC,MAAMyyB,GACFA,EAGJ3kB,EAAO2kB,EAAO1nB,IAAI,SAAA4nB,GAAA,OAASzD,GAAeyD,SA8ZzB,MAEJ,KAAK,EAEI1nB,EAAOuL,OACRvL,EAAOuT,MAAMoU,SAEjBzG,GAAoB3qB,KAAKyJ,GAAQ,GAQzCjJ,EAAaR,KAAKyJ,EAAQA,EAAOzI,SAASuE,UAAW,eAAe,EAAO,CACvE8f,KAAM3nB,EAAM8Q,cC1d9B9F,GAAQ,CAEVkT,MAFU,WAIDtc,KAAKoJ,OAMVjE,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAW1R,KAAKmE,QAAQ,MAAOzE,KAAKM,OAAO,GAG5F6E,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAW3J,SAAS5D,QAAQ,MAAOzE,KAAKqI,WAAW,GAIhGrI,KAAKklB,SACL/f,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAW1R,KAAKmE,QAAQ,MAAO,UAAU,GAI1FzE,KAAKuc,UAELvc,KAAK0B,SAASC,QAAUwB,EAAc,MAAO,CACzCyB,MAAO5E,KAAK+K,OAAOiH,WAAW7J,QAIlC1G,EAAKzB,KAAKoJ,MAAOpJ,KAAK0B,SAASC,SAG/B3B,KAAK0B,SAAS0f,OAASje,EAAc,MAAO,CACxCyB,MAAO5E,KAAK+K,OAAOiH,WAAWoP,SAGlCphB,KAAK0B,SAASC,QAAQW,YAAYtC,KAAK0B,SAAS0f,SAGhDphB,KAAKmJ,QACLS,EAAMM,OAAOxJ,KAAKV,MACXA,KAAKwc,UACZuE,GAAQzE,MAAM5b,KAAKV,MACZA,KAAKoZ,SACZwH,GAAMtE,MAAM5b,KAAKV,OAvCjBA,KAAKiL,MAAMkH,KAAK,6BCEtB4f,GAAAA,WAMF,SAAAA,EAAY5nB,GAAQ,IAAApK,EAAAC,KAAAoN,EAAApN,KAAA+xB,GAChB/xB,KAAKmK,OAASA,EACdnK,KAAKgiB,YAAc7X,EAAOY,OAAOuW,IAAIU,YACrChiB,KAAKuhB,SAAU,EACfvhB,KAAK4mB,aAAc,EACnB5mB,KAAK0B,SAAW,CACZuE,UAAW,KACX+rB,iBAAkB,MAEtBhyB,KAAKiyB,QAAU,KACfjyB,KAAKkyB,OAAS,KACdlyB,KAAKmyB,UAAY,KACjBnyB,KAAKG,OAAS,GACdH,KAAKoyB,YAAc,KACnBpyB,KAAKqyB,eAAiB,KAGtBryB,KAAK6mB,eAAiB,IAAI3Y,QAAQ,SAACC,EAASC,GAExCrO,EAAKU,GAAG,SAAU0N,GAGlBpO,EAAKU,GAAG,QAAS2N,KAGrBpO,KAAK4K,gDAYF,IAAAyL,EAAArW,KACCA,KAAKqN,UAEAnQ,EAAGE,OAAOmB,OAAOwjB,SAAY7kB,EAAGE,OAAOmB,OAAOwjB,OAAOuQ,KAUtDtyB,KAAK+kB,QATLqG,GAAWprB,KAAKmK,OAAOY,OAAO4V,KAAKK,UAAUH,KACxCrR,KAAK,WACF6G,EAAK0O,UAERrV,MAAM,WAEH2G,EAAKkc,QAAQ,QAAS,IAAI9jB,MAAM,qEAW5C,IAAAmJ,EAAA5X,KAGJA,KAAKwyB,iBAAiB,KAAO,WAG7BxyB,KAAK6mB,eAAerX,KAAK,WACrBoI,EAAK6a,iBAAiB,0BAI1BzyB,KAAKihB,YAGLjhB,KAAK0yB,8CA8BL1yB,KAAK0B,SAASuE,UAAY9C,EAAc,MAAO,CAC3CyB,MAAO5E,KAAKmK,OAAOY,OAAOiH,WAAWsP,MAEzCthB,KAAKmK,OAAOzI,SAASuE,UAAU3D,YAAYtC,KAAK0B,SAASuE,WAGzD8b,OAAOuQ,IAAIjhB,SAASshB,aAAa5Q,OAAOuQ,IAAIM,eAAeC,UAAUC,SAGrE/Q,OAAOuQ,IAAIjhB,SAAS0hB,UAAU/yB,KAAKmK,OAAOY,OAAOuW,IAAIxI,UAIrD9Y,KAAK0B,SAASswB,iBAAmB,IAAIjQ,OAAOuQ,IAAIU,mBAAmBhzB,KAAK0B,SAASuE,WAGjFjG,KAAKizB,kDAMI,IAAAva,EAAA1Y,KACDiG,EAAcjG,KAAKmK,OAAOzI,SAA1BuE,UAER,IAEIjG,KAAKkyB,OAAS,IAAInQ,OAAOuQ,IAAIY,UAAUlzB,KAAK0B,SAASswB,kBAGrDhyB,KAAKkyB,OAAO1yB,iBACRuiB,OAAOuQ,IAAIa,sBAAsBC,KAAKC,mBACtC,SAAAj1B,GAAA,OAASsa,EAAK4a,mBAAmBl1B,KACjC,GAEJ4B,KAAKkyB,OAAO1yB,iBAAiBuiB,OAAOuQ,IAAIiB,aAAaH,KAAKI,SAAU,SAAAthB,GAAA,OAASwG,EAAK+a,UAAUvhB,KAAQ,GAGpG,IAAM7D,EAAU,IAAI0T,OAAOuQ,IAAIoB,WAC/BrlB,EAAQslB,SAAW3zB,KAAK4zB,OAIxBvlB,EAAQwlB,kBAAoB5tB,EAAU6tB,YACtCzlB,EAAQ0lB,mBAAqB9tB,EAAU4V,aACvCxN,EAAQ2lB,qBAAuB/tB,EAAU6tB,YACzCzlB,EAAQ4lB,sBAAwBhuB,EAAU4V,aAG1CxN,EAAQ6lB,wBAAyB,EAGjC7lB,EAAQ8lB,oBAAoBn0B,KAAKmK,OAAOuL,OAExC1V,KAAKkyB,OAAOe,WAAW5kB,GACzB,MAAOpP,GACLe,KAAKyzB,UAAUx0B,4CAQM,IAAAia,EAAAlZ,KACzB,KADyBH,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,IAIrB,OAFAwxB,cAAcrxB,KAAKqyB,qBACnBryB,KAAK0B,SAASuE,UAAUf,gBAAgB,mBAU5ClF,KAAKqyB,eAAiBd,YANP,WACX,IAAMvhB,EAAOD,GAAWqH,KAAKpD,IAAIkF,EAAK+Y,QAAQmC,mBAAoB,IAC5D7gB,EAAW7G,EAAS,gBAAiBwM,EAAK/O,OAAOY,QAAjD,MAA8DiF,EACpEkJ,EAAKxX,SAASuE,UAAU/C,aAAa,kBAAmBqQ,IAGlB,gDAO3BnV,GAAO,IAAAkc,EAAAta,KAEhBqR,EAAW,IAAI0Q,OAAOuQ,IAAI+B,qBAGhChjB,EAASijB,6CAA8C,EACvDjjB,EAASkjB,kBAAmB,EAI5Bv0B,KAAKiyB,QAAU7zB,EAAMo2B,cAAcx0B,KAAKmK,OAAQkH,GAGhDrR,KAAKmyB,UAAYnyB,KAAKiyB,QAAQwC,eAGzBv3B,EAAGgC,MAAMc,KAAKmyB,YACfnyB,KAAKmyB,UAAU9xB,QAAQ,SAAAq0B,GACnB,GAAiB,IAAbA,IAAgC,IAAdA,GAAmBA,EAAWpa,EAAKnQ,OAAO2H,SAAU,CACtE,IAAM6iB,EAAcra,EAAKnQ,OAAOzI,SAAS8P,SAEzC,GAAItU,EAAGc,QAAQ22B,GAAc,CACzB,IAAMC,EAAgB,IAAMta,EAAKnQ,OAAO2H,SAAW4iB,EAC7Cp2B,EAAM6E,EAAc,OAAQ,CAC9ByB,MAAO0V,EAAKnQ,OAAOY,OAAOiH,WAAWiM,OAGzC3f,EAAIwI,MAAM+P,KAAU+d,EAAchpB,WAAlC,IACA+oB,EAAYryB,YAAYhE,OAWxC0B,KAAKiyB,QAAQvF,UAAU1sB,KAAKmK,OAAOwH,QAInC3R,KAAKiyB,QAAQzyB,iBAAiBuiB,OAAOuQ,IAAIiB,aAAaH,KAAKI,SAAU,SAAAthB,GAAA,OAASoI,EAAKmZ,UAAUvhB,KAG7F1V,OAAOS,KAAK8kB,OAAOuQ,IAAIuC,QAAQzB,MAAM/yB,QAAQ,SAAAC,GACzCga,EAAK2X,QAAQzyB,iBAAiBuiB,OAAOuQ,IAAIuC,QAAQzB,KAAK9yB,GAAO,SAAAlC,GAAA,OAASkc,EAAKwa,UAAU12B,OAIzF4B,KAAKuyB,QAAQ,4CASPn0B,GAAO,IAAAwc,EAAA5a,KACLiG,EAAcjG,KAAKmK,OAAOzI,SAA1BuE,UAIF8uB,EAAK32B,EAAM42B,QAGXxzB,EAAgB,SAAAlB,GAClB,IAAMlC,EAAAA,MAAckC,EAAKmE,QAAQ,KAAM,IAAI2H,cAC3ClL,EAAaR,KAAKka,EAAKzQ,OAAQyQ,EAAKzQ,OAAOf,MAAOhL,IAGtD,OAAQA,EAAMkC,MACV,KAAKyhB,OAAOuQ,IAAIuC,QAAQzB,KAAK6B,OAGzBj1B,KAAKuyB,QAAQ,UAGb/wB,EAAcpD,EAAMkC,MAGpBN,KAAKk1B,eAAc,GAEdH,EAAGI,aAEJJ,EAAGpe,MAAQ1Q,EAAU6tB,YACrBiB,EAAG5a,OAASlU,EAAU4V,cAK1B,MAEJ,KAAKkG,OAAOuQ,IAAIuC,QAAQzB,KAAKgC,kBAKzB5zB,EAAcpD,EAAMkC,MAyBpBN,KAAKq1B,UACL,MAEJ,KAAKtT,OAAOuQ,IAAIuC,QAAQzB,KAAKkC,wBAKzB9zB,EAAcpD,EAAMkC,MAEpBN,KAAKu1B,eAEL,MAEJ,KAAKxT,OAAOuQ,IAAIuC,QAAQzB,KAAKoC,yBAMzBh0B,EAAcpD,EAAMkC,MAEpBN,KAAKk1B,gBAELl1B,KAAKy1B,gBAEL,MAEJ,KAAK1T,OAAOuQ,IAAIuC,QAAQzB,KAAKsC,QAC7B,KAAK3T,OAAOuQ,IAAIuC,QAAQzB,KAAKuC,SAC7B,KAAK5T,OAAOuQ,IAAIuC,QAAQzB,KAAKwC,SAC7B,KAAK7T,OAAOuQ,IAAIuC,QAAQzB,KAAKyC,WAC7B,KAAK9T,OAAOuQ,IAAIuC,QAAQzB,KAAK0C,MACzBt0B,EAAcpD,EAAMkC,yCAYtBlC,GACN4B,KAAK+1B,SACL/1B,KAAKmK,OAAOc,MAAMkH,KAAK,YAAa/T,uCAQ5B,IAAAkd,EAAAtb,KACAiG,EAAcjG,KAAKmK,OAAOzI,SAA1BuE,UACJ+J,OAAAA,EAGJhQ,KAAKmK,OAAO1J,GAAG,QAAS,WACpB6a,EAAK4W,OAAO8D,oBAGhBh2B,KAAKmK,OAAO1J,GAAG,UAAW,WAEtB,OADAuP,EAAOsL,EAAKnR,OAAOG,cAIvBtK,KAAKmK,OAAO1J,GAAG,SAAU,WACrB,IAAMw1B,EAAa3a,EAAKnR,OAAOG,YAE3BpN,EAAGgC,MAAMoc,EAAK6W,YAIlB7W,EAAK6W,UAAU9xB,QAAQ,SAACq0B,EAAU3yB,GAC1BiO,EAAO0kB,GAAYA,EAAWuB,IAC9B3a,EAAK2W,QAAQiE,iBACb5a,EAAK6W,UAAUnJ,OAAOjnB,EAAO,QAOzCxD,OAAOiB,iBAAiB,SAAU,WAC1B8b,EAAK2W,SACL3W,EAAK2W,QAAQkE,OAAOlwB,EAAU6tB,YAAa7tB,EAAU4V,aAAckG,OAAOuQ,IAAI8D,SAASC,yCAQ5F,IAAAC,EAAAt2B,KACKiG,EAAcjG,KAAKmK,OAAOzI,SAA1BuE,UAEHjG,KAAK6mB,gBACN7mB,KAAKy1B,gBAITz1B,KAAK6mB,eACArX,KAAK,WAEF8mB,EAAK50B,SAASswB,iBAAiBuE,aAE/B,IACSD,EAAK1P,cAEN0P,EAAKrE,QAAQuE,KAAKvwB,EAAU6tB,YAAa7tB,EAAU4V,aAAckG,OAAOuQ,IAAI8D,SAASC,QAIrFC,EAAKrE,QAAQnS,SAGjBwW,EAAK1P,aAAc,EACrB,MAAO6P,GAGLH,EAAK7C,UAAUgD,MAGtB/mB,MAAM,sDAQX1P,KAAK0B,SAASuE,UAAUa,MAAM4vB,OAAS,GAGvC12B,KAAKuhB,SAAU,EAGXvhB,KAAKmK,OAAOG,YAActK,KAAKmK,OAAO2H,UACtC9R,KAAKmK,OAAOQ,8CAShB3K,KAAK0B,SAASuE,UAAUa,MAAM4vB,OAAS,EAGvC12B,KAAKuhB,SAAU,EAGfvhB,KAAKmK,OAAO6G,yCAWRhR,KAAK4mB,aACL5mB,KAAKy1B,gBAITz1B,KAAKuyB,QAAQ,SAGbvyB,KAAKq1B,4CAMC,IAAAsB,EAAA32B,KAENA,KAAK6mB,eACArX,KAAK,WAEEmnB,EAAK1E,SACL0E,EAAK1E,QAAQ2E,UAIjBD,EAAK9P,eAAiB,IAAI3Y,QAAQ,SAAAC,GAC9BwoB,EAAKl2B,GAAG,SAAU0N,GAClBwoB,EAAKxsB,OAAOc,MAAMC,IAAIyrB,EAAK1E,WAI/B0E,EAAK1D,eAERvjB,MAAM,8CAOPtR,GAAgB,IAAA,IAAAy4B,EAAA72B,KAAAc,EAAAjB,UAAA7C,OAAN+D,EAAMnE,MAAAkE,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,EAAA,GAAAnB,UAAAmB,GACpB,IAAM81B,EAAW92B,KAAKG,OAAO/B,GAEzBlB,EAAGU,MAAMk5B,IACTA,EAASz2B,QAAQ,SAAAmkB,GACTtnB,EAAGQ,SAAS8mB,IACZA,EAAQvjB,MAAM41B,EAAM91B,gCAYjC3C,EAAOuB,GAON,OANKzC,EAAGU,MAAMoC,KAAKG,OAAO/B,MACtB4B,KAAKG,OAAO/B,GAAS,IAGzB4B,KAAKG,OAAO/B,GAAOoC,KAAKb,GAEjBK,8CAWMgQ,EAAMnO,GAAM,IAAAk1B,EAAA/2B,KACzBA,KAAKmK,OAAOc,MAAMC,IAAlB,8BAAoDrJ,GAEpD7B,KAAKoyB,YAAcxW,WAAW,WAC1Bmb,EAAKhB,SACLgB,EAAKtE,iBAAiB,uBACvBziB,4CAOUnO,GACR3E,EAAGC,gBAAgB6C,KAAKoyB,eACzBpyB,KAAKmK,OAAOc,MAAMC,IAAlB,8BAAoDrJ,GAEpD4jB,aAAazlB,KAAKoyB,aAClBpyB,KAAKoyB,YAAc,sCA9hBvB,OACIpyB,KAAKmK,OAAOhB,SAAWnJ,KAAKmK,OAAOoS,SAAWvc,KAAKmK,OAAOY,OAAOuW,IAAIjU,UAAYnQ,EAAGgC,MAAMc,KAAKgiB,4CA2DnG,MAAUgV,8CAAQ7a,GAZH,CACX8a,eAAgB,2BAChBC,aAAc,2BACdC,OAAQ54B,OAAOmS,SAAS1R,SACxBo4B,GAAIC,KAAKC,MACTC,SAAU,IACVC,UAAW,IACXC,SAAUz3B,KAAKgiB,oBA1FrB+P,GCHAjoB,GAAS,CAEX4tB,eAFW,SAEIp3B,EAAMmC,GAAY,IAAA1C,EAAAC,KACzB9C,EAAGM,OAAOiF,GACVc,EAAcjD,EAAMN,KAAKoJ,MAAO,CAC5BsB,IAAKjI,IAEFvF,EAAGU,MAAM6E,IAChBA,EAAWpC,QAAQ,SAAAs3B,GACfp0B,EAAcjD,EAAMP,EAAKqJ,MAAOuuB,MAO5CC,OAhBW,SAgBJ17B,GAAO,IAAAma,EAAArW,KACLmL,EAAQjP,EAAO,mBAMpB0N,EAAMkB,eAAepK,KAAKV,MAG1BA,KAAK42B,QAAQl2B,KACTV,KACA,WAEIqW,EAAKhX,QAAQwL,QAAU,GAGvBrH,EAAc6S,EAAKjN,OACnBiN,EAAKjN,MAAQ,KAGTlM,EAAGc,QAAQqY,EAAK3U,SAASuE,YACzBoQ,EAAK3U,SAASuE,UAAUf,gBAAgB,SAV1C,IAcMsG,EAAkBtP,EAAlBsP,QAASlL,EAASpE,EAAToE,KAdfu3B,EAAA/0B,EAe4C0I,EAf5C,GAAA,GAAAssB,EAAAD,EAeOxvB,SAAAA,OAfPvI,IAAAg4B,EAekB7V,GAAUrY,MAf5BkuB,EAemCptB,EAfnCmtB,EAemCntB,IAC/BqtB,EAAuB,UAAb1vB,EAAuB/H,EAAO,MACxCmC,EAA0B,UAAb4F,EAAuB,GAAK,CAAEqC,IAAAA,GAEjDlO,OAAO8E,OAAO+U,EAAM,CAChBhO,SAAAA,EACA/H,KAAAA,EAEAlB,UAAW6I,EAAQG,MAAM9H,EAAM+H,EAAUgO,EAAKtL,OAAOzC,aAErDc,MAAOjG,EAAc40B,EAASt1B,KAIlC4T,EAAK3U,SAASuE,UAAU3D,YAAY+T,EAAKjN,OAGrClM,EAAGO,QAAQvB,EAAMqiB,YACjBlI,EAAKtL,OAAOwT,SAAWriB,EAAMqiB,UAI7BlI,EAAKlN,UACDkN,EAAKtL,OAAOitB,aACZ3hB,EAAKjN,MAAMlG,aAAa,cAAe,IAEvCmT,EAAKtL,OAAOwT,UACZlI,EAAKjN,MAAMlG,aAAa,WAAY,IAEnChG,EAAGgC,MAAMhD,EAAMklB,UAChB/K,EAAK+K,OAASllB,EAAMklB,QAEpB/K,EAAKtL,OAAOgU,KAAKjC,QACjBzG,EAAKjN,MAAMlG,aAAa,OAAQ,IAEhCmT,EAAKtL,OAAO2K,OACZW,EAAKjN,MAAMlG,aAAa,QAAS,IAEjCmT,EAAKtL,OAAOzC,aACZ+N,EAAKjN,MAAMlG,aAAa,cAAe,KAK/CuF,GAAGmc,aAAalkB,KAAK2V,GAGjBA,EAAKlN,SACLW,GAAO4tB,eAAeh3B,KAAK2V,EAAM,SAAU7K,GAI/C6K,EAAKtL,OAAO+B,MAAQ5Q,EAAM4Q,MAG1B1D,GAAMkT,MAAM5b,KAAK2V,GAGbA,EAAKlN,UAED,WAAYjN,GACZ4N,GAAO4tB,eAAeh3B,KAAK2V,EAAM,QAASna,EAAMyc,QAIpDtC,EAAKjN,MAAMwB,SAIXyL,EAAKlN,SAAYkN,EAAK6O,UAAY7O,EAAKjX,UAAUqJ,KAEjDA,GAAGoc,MAAMnkB,KAAK2V,GAIlBA,EAAK9E,WAAWtC,WAEpB,IAtGAjP,KAAKiL,MAAMkH,KAAK,2BCEtB8lB,GAAAA,WACF,SAAAA,EAAY1sB,EAAQlM,GAAS,IAAAU,EAAAC,KAkFzB,GAlFyBoN,EAAApN,KAAAi4B,GACzBj4B,KAAK0lB,OAAS,GAGd1lB,KAAK+kB,OAAQ,EACb/kB,KAAKyhB,SAAU,EACfzhB,KAAKk4B,QAAS,EAGdl4B,KAAKwJ,MAAQvB,EAAQuB,MAGrBxJ,KAAKoJ,MAAQmC,EAGTrO,EAAGM,OAAOwC,KAAKoJ,SACfpJ,KAAKoJ,MAAQ/F,SAASyC,iBAAiB9F,KAAKoJ,SAI3C7K,OAAO45B,QAAUn4B,KAAKoJ,iBAAiB+uB,QAAWj7B,EAAGa,SAASiC,KAAKoJ,QAAUlM,EAAGU,MAAMoC,KAAKoJ,UAE5FpJ,KAAKoJ,MAAQpJ,KAAKoJ,MAAM,IAI5BpJ,KAAK+K,OAASb,EACV,GACAoU,GACA2Z,EAAK3Z,SACLjf,GAAW,GACV,WACG,IACI,OAAOsO,KAAKC,MAAM7N,EAAKqJ,MAAMW,aAAa,qBAC5C,MAAO9K,GACL,MAAO,IAJd,IAULe,KAAK0B,SAAW,CACZuE,UAAW,KACX8K,QAAS,GACTa,QAAS,GACTJ,SAAU,GACVC,OAAQ,GACRJ,SAAU,CACN8B,KAAM,KACN0E,MAAO,GACPH,KAAM,IAEVpG,SAAU,MAIdtR,KAAKsR,SAAW,CACZwL,OAAQ,KACRvE,cAAe,EACf0E,KAAM,IAAInf,SAIdkC,KAAKuR,WAAa,CACduL,QAAQ,GAIZ9c,KAAKX,QAAU,CACX8Z,MAAO,GACPtO,QAAS,IAKb7K,KAAKiL,MAAQ,IAAImX,GAAQpiB,KAAK+K,OAAOE,OAGrCjL,KAAKiL,MAAMC,IAAI,SAAUlL,KAAK+K,QAC9B/K,KAAKiL,MAAMC,IAAI,UAAWjD,IAGtB/K,EAAGC,gBAAgB6C,KAAKoJ,QAAWlM,EAAGc,QAAQgC,KAAKoJ,OAMvD,GAAIpJ,KAAKoJ,MAAM7H,KACXvB,KAAKiL,MAAMkH,KAAK,6BAKpB,GAAKnS,KAAK+K,OAAOsC,QAOjB,GAAKpF,EAAQG,QAAQI,IAArB,CAMA,IAAMuR,EAAQ/Z,KAAKoJ,MAAMnH,WAAU,GACnC8X,EAAMwE,UAAW,EACjBve,KAAK0B,SAAS02B,SAAWre,EAIzB,IAAMzZ,EAAON,KAAKoJ,MAAM2uB,QAAQ3rB,cAG5B0U,EAAS,KACTjiB,EAAM,KAGV,OAAQyB,GACJ,IAAK,MAKD,GAHAwgB,EAAS9gB,KAAKoJ,MAAMjD,cAAc,UAG9BjJ,EAAGc,QAAQ8iB,IAaX,GAXAjiB,EAAMmd,GAAS8E,EAAO/W,aAAa,QACnC/J,KAAKqI,SbhJlB,SAA0BxJ,GAE7B,MAAI,wDAAwDwI,KAAKxI,GACtDojB,GAAUlB,QAIjB,wDAAwD1Z,KAAKxI,GACtDojB,GAAUrB,MAGd,KaqIyByX,CAAiBx5B,EAAI+M,YAGrC5L,KAAK0B,SAASuE,UAAYjG,KAAKoJ,MAC/BpJ,KAAKoJ,MAAQ0X,EAGb9gB,KAAK0B,SAASuE,UAAUzB,UAAY,GAGhC3F,EAAIy5B,OAAOt7B,OAAQ,CACnB,IAAMu7B,EAAS,CAAC,IAAK,QAEjBA,EAAOxyB,SAASlH,EAAI25B,aAAaj5B,IAAI,eACrCS,KAAK+K,OAAOwT,UAAW,GAEvBga,EAAOxyB,SAASlH,EAAI25B,aAAaj5B,IAAI,WACrCS,KAAK+K,OAAOgU,KAAKjC,QAAS,GAK1B9c,KAAKwc,WACLxc,KAAK+K,OAAOzC,YAAciwB,EAAOxyB,SAASlH,EAAI25B,aAAaj5B,IAAI,gBAC/DS,KAAK+K,OAAO2kB,GAAK7wB,EAAI25B,aAAaj5B,IAAI,OAEtCS,KAAK+K,OAAOzC,aAAc,QAKlCtI,KAAKqI,SAAWrI,KAAKoJ,MAAMW,aAAa/J,KAAK+K,OAAOtI,WAAWib,MAAMrV,UAGrErI,KAAKoJ,MAAMlE,gBAAgBlF,KAAK+K,OAAOtI,WAAWib,MAAMrV,UAI5D,GAAInL,EAAGgC,MAAMc,KAAKqI,YAAc7L,OAAOS,KAAKglB,IAAWlc,SAAS/F,KAAKqI,UAEjE,YADArI,KAAKiL,MAAMiH,MAAM,kCAKrBlS,KAAKM,KAAO4hB,GAAM/Z,MAElB,MAEJ,IAAK,QACL,IAAK,QACDnI,KAAKM,KAAOA,EACZN,KAAKqI,SAAW4Z,GAAUrY,MAGtB5J,KAAKoJ,MAAMnE,aAAa,iBACxBjF,KAAK+K,OAAOitB,aAAc,GAE1Bh4B,KAAKoJ,MAAMnE,aAAa,cACxBjF,KAAK+K,OAAOwT,UAAW,GAEvBve,KAAKoJ,MAAMnE,aAAa,iBACxBjF,KAAK+K,OAAOzC,aAAc,GAE1BtI,KAAKoJ,MAAMnE,aAAa,WACxBjF,KAAK+K,OAAO2K,OAAQ,GAEpB1V,KAAKoJ,MAAMnE,aAAa,UACxBjF,KAAK+K,OAAOgU,KAAKjC,QAAS,GAG9B,MAEJ,QAEI,YADA9c,KAAKiL,MAAMiH,MAAM,kCAKzBlS,KAAKZ,UAAY6I,EAAQG,MAAMpI,KAAKM,KAAMN,KAAKqI,SAAUrI,KAAK+K,OAAOzC,aAGhEtI,KAAKZ,UAAUoJ,KAKpBxI,KAAKO,eAAiB,GAGtBP,KAAKihB,UAAY,IAAI0E,GAAU3lB,MAG/BA,KAAKsN,QAAU,IAAIH,EAAQnN,MAG3BA,KAAKoJ,MAAM7H,KAAOvB,KAGb9C,EAAGc,QAAQgC,KAAK0B,SAASuE,aAC1BjG,KAAK0B,SAASuE,UAAY9C,EAAc,OACxC1B,EAAKzB,KAAKoJ,MAAOpJ,KAAK0B,SAASuE,YAInCwC,GAAGmc,aAAalkB,KAAKV,MAGrBoJ,GAAMkT,MAAM5b,KAAKV,MAGbA,KAAK+K,OAAOE,OACZxK,EAAGC,KAAKV,KAAMA,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAO5K,OAAO6S,KAAK,KAAM,SAAA5U,GACjE2B,EAAKkL,MAAMC,IAAX,UAAyB9M,EAAMkC,SAMnCN,KAAKmJ,SAAYnJ,KAAKklB,UAAYllB,KAAKZ,UAAUqJ,KACjDA,GAAGoc,MAAMnkB,KAAKV,MAIlBA,KAAKihB,UAAUhb,YAGfjG,KAAKihB,UAAU/B,SAGflf,KAAKuR,WAAa,IAAI6R,GAAWpjB,MAGjCA,KAAKshB,IAAM,IAAIyQ,GAAI/xB,MAGfA,KAAK+K,OAAOwT,UACZve,KAAK2K,QAtDL3K,KAAKiL,MAAMiH,MAAM,iCA7GjBlS,KAAKiL,MAAMiH,MAAM,iCAPjBlS,KAAKiL,MAAMiH,MAAM,yCAZjBlS,KAAKiL,MAAMiH,MAAM,qFA6NrB,OAAKhV,EAAGQ,SAASsC,KAAKoJ,MAAMuB,MAKrB3K,KAAKoJ,MAAMuB,OAJP,qCAWN3K,KAAKuhB,SAAYrkB,EAAGQ,SAASsC,KAAKoJ,MAAM4H,QAI7ChR,KAAKoJ,MAAM4H,2CAmCJ9U,IAEQgB,EAAGO,QAAQvB,GAASA,GAAS8D,KAAKuhB,SAG7CvhB,KAAK2K,OAEL3K,KAAKgR,uCAQLhR,KAAKmJ,SACLnJ,KAAKgR,QACLhR,KAAKiR,WACE/T,EAAGQ,SAASsC,KAAKoJ,MAAMojB,OAC9BxsB,KAAKoJ,MAAMojB,yCAQfxsB,KAAKsK,YAAc,iCAOhBsC,GACH5M,KAAKsK,YAActK,KAAKsK,aAAepN,EAAGG,OAAOuP,GAAYA,EAAW5M,KAAK+K,OAAO6B,0CAOhFA,GACJ5M,KAAKsK,YAActK,KAAKsK,aAAepN,EAAGG,OAAOuP,GAAYA,EAAW5M,KAAK+K,OAAO6B,iDAgIzEqH,GACX,IAAMtC,EAAS3R,KAAKoJ,MAAMsM,MAAQ,EAAI1V,KAAK2R,OAC3C3R,KAAK2R,OAASA,GAAUzU,EAAGG,OAAO4W,GAAQA,EAAO,0CAOtCA,GACXjU,KAAKsmB,gBAAgBrS,0CAwQV/X,GACXoV,GAAS1R,OAAOc,KAAKV,KAAM9D,GAAO,qCA2E9B+L,EAAQY,SACR7I,KAAKoJ,MAAMqvB,wEAQJ74B,GAEX,GAAII,KAAKZ,UAAUqJ,KAAOzI,KAAK8mB,QAAS,CAEpC,IAAM4R,EAAWlzB,EAASxF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAW4M,cAGpExZ,OAA0B,IAAXxF,OAAyBE,GAAaF,EAGrD+4B,EAASxzB,EAAYnF,KAAK0B,SAASuE,UAAWjG,KAAK+K,OAAOiH,WAAW4M,aAAcxZ,GAOzF,GAJIuzB,GAAU34B,KAAK+K,OAAOuF,SAASvK,SAAS,cAAgB7I,EAAGgC,MAAMc,KAAK+K,OAAOsG,WAC7Ef,GAASkJ,WAAW9Y,KAAKV,MAAM,GAG/B24B,IAAWD,EAAU,CACrB,IAAME,EAAYD,EAAS,iBAAmB,gBAC9Cz3B,EAAaR,KAAKV,KAAMA,KAAKoJ,MAAOwvB,GAExC,OAAQD,EAEZ,OAAO,6BAQRv6B,EAAOuB,GACNc,EAAGC,KAAKV,KAAMA,KAAK0B,SAASuE,UAAW7H,EAAOuB,gCAQ7CvB,EAAOuB,GACRiB,EAAKF,KAAKV,KAAMA,KAAK0B,SAASuE,UAAW7H,EAAOuB,+BAQhDvB,EAAOuB,GACPgB,EAAIX,KAAK0B,SAASuE,UAAW7H,EAAOuB,mCAUhCA,GAAwB,IAAA0W,EAAArW,KAAd64B,EAAch5B,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAC5B,GAAKG,KAAK+kB,MAAV,CAIA,IAAM6C,EAAO,WAETvkB,SAASkD,KAAKO,MAAMqc,SAAW,GAG/B9M,EAAKqH,MAAQ,KAGTmb,GACIr8B,OAAOS,KAAKoZ,EAAK3U,UAAU1E,SAE3BwG,EAAc6S,EAAK3U,SAASqP,QAAQpG,MACpCnH,EAAc6S,EAAK3U,SAAS4P,UAC5B9N,EAAc6S,EAAK3U,SAAS4O,UAC5B9M,EAAc6S,EAAK3U,SAASC,SAG5B0U,EAAK3U,SAASqP,QAAQpG,KAAO,KAC7B0L,EAAK3U,SAAS4P,SAAW,KACzB+E,EAAK3U,SAAS4O,SAAW,KACzB+F,EAAK3U,SAASC,QAAU,MAIxBzE,EAAGQ,SAASiC,IACZA,M/B14Bb,WACCK,MAAQA,KAAKO,iBACbP,KAAKO,eAAeF,QAAQ,SAAA4M,GAAQ,IACxBjP,EAAqCiP,EAArCjP,QAASsC,EAA4B2M,EAA5B3M,KAAMX,EAAsBsN,EAAtBtN,SAAUN,EAAY4N,EAAZ5N,QACjCrB,EAAQyB,oBAAoBa,EAAMX,EAAUN,KAGhDW,KAAKO,eAAiB,K+Bu4BEG,KAAK2V,GAGrBxS,EAAewS,EAAK3U,SAAS02B,SAAU/hB,EAAK3U,SAASuE,WAGrD/E,EAAaR,KAAK2V,EAAMA,EAAK3U,SAAS02B,SAAU,aAAa,GAGzDl7B,EAAGQ,SAASiC,IACZA,EAASe,KAAK2V,EAAK3U,SAAS02B,UAIhC/hB,EAAK0O,OAAQ,EAGbnJ,WAAW,WACPvF,EAAK3U,SAAW,KAChB2U,EAAKjN,MAAQ,MACd,OAKXpJ,KAAKwsB,OAGDxsB,KAAKmJ,SAELsc,aAAazlB,KAAK0lB,OAAOjE,SAGzBhZ,GAAG2J,qBAAqB1R,KAAKV,MAAM,GAGnC4nB,KACO5nB,KAAKwc,WAEZ6U,cAAcrxB,KAAK0lB,OAAO4L,WAC1BD,cAAcrxB,KAAK0lB,OAAOnE,SAGP,OAAfvhB,KAAK0d,OAAkBxgB,EAAGQ,SAASsC,KAAK0d,MAAMkZ,UAC9C52B,KAAK0d,MAAMkZ,UAIfhP,KACO5nB,KAAKoZ,UAGO,OAAfpZ,KAAK0d,OACL1d,KAAK0d,MAAMob,SAAStpB,KAAKoY,GAI7BhM,WAAWgM,EAAM,wCAQhBtnB,GACL,OAAO2H,EAAQc,KAAKrI,KAAKV,KAAMM,mCAhwB/B,OAAOjE,QAAQ2D,KAAKqI,WAAa4Z,GAAUrY,uCAI3C,OAAOvN,QAAQ2D,KAAKwc,WAAaxc,KAAKoZ,2CAItC,OAAO/c,QAAQ2D,KAAKqI,WAAa4Z,GAAUlB,yCAI3C,OAAO1kB,QAAQ2D,KAAKqI,WAAa4Z,GAAUrB,uCAI3C,OAAOvkB,QAAQ2D,KAAKM,OAAS4hB,GAAM/Z,uCAInC,OAAO9L,QAAQ2D,KAAKM,OAAS4hB,GAAMha,uCA8BnC,OAAO7L,QAAQ2D,KAAK+kB,QAAU/kB,KAAKuK,SAAWvK,KAAK+mB,sCAOnD,OAAO1qB,QAAQ2D,KAAKoJ,MAAMmB,wCAO1B,OAAOlO,QAAQ2D,KAAKuK,QAA+B,IAArBvK,KAAKsK,2CAOnC,OAAOjO,QAAQ2D,KAAKoJ,MAAM2d,yCAyDd7qB,GAEZ,GAAK8D,KAAK8R,SAAV,CAKA,IAAMinB,EAAe77B,EAAGG,OAAOnB,IAAUA,EAAQ,EAGjD8D,KAAKoJ,MAAMkB,YAAcyuB,EAAe3hB,KAAKrD,IAAI7X,EAAO8D,KAAK8R,UAAY,EAGzE9R,KAAKiL,MAAMC,IAAX,cAA6BlL,KAAKsK,YAAlC,6BAOA,OAAOhN,OAAO0C,KAAKoJ,MAAMkB,8CAMd,IACH2L,EAAajW,KAAKoJ,MAAlB6M,SAGR,OAAI/Y,EAAGG,OAAO4Y,GACHA,EAMPA,GAAYA,EAASjZ,QAAUgD,KAAK8R,SAAW,EACxCmE,EAAS8J,IAAI,GAAK/f,KAAK8R,SAG3B,kCAOP,OAAOzV,QAAQ2D,KAAKoJ,MAAM8N,0CAQ1B,IAAM8hB,EAAeliB,WAAW9W,KAAK+K,OAAO+G,UAGtCmnB,GAAgBj5B,KAAKoJ,OAAS,IAAI0I,SAClCA,EAAY5U,EAAGG,OAAO47B,IAAiBA,IAAiBC,EAAAA,EAAeD,EAAJ,EAGzE,OAAOD,GAAgBlnB,+BAOhBjP,GACP,IAAI8O,EAAS9O,EAIT3F,EAAGM,OAAOmU,KACVA,EAASrU,OAAOqU,IAIfzU,EAAGG,OAAOsU,KACXA,EAAS3R,KAAKsN,QAAQ/N,IAAI,WAIzBrC,EAAGG,OAAOsU,KACRA,EAAW3R,KAAK+K,OAAhB4G,QAIHA,EAlBQ,IAmBRA,EAnBQ,GAsBRA,EArBQ,IAsBRA,EAtBQ,GA0BZ3R,KAAK+K,OAAO4G,OAASA,EAGrB3R,KAAKoJ,MAAMuI,OAASA,GAGfzU,EAAGgC,MAAM2D,IAAU7C,KAAK0V,OAAS/D,EAAS,IAC3C3R,KAAK0V,OAAQ,mBAQjB,OAAOpY,OAAO0C,KAAKoJ,MAAMuI,oCAwBnBP,GACN,IAAIxR,EAASwR,EAGRlU,EAAGO,QAAQmC,KACZA,EAASI,KAAKsN,QAAQ/N,IAAI,UAIzBrC,EAAGO,QAAQmC,KACZA,EAASI,KAAK+K,OAAO2K,OAIzB1V,KAAK+K,OAAO2K,MAAQ9V,EAGpBI,KAAKoJ,MAAMsM,MAAQ9V,kBAOnB,OAAOvD,QAAQ2D,KAAKoJ,MAAMsM,wCAQ1B,OAAK1V,KAAKmJ,YAINnJ,KAAK8mB,UAMLzqB,QAAQ2D,KAAKoJ,MAAM+vB,cACnB98B,QAAQ2D,KAAKoJ,MAAMgwB,8BACnB/8B,QAAQ2D,KAAKoJ,MAAMiwB,aAAer5B,KAAKoJ,MAAMiwB,YAAYr8B,sCAQvDd,GACN,IAAIid,EAAQ,KAERjc,EAAGG,OAAOnB,KACVid,EAAQjd,GAGPgB,EAAGG,OAAO8b,KACXA,EAAQnZ,KAAKsN,QAAQ/N,IAAI,UAGxBrC,EAAGG,OAAO8b,KACXA,EAAQnZ,KAAK+K,OAAOoO,MAAM6F,UAI1B7F,EAAQ,KACRA,EAAQ,IAERA,EAAQ,IACRA,EAAQ,GAGPnZ,KAAK+K,OAAOoO,MAAM9Z,QAAQ0G,SAASoT,IAMxCnZ,KAAK+K,OAAOoO,MAAM6F,SAAW7F,EAG7BnZ,KAAKoJ,MAAMwnB,aAAezX,GARtBnZ,KAAKiL,MAAMkH,KAAX,sBAAsCgH,EAAtC,qBAeJ,OAAO7b,OAAO0C,KAAKoJ,MAAMwnB,4CAQjB10B,GACR,IAAM6O,EAAS/K,KAAK+K,OAAOF,QACrBxL,EAAUW,KAAKX,QAAQwL,QAE7B,GAAKxL,EAAQrC,OAAb,CAIA,IAAI6N,EAAU,EACT3N,EAAGgC,MAAMhD,IAAUoB,OAAOpB,GAC3B8D,KAAKsN,QAAQ/N,IAAI,WACjBwL,EAAOiU,SACPjU,EAAOyN,SACT3R,KAAK3J,EAAGG,QAEV,IAAKgC,EAAQ0G,SAAS8E,GAAU,CAC5B,IAAMhI,EtBpqBX,SAAiBjF,EAAOiF,GAC3B,OAAK3F,EAAGU,MAAMA,IAAWA,EAAMZ,OAIxBY,EAAMyN,OAAO,SAACiuB,EAAMC,GAAP,OAAiBniB,KAAKkR,IAAIiR,EAAO12B,GAASuU,KAAKkR,IAAIgR,EAAOz2B,GAAS02B,EAAOD,IAHnF,KsBkqBWE,CAAQn6B,EAASwL,GAC/B7K,KAAKiL,MAAMkH,KAAX,+BAA+CtH,EAA/C,WAAiEhI,EAAjE,YACAgI,EAAUhI,EAId3B,EAAaR,KAAKV,KAAMA,KAAKoJ,MAAO,oBAAoB,EAAO,CAAEyB,QAAAA,IAGjEE,EAAOiU,SAAWnU,EAGlB7K,KAAKoJ,MAAMyB,QAAUA,mBAOrB,OAAO7K,KAAKoJ,MAAMyB,mCAQb3O,GACL,IAAM0D,EAAS1C,EAAGO,QAAQvB,GAASA,EAAQ8D,KAAK+K,OAAOgU,KAAKjC,OAC5D9c,KAAK+K,OAAOgU,KAAKjC,OAASld,EAC1BI,KAAKoJ,MAAM2V,KAAOnf,kBAkDlB,OAAOvD,QAAQ2D,KAAKoJ,MAAM2V,mCAOnB7iB,GACP4N,GAAO8tB,OAAOl3B,KAAKV,KAAM9D,mBAOzB,OAAO8D,KAAKoJ,MAAM0jB,wCAOX5wB,GACF8D,KAAKuc,QAKV9T,GAAGwc,UAAUvkB,KAAKV,KAAM9D,GAAO,GAAOwT,MAAM,cAJxC1P,KAAKiL,MAAMkH,KAAK,oDAWpB,OAAKnS,KAAKuc,QAIHvc,KAAKoJ,MAAMW,aAAa,UAHpB,oCAUF7N,GACT,IAAM0D,EAAS1C,EAAGO,QAAQvB,GAASA,EAAQ8D,KAAK+K,OAAOwT,SACvDve,KAAK+K,OAAOwT,SAAW3e,kBAOvB,OAAOvD,QAAQ2D,KAAK+K,OAAOwT,6CAedriB,GACboV,GAASlH,IAAI1J,KAAKV,KAAM9D,GAAO,mBAMhB,IAAA8gB,EACmBhd,KAAKsR,SAA/BuH,EADOmE,EACPnE,QAASN,EADFyE,EACEzE,aACjB,OAAOM,EAAUN,GAAgB,iCAQxBrc,GACToV,GAASgM,YAAY5c,KAAKV,KAAM9D,GAAO,mBAOvC,OAAQoV,GAAS0M,gBAAgBtd,KAAKV,OAAS,IAAI8Y,mCAQ/C5c,GACJ,IAAMu9B,EACG,qBADHA,EAEM,SAIZ,GAAKxxB,EAAQU,IAAb,CAKA,IAAM/I,EAAS1C,EAAGO,QAAQvB,GAASA,EAAQ8D,KAAK2I,MAAQ8wB,EAGxDz5B,KAAKoJ,MAAMR,0BAA0BhJ,EAAS65B,EAAaA,oBAO3D,OAAKxxB,EAAQU,IAIN3I,KAAKoJ,MAAMswB,uBAHP,yCA8LEp5B,EAAM+H,EAAUsxB,GAC7B,OAAO1xB,EAAQG,MAAM9H,EAAM+H,EAAUsxB,sCAQvB96B,EAAKgG,GACnB,OAAOgK,GAAWhQ,EAAKgG,iCAQdP,GAAwB,IAAdjF,EAAcQ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACzB+B,EAAU,KAUd,OARI1E,EAAGM,OAAO8G,GACV1C,EAAUhF,MAAMiF,KAAKwB,SAASyC,iBAAiBxB,IACxCpH,EAAGa,SAASuG,GACnB1C,EAAUhF,MAAMiF,KAAKyC,GACdpH,EAAGU,MAAM0G,KAChB1C,EAAU0C,EAAS3B,OAAOzF,EAAGc,UAG7Bd,EAAGgC,MAAM0C,GACF,KAGJA,EAAQqI,IAAI,SAAA2vB,GAAA,OAAK,IAAI3B,EAAK2B,EAAGv6B,WAhkCtC44B,UAokCNA,GAAK3Z,UzB9lCqBlhB,GyB8lCAkhB,GzB7lCf3Q,KAAKC,MAAMD,KAAKG,UAAU1Q","file":"plyr.min.js","sourcesContent":["// ==========================================================================\r\n// Type checking utils\r\n// ==========================================================================\r\n\r\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\r\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\r\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\r\nconst isObject = input => getConstructor(input) === Object;\r\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\r\nconst isString = input => getConstructor(input) === String;\r\nconst isBoolean = input => getConstructor(input) === Boolean;\r\nconst isFunction = input => getConstructor(input) === Function;\r\nconst isArray = input => Array.isArray(input);\r\nconst isWeakMap = input => instanceOf(input, WeakMap);\r\nconst isNodeList = input => instanceOf(input, NodeList);\r\nconst isElement = input => instanceOf(input, Element);\r\nconst isTextNode = input => getConstructor(input) === Text;\r\nconst isEvent = input => instanceOf(input, Event);\r\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\r\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\r\n\r\nconst isEmpty = input =>\r\n    isNullOrUndefined(input) ||\r\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\r\n    (isObject(input) && !Object.keys(input).length);\r\n\r\nconst isUrl = input => {\r\n    // Accept a URL object\r\n    if (instanceOf(input, window.URL)) {\r\n        return true;\r\n    }\r\n\r\n    // Add the protocol if required\r\n    let string = input;\r\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\r\n        string = `http://${input}`;\r\n    }\r\n\r\n    try {\r\n        return !isEmpty(new URL(string).hostname);\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default {\r\n    nullOrUndefined: isNullOrUndefined,\r\n    object: isObject,\r\n    number: isNumber,\r\n    string: isString,\r\n    boolean: isBoolean,\r\n    function: isFunction,\r\n    array: isArray,\r\n    weakMap: isWeakMap,\r\n    nodeList: isNodeList,\r\n    element: isElement,\r\n    textNode: isTextNode,\r\n    event: isEvent,\r\n    cue: isCue,\r\n    track: isTrack,\r\n    url: isUrl,\r\n    empty: isEmpty,\r\n};\r\n","// ==========================================================================\r\n// Event utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n// Check for passive event listener support\r\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n// https://www.youtube.com/watch?v=NPM6172J22g\r\nconst supportsPassiveListeners = (() => {\r\n    // Test via a getter in the options object to see if the passive property is accessed\r\n    let supported = false;\r\n    try {\r\n        const options = Object.defineProperty({}, 'passive', {\r\n            get() {\r\n                supported = true;\r\n                return null;\r\n            },\r\n        });\r\n        window.addEventListener('test', null, options);\r\n        window.removeEventListener('test', null, options);\r\n    } catch (e) {\r\n        // Do nothing\r\n    }\r\n\r\n    return supported;\r\n})();\r\n\r\n// Toggle event listener\r\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\r\n    // Bail if no element, event, or callback\r\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\r\n        return;\r\n    }\r\n\r\n    // Allow multiple events\r\n    const events = event.split(' ');\r\n\r\n    // Build options\r\n    // Default to just the capture boolean for browsers with no passive listener support\r\n    let options = capture;\r\n\r\n    // If passive events listeners are supported\r\n    if (supportsPassiveListeners) {\r\n        options = {\r\n            // Whether the listener can be passive (i.e. default never prevented)\r\n            passive,\r\n            // Whether the listener is a capturing listener or not\r\n            capture,\r\n        };\r\n    }\r\n\r\n    // If a single node is passed, bind the event listener\r\n    events.forEach(type => {\r\n        if (this && this.eventListeners && toggle) {\r\n            // Cache event listener\r\n            this.eventListeners.push({ element, type, callback, options });\r\n        }\r\n\r\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\r\n    });\r\n}\r\n\r\n// Bind event handler\r\nexport function on(element, events = '', callback, passive = true, capture = false) {\r\n    toggleListener.call(this, element, events, callback, true, passive, capture);\r\n}\r\n\r\n// Unbind event handler\r\nexport function off(element, events = '', callback, passive = true, capture = false) {\r\n    toggleListener.call(this, element, events, callback, false, passive, capture);\r\n}\r\n\r\n// Bind once-only event handler\r\nexport function once(element, events = '', callback, passive = true, capture = false) {\r\n    function onceCallback(...args) {\r\n        off(element, events, onceCallback, passive, capture);\r\n        callback.apply(this, args);\r\n    }\r\n\r\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\r\n}\r\n\r\n// Trigger event\r\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\r\n    // Bail if no element\r\n    if (!is.element(element) || is.empty(type)) {\r\n        return;\r\n    }\r\n\r\n    // Create and dispatch the event\r\n    const event = new CustomEvent(type, {\r\n        bubbles,\r\n        detail: Object.assign({}, detail, {\r\n            plyr: this,\r\n        }),\r\n    });\r\n\r\n    // Dispatch the event\r\n    element.dispatchEvent(event);\r\n}\r\n\r\n// Unbind all cached event listeners\r\nexport function unbindListeners() {\r\n    if (this && this.eventListeners) {\r\n        this.eventListeners.forEach(item => {\r\n            const { element, type, callback, options } = item;\r\n            element.removeEventListener(type, callback, options);\r\n        });\r\n\r\n        this.eventListeners = [];\r\n    }\r\n}\r\n\r\n// Run method when / if player is ready\r\nexport function ready() {\r\n    return new Promise(\r\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\r\n    ).then(() => {});\r\n}\r\n","// ==========================================================================\r\n// Element utils\r\n// ==========================================================================\r\n\r\nimport { toggleListener } from './events';\r\nimport is from './is';\r\n\r\n// Wrap an element\r\nexport function wrap(elements, wrapper) {\r\n    // Convert `elements` to an array, if necessary.\r\n    const targets = elements.length ? elements : [elements];\r\n\r\n    // Loops backwards to prevent having to clone the wrapper on the\r\n    // first element (see `child` below).\r\n    Array.from(targets)\r\n        .reverse()\r\n        .forEach((element, index) => {\r\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\r\n\r\n            // Cache the current parent and sibling.\r\n            const parent = element.parentNode;\r\n            const sibling = element.nextSibling;\r\n\r\n            // Wrap the element (is automatically removed from its current\r\n            // parent).\r\n            child.appendChild(element);\r\n\r\n            // If the element had a sibling, insert the wrapper before\r\n            // the sibling to maintain the HTML structure; otherwise, just\r\n            // append it to the parent.\r\n            if (sibling) {\r\n                parent.insertBefore(child, sibling);\r\n            } else {\r\n                parent.appendChild(child);\r\n            }\r\n        });\r\n}\r\n\r\n// Set attributes\r\nexport function setAttributes(element, attributes) {\r\n    if (!is.element(element) || is.empty(attributes)) {\r\n        return;\r\n    }\r\n\r\n    // Assume null and undefined attributes should be left out,\r\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\r\n    Object.entries(attributes)\r\n        .filter(([, value]) => !is.nullOrUndefined(value))\r\n        .forEach(([key, value]) => element.setAttribute(key, value));\r\n}\r\n\r\n// Create a DocumentFragment\r\nexport function createElement(type, attributes, text) {\r\n    // Create a new <element>\r\n    const element = document.createElement(type);\r\n\r\n    // Set all passed attributes\r\n    if (is.object(attributes)) {\r\n        setAttributes(element, attributes);\r\n    }\r\n\r\n    // Add text node\r\n    if (is.string(text)) {\r\n        element.innerText = text;\r\n    }\r\n\r\n    // Return built element\r\n    return element;\r\n}\r\n\r\n// Inaert an element after another\r\nexport function insertAfter(element, target) {\r\n    target.parentNode.insertBefore(element, target.nextSibling);\r\n}\r\n\r\n// Insert a DocumentFragment\r\nexport function insertElement(type, parent, attributes, text) {\r\n    // Inject the new <element>\r\n    parent.appendChild(createElement(type, attributes, text));\r\n}\r\n\r\n// Remove element(s)\r\nexport function removeElement(element) {\r\n    if (is.nodeList(element) || is.array(element)) {\r\n        Array.from(element).forEach(removeElement);\r\n        return;\r\n    }\r\n\r\n    if (!is.element(element) || !is.element(element.parentNode)) {\r\n        return;\r\n    }\r\n\r\n    element.parentNode.removeChild(element);\r\n}\r\n\r\n// Remove all child elements\r\nexport function emptyElement(element) {\r\n    let { length } = element.childNodes;\r\n\r\n    while (length > 0) {\r\n        element.removeChild(element.lastChild);\r\n        length -= 1;\r\n    }\r\n}\r\n\r\n// Replace element\r\nexport function replaceElement(newChild, oldChild) {\r\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\r\n        return null;\r\n    }\r\n\r\n    oldChild.parentNode.replaceChild(newChild, oldChild);\r\n\r\n    return newChild;\r\n}\r\n\r\n// Get an attribute object from a string selector\r\nexport function getAttributesFromSelector(sel, existingAttributes) {\r\n    // For example:\r\n    // '.test' to { class: 'test' }\r\n    // '#test' to { id: 'test' }\r\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\r\n\r\n    if (!is.string(sel) || is.empty(sel)) {\r\n        return {};\r\n    }\r\n\r\n    const attributes = {};\r\n    const existing = existingAttributes;\r\n\r\n    sel.split(',').forEach(s => {\r\n        // Remove whitespace\r\n        const selector = s.trim();\r\n        const className = selector.replace('.', '');\r\n        const stripped = selector.replace(/[[\\]]/g, '');\r\n\r\n        // Get the parts and value\r\n        const parts = stripped.split('=');\r\n        const key = parts[0];\r\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\r\n\r\n        // Get the first character\r\n        const start = selector.charAt(0);\r\n\r\n        switch (start) {\r\n            case '.':\r\n                // Add to existing classname\r\n                if (is.object(existing) && is.string(existing.class)) {\r\n                    existing.class += ` ${className}`;\r\n                }\r\n\r\n                attributes.class = className;\r\n                break;\r\n\r\n            case '#':\r\n                // ID selector\r\n                attributes.id = selector.replace('#', '');\r\n                break;\r\n\r\n            case '[':\r\n                // Attribute selector\r\n                attributes[key] = value;\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n\r\n    return attributes;\r\n}\r\n\r\n// Toggle hidden\r\nexport function toggleHidden(element, hidden) {\r\n    if (!is.element(element)) {\r\n        return;\r\n    }\r\n\r\n    let hide = hidden;\r\n\r\n    if (!is.boolean(hide)) {\r\n        hide = !element.hasAttribute('hidden');\r\n    }\r\n\r\n    if (hide) {\r\n        element.setAttribute('hidden', '');\r\n    } else {\r\n        element.removeAttribute('hidden');\r\n    }\r\n}\r\n\r\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\r\nexport function toggleClass(element, className, force) {\r\n    if (is.element(element)) {\r\n        let method = 'toggle';\r\n        if (typeof force !== 'undefined') {\r\n            method = force ? 'add' : 'remove';\r\n        }\r\n\r\n        element.classList[method](className);\r\n        return element.classList.contains(className);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n// Has class name\r\nexport function hasClass(element, className) {\r\n    return is.element(element) && element.classList.contains(className);\r\n}\r\n\r\n// Element matches selector\r\nexport function matches(element, selector) {\r\n    const prototype = { Element };\r\n\r\n    function match() {\r\n        return Array.from(document.querySelectorAll(selector)).includes(this);\r\n    }\r\n\r\n    const matches =\r\n        prototype.matches ||\r\n        prototype.webkitMatchesSelector ||\r\n        prototype.mozMatchesSelector ||\r\n        prototype.msMatchesSelector ||\r\n        match;\r\n\r\n    return matches.call(element, selector);\r\n}\r\n\r\n// Find all elements\r\nexport function getElements(selector) {\r\n    return this.elements.container.querySelectorAll(selector);\r\n}\r\n\r\n// Find a single element\r\nexport function getElement(selector) {\r\n    return this.elements.container.querySelector(selector);\r\n}\r\n\r\n// Get the focused element\r\nexport function getFocusElement() {\r\n    let focused = document.activeElement;\r\n\r\n    if (!focused || focused === document.body) {\r\n        focused = null;\r\n    } else {\r\n        focused = document.querySelector(':focus');\r\n    }\r\n\r\n    return focused;\r\n}\r\n\r\n// Trap focus inside container\r\nexport function trapFocus(element = null, toggle = false) {\r\n    if (!is.element(element)) {\r\n        return;\r\n    }\r\n\r\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\r\n    const first = focusable[0];\r\n    const last = focusable[focusable.length - 1];\r\n\r\n    const trap = event => {\r\n        // Bail if not tab key or not fullscreen\r\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\r\n            return;\r\n        }\r\n\r\n        // Get the current focused element\r\n        const focused = getFocusElement();\r\n\r\n        if (focused === last && !event.shiftKey) {\r\n            // Move focus to first element that can be tabbed if Shift isn't used\r\n            first.focus();\r\n            event.preventDefault();\r\n        } else if (focused === first && event.shiftKey) {\r\n            // Move focus to last element that can be tabbed if Shift is used\r\n            last.focus();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\r\n}\r\n","// ==========================================================================\r\n// Animation utils\r\n// ==========================================================================\r\n\r\nimport { toggleHidden } from './elements';\r\nimport is from './is';\r\n\r\nexport const transitionEndEvent = (() => {\r\n    const element = document.createElement('span');\r\n\r\n    const events = {\r\n        WebkitTransition: 'webkitTransitionEnd',\r\n        MozTransition: 'transitionend',\r\n        OTransition: 'oTransitionEnd otransitionend',\r\n        transition: 'transitionend',\r\n    };\r\n\r\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\r\n\r\n    return is.string(type) ? events[type] : false;\r\n})();\r\n\r\n// Force repaint of element\r\nexport function repaint(element) {\r\n    setTimeout(() => {\r\n        toggleHidden(element, true);\r\n        element.offsetHeight; // eslint-disable-line\r\n        toggleHidden(element, false);\r\n    }, 0);\r\n}\r\n","// ==========================================================================\r\n// Browser sniffing\r\n// Unfortunately, due to mixed support, UA sniffing is required\r\n// ==========================================================================\r\n\r\nconst browser = {\r\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\r\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\r\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\r\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\r\n};\r\n\r\nexport default browser;\r\n","// ==========================================================================\r\n// Plyr support checks\r\n// ==========================================================================\r\n\r\nimport { transitionEndEvent } from './utils/animation';\r\nimport browser from './utils/browser';\r\nimport { createElement } from './utils/elements';\r\nimport is from './utils/is';\r\n\r\n// Default codecs for checking mimetype support\r\nconst defaultCodecs = {\r\n    'audio/ogg': 'vorbis',\r\n    'audio/wav': '1',\r\n    'video/webm': 'vp8, vorbis',\r\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\r\n    'video/ogg': 'theora',\r\n};\r\n\r\n// Check for feature support\r\nconst support = {\r\n    // Basic support\r\n    audio: 'canPlayType' in document.createElement('audio'),\r\n    video: 'canPlayType' in document.createElement('video'),\r\n\r\n    // Check for support\r\n    // Basic functionality vs full UI\r\n    check(type, provider, playsinline) {\r\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\r\n        const api = support[type] || provider !== 'html5';\r\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\r\n\r\n        return {\r\n            api,\r\n            ui,\r\n        };\r\n    },\r\n\r\n    // Picture-in-picture support\r\n    // Safari only currently\r\n    pip: (() => !browser.isIPhone && is.function(createElement('video').webkitSetPresentationMode))(),\r\n\r\n    // Airplay support\r\n    // Safari only currently\r\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\r\n\r\n    // Inline playback support\r\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\r\n    playsinline: 'playsInline' in document.createElement('video'),\r\n\r\n    // Check for mime type support against a player instance\r\n    // Credits: http://diveintohtml5.info/everything.html\r\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\r\n    mime(inputType) {\r\n        const [mediaType] = inputType.split('/');\r\n        if (!this.isHTML5 || mediaType !== this.type) {\r\n            return false;\r\n        }\r\n\r\n        let type;\r\n        if (inputType && inputType.includes('codecs=')) {\r\n            // Use input directly\r\n            type = inputType;\r\n        } else if (inputType === 'audio/mpeg') {\r\n            // Skip codec\r\n            type = 'audio/mpeg;';\r\n        } else if (inputType in defaultCodecs) {\r\n            // Use codec\r\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\r\n        }\r\n\r\n        try {\r\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    // Check for textTracks support\r\n    textTracks: 'textTracks' in document.createElement('video'),\r\n\r\n    // <input type=\"range\"> Sliders\r\n    rangeInput: (() => {\r\n        const range = document.createElement('input');\r\n        range.type = 'range';\r\n        return range.type === 'range';\r\n    })(),\r\n\r\n    // Touch\r\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\r\n    touch: 'ontouchstart' in document.documentElement,\r\n\r\n    // Detect transitions support\r\n    transitions: transitionEndEvent !== false,\r\n\r\n    // Reduced motion iOS & MacOS setting\r\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\r\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\r\n};\r\n\r\nexport default support;\r\n","// ==========================================================================\r\n// Plyr HTML5 helpers\r\n// ==========================================================================\r\n\r\nimport support from './support';\r\nimport { removeElement } from './utils/elements';\r\nimport { triggerEvent } from './utils/events';\r\n\r\nconst html5 = {\r\n    getSources() {\r\n        if (!this.isHTML5) {\r\n            return [];\r\n        }\r\n\r\n        const sources = Array.from(this.media.querySelectorAll('source'));\r\n\r\n        // Filter out unsupported sources\r\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\r\n    },\r\n\r\n    // Get quality levels\r\n    getQualityOptions() {\r\n        // Get sizes from <source> elements\r\n        return html5.getSources\r\n            .call(this)\r\n            .map(source => Number(source.getAttribute('size')))\r\n            .filter(Boolean);\r\n    },\r\n\r\n    extend() {\r\n        if (!this.isHTML5) {\r\n            return;\r\n        }\r\n\r\n        const player = this;\r\n\r\n        // Quality\r\n        Object.defineProperty(player.media, 'quality', {\r\n            get() {\r\n                // Get sources\r\n                const sources = html5.getSources.call(player);\r\n                const source = sources.find(source => source.getAttribute('src') === player.source);\r\n\r\n                // Return size, if match is found\r\n                return source && Number(source.getAttribute('size'));\r\n            },\r\n            set(input) {\r\n                // Get sources\r\n                const sources = html5.getSources.call(player);\r\n\r\n                // Get first match for requested size\r\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\r\n\r\n                // No matching source found\r\n                if (!source) {\r\n                    return;\r\n                }\r\n\r\n                // Get current state\r\n                const { currentTime, paused, preload, readyState } = player.media;\r\n\r\n                // Set new source\r\n                player.media.src = source.getAttribute('src');\r\n\r\n                // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\r\n                if (preload !== 'none' || readyState) {\r\n                    // Restore time\r\n                    player.once('loadedmetadata', () => {\r\n                        player.currentTime = currentTime;\r\n\r\n                        // Resume playing\r\n                        if (!paused) {\r\n                            player.play();\r\n                        }\r\n                    });\r\n\r\n                    // Load new source\r\n                    player.media.load();\r\n                }\r\n\r\n                // Trigger change event\r\n                triggerEvent.call(player, player.media, 'qualitychange', false, {\r\n                    quality: input,\r\n                });\r\n            },\r\n        });\r\n    },\r\n\r\n    // Cancel current network requests\r\n    // See https://github.com/sampotts/plyr/issues/174\r\n    cancelRequests() {\r\n        if (!this.isHTML5) {\r\n            return;\r\n        }\r\n\r\n        // Remove child sources\r\n        removeElement(html5.getSources.call(this));\r\n\r\n        // Set blank video src attribute\r\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\r\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\r\n        this.media.setAttribute('src', this.config.blankVideo);\r\n\r\n        // Load the new empty source\r\n        // This will cancel existing requests\r\n        // See https://github.com/sampotts/plyr/issues/174\r\n        this.media.load();\r\n\r\n        // Debugging\r\n        this.debug.log('Cancelled network requests');\r\n    },\r\n};\r\n\r\nexport default html5;\r\n","// ==========================================================================\r\n// Object utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n// Clone nested objects\r\nexport function cloneDeep(object) {\r\n    return JSON.parse(JSON.stringify(object));\r\n}\r\n\r\n// Get a nested value in an object\r\nexport function getDeep(object, path) {\r\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\r\n}\r\n\r\n// Deep extend destination object with N more objects\r\nexport function extend(target = {}, ...sources) {\r\n    if (!sources.length) {\r\n        return target;\r\n    }\r\n\r\n    const source = sources.shift();\r\n\r\n    if (!is.object(source)) {\r\n        return target;\r\n    }\r\n\r\n    Object.keys(source).forEach(key => {\r\n        if (is.object(source[key])) {\r\n            if (!Object.keys(target).includes(key)) {\r\n                Object.assign(target, { [key]: {} });\r\n            }\r\n\r\n            extend(target[key], source[key]);\r\n        } else {\r\n            Object.assign(target, { [key]: source[key] });\r\n        }\r\n    });\r\n\r\n    return extend(target, ...sources);\r\n}\r\n","// ==========================================================================\r\n// String utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n// Generate a random ID\r\nexport function generateId(prefix) {\r\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\r\n}\r\n\r\n// Format string\r\nexport function format(input, ...args) {\r\n    if (is.empty(input)) {\r\n        return input;\r\n    }\r\n\r\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\r\n}\r\n\r\n// Get percentage\r\nexport function getPercentage(current, max) {\r\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\r\n        return 0;\r\n    }\r\n\r\n    return (current / max * 100).toFixed(2);\r\n}\r\n\r\n// Replace all occurances of a string in a string\r\nexport function replaceAll(input = '', find = '', replace = '') {\r\n    return input.replace(\r\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\r\n        replace.toString(),\r\n    );\r\n}\r\n\r\n// Convert to title case\r\nexport function toTitleCase(input = '') {\r\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\r\n}\r\n\r\n// Convert string to pascalCase\r\nexport function toPascalCase(input = '') {\r\n    let string = input.toString();\r\n\r\n    // Convert kebab case\r\n    string = replaceAll(string, '-', ' ');\r\n\r\n    // Convert snake case\r\n    string = replaceAll(string, '_', ' ');\r\n\r\n    // Convert to title case\r\n    string = toTitleCase(string);\r\n\r\n    // Convert to pascal case\r\n    return replaceAll(string, ' ', '');\r\n}\r\n\r\n// Convert string to pascalCase\r\nexport function toCamelCase(input = '') {\r\n    let string = input.toString();\r\n\r\n    // Convert to pascal case\r\n    string = toPascalCase(string);\r\n\r\n    // Convert first character to lowercase\r\n    return string.charAt(0).toLowerCase() + string.slice(1);\r\n}\r\n\r\n// Remove HTML from a string\r\nexport function stripHTML(source) {\r\n    const fragment = document.createDocumentFragment();\r\n    const element = document.createElement('div');\r\n    fragment.appendChild(element);\r\n    element.innerHTML = source;\r\n    return fragment.firstChild.innerText;\r\n}\r\n\r\n// Like outerHTML, but also works for DocumentFragment\r\nexport function getHTML(element) {\r\n    const wrapper = document.createElement('div');\r\n    wrapper.appendChild(element);\r\n    return wrapper.innerHTML;\r\n}\r\n","// ==========================================================================\r\n// Plyr internationalization\r\n// ==========================================================================\r\n\r\nimport is from './utils/is';\r\nimport { getDeep } from './utils/objects';\r\nimport { replaceAll } from './utils/strings';\r\n\r\nconst i18n = {\r\n    get(key = '', config = {}) {\r\n        if (is.empty(key) || is.empty(config)) {\r\n            return '';\r\n        }\r\n\r\n        let string = getDeep(config.i18n, key);\r\n\r\n        if (is.empty(string)) {\r\n            return '';\r\n        }\r\n\r\n        const replace = {\r\n            '{seektime}': config.seekTime,\r\n            '{title}': config.title,\r\n        };\r\n\r\n        Object.entries(replace).forEach(([key, value]) => {\r\n            string = replaceAll(string, key, value);\r\n        });\r\n\r\n        return string;\r\n    },\r\n};\r\n\r\nexport default i18n;\r\n","// ==========================================================================\r\n// Array utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n// Remove duplicates in an array\r\nexport function dedupe(array) {\r\n    if (!is.array(array)) {\r\n        return array;\r\n    }\r\n\r\n    return array.filter((item, index) => array.indexOf(item) === index);\r\n}\r\n\r\n// Get the closest value in an array\r\nexport function closest(array, value) {\r\n    if (!is.array(array) || !array.length) {\r\n        return null;\r\n    }\r\n\r\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\r\n}\r\n","// ==========================================================================\r\n// Plyr storage\r\n// ==========================================================================\r\n\r\nimport is from './utils/is';\r\nimport { extend } from './utils/objects';\r\n\r\nclass Storage {\r\n    constructor(player) {\r\n        this.enabled = player.config.storage.enabled;\r\n        this.key = player.config.storage.key;\r\n    }\r\n\r\n    // Check for actual support (see if we can use it)\r\n    static get supported() {\r\n        try {\r\n            if (!('localStorage' in window)) {\r\n                return false;\r\n            }\r\n\r\n            const test = '___test';\r\n\r\n            // Try to use it (it might be disabled, e.g. user is in private mode)\r\n            // see: https://github.com/sampotts/plyr/issues/131\r\n            window.localStorage.setItem(test, test);\r\n            window.localStorage.removeItem(test);\r\n\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get(key) {\r\n        if (!Storage.supported || !this.enabled) {\r\n            return null;\r\n        }\r\n\r\n        const store = window.localStorage.getItem(this.key);\r\n\r\n        if (is.empty(store)) {\r\n            return null;\r\n        }\r\n\r\n        const json = JSON.parse(store);\r\n\r\n        return is.string(key) && key.length ? json[key] : json;\r\n    }\r\n\r\n    set(object) {\r\n        // Bail if we don't have localStorage support or it's disabled\r\n        if (!Storage.supported || !this.enabled) {\r\n            return;\r\n        }\r\n\r\n        // Can only store objectst\r\n        if (!is.object(object)) {\r\n            return;\r\n        }\r\n\r\n        // Get current storage\r\n        let storage = this.get();\r\n\r\n        // Default to empty object\r\n        if (is.empty(storage)) {\r\n            storage = {};\r\n        }\r\n\r\n        // Update the working copy of the values\r\n        extend(storage, object);\r\n\r\n        // Update storage\r\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\r\n    }\r\n}\r\n\r\nexport default Storage;\r\n","// ==========================================================================\r\n// Fetch wrapper\r\n// Using XHR to avoid issues with older browsers\r\n// ==========================================================================\r\n\r\nexport default function fetch(url, responseType = 'text') {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const request = new XMLHttpRequest();\r\n\r\n            // Check for CORS support\r\n            if (!('withCredentials' in request)) {\r\n                return;\r\n            }\r\n\r\n            request.addEventListener('load', () => {\r\n                if (responseType === 'text') {\r\n                    try {\r\n                        resolve(JSON.parse(request.responseText));\r\n                    } catch (e) {\r\n                        resolve(request.responseText);\r\n                    }\r\n                } else {\r\n                    resolve(request.response);\r\n                }\r\n            });\r\n\r\n            request.addEventListener('error', () => {\r\n                throw new Error(request.status);\r\n            });\r\n\r\n            request.open('GET', url, true);\r\n\r\n            // Set the required response type\r\n            request.responseType = responseType;\r\n\r\n            request.send();\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\r\n","// ==========================================================================\r\n// Sprite loader\r\n// ==========================================================================\r\n\r\nimport Storage from '../storage';\r\nimport fetch from './fetch';\r\nimport is from './is';\r\n\r\n// Load an external SVG sprite\r\nexport default function loadSprite(url, id) {\r\n    if (!is.string(url)) {\r\n        return;\r\n    }\r\n\r\n    const prefix = 'cache';\r\n    const hasId = is.string(id);\r\n    let isCached = false;\r\n\r\n    const exists = () => document.getElementById(id) !== null;\r\n\r\n    const update = (container, data) => {\r\n        container.innerHTML = data;\r\n\r\n        // Check again incase of race condition\r\n        if (hasId && exists()) {\r\n            return;\r\n        }\r\n\r\n        // Inject the SVG to the body\r\n        document.body.insertAdjacentElement('afterbegin', container);\r\n    };\r\n\r\n    // Only load once if ID set\r\n    if (!hasId || !exists()) {\r\n        const useStorage = Storage.supported;\r\n\r\n        // Create container\r\n        const container = document.createElement('div');\r\n        container.setAttribute('hidden', '');\r\n\r\n        if (hasId) {\r\n            container.setAttribute('id', id);\r\n        }\r\n\r\n        // Check in cache\r\n        if (useStorage) {\r\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\r\n            isCached = cached !== null;\r\n\r\n            if (isCached) {\r\n                const data = JSON.parse(cached);\r\n                update(container, data.content);\r\n            }\r\n        }\r\n\r\n        // Get the sprite\r\n        fetch(url)\r\n            .then(result => {\r\n                if (is.empty(result)) {\r\n                    return;\r\n                }\r\n\r\n                if (useStorage) {\r\n                    window.localStorage.setItem(\r\n                        `${prefix}-${id}`,\r\n                        JSON.stringify({\r\n                            content: result,\r\n                        }),\r\n                    );\r\n                }\r\n\r\n                update(container, result);\r\n            })\r\n            .catch(() => {});\r\n    }\r\n}\r\n","// ==========================================================================\r\n// Time utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n// Time helpers\r\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\r\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\r\nexport const getSeconds = value => parseInt(value % 60, 10);\r\n\r\n// Format time to UI friendly string\r\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\r\n    // Bail if the value isn't a number\r\n    if (!is.number(time)) {\r\n        return formatTime(null, displayHours, inverted);\r\n    }\r\n\r\n    // Format time component to add leading zero\r\n    const format = value => `0${value}`.slice(-2);\r\n\r\n    // Breakdown to hours, mins, secs\r\n    let hours = getHours(time);\r\n    const mins = getMinutes(time);\r\n    const secs = getSeconds(time);\r\n\r\n    // Do we need to display hours?\r\n    if (displayHours || hours > 0) {\r\n        hours = `${hours}:`;\r\n    } else {\r\n        hours = '';\r\n    }\r\n\r\n    // Render\r\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\r\n}\r\n","// ==========================================================================\r\n// Plyr controls\r\n// ==========================================================================\r\n\r\nimport captions from './captions';\r\nimport html5 from './html5';\r\nimport i18n from './i18n';\r\nimport support from './support';\r\nimport { repaint, transitionEndEvent } from './utils/animation';\r\nimport { dedupe } from './utils/arrays';\r\nimport browser from './utils/browser';\r\nimport {\r\n    createElement,\r\n    emptyElement,\r\n    getAttributesFromSelector,\r\n    getElement,\r\n    getElements,\r\n    hasClass,\r\n    matches,\r\n    removeElement,\r\n    setAttributes,\r\n    toggleClass,\r\n    toggleHidden,\r\n} from './utils/elements';\r\nimport { off, on } from './utils/events';\r\nimport is from './utils/is';\r\nimport loadSprite from './utils/loadSprite';\r\nimport { extend } from './utils/objects';\r\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\r\nimport { formatTime, getHours } from './utils/time';\r\n\r\n// TODO: Don't export a massive object - break down and create class\r\nconst controls = {\r\n    // Get icon URL\r\n    getIconUrl() {\r\n        const url = new URL(this.config.iconUrl, window.location);\r\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\r\n\r\n        return {\r\n            url: this.config.iconUrl,\r\n            cors,\r\n        };\r\n    },\r\n\r\n    // Find the UI controls\r\n    findElements() {\r\n        try {\r\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\r\n\r\n            // Buttons\r\n            this.elements.buttons = {\r\n                play: getElements.call(this, this.config.selectors.buttons.play),\r\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\r\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\r\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\r\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\r\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\r\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\r\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\r\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\r\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\r\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\r\n            };\r\n\r\n            // Progress\r\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\r\n\r\n            // Inputs\r\n            this.elements.inputs = {\r\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\r\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\r\n            };\r\n\r\n            // Display\r\n            this.elements.display = {\r\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\r\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\r\n                duration: getElement.call(this, this.config.selectors.display.duration),\r\n            };\r\n\r\n            // Seek tooltip\r\n            if (is.element(this.elements.progress)) {\r\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\r\n                    `.${this.config.classNames.tooltip}`,\r\n                );\r\n            }\r\n\r\n            return true;\r\n        } catch (error) {\r\n            // Log it\r\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\r\n\r\n            // Restore native video controls\r\n            this.toggleNativeControls(true);\r\n\r\n            return false;\r\n        }\r\n    },\r\n\r\n    // Create <svg> icon\r\n    createIcon(type, attributes) {\r\n        const namespace = 'http://www.w3.org/2000/svg';\r\n        const iconUrl = controls.getIconUrl.call(this);\r\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\r\n\r\n        // Create <svg>\r\n        const icon = document.createElementNS(namespace, 'svg');\r\n        setAttributes(\r\n            icon,\r\n            extend(attributes, {\r\n                role: 'presentation',\r\n                focusable: 'false',\r\n            }),\r\n        );\r\n\r\n        // Create the <use> to reference sprite\r\n        const use = document.createElementNS(namespace, 'use');\r\n        const path = `${iconPath}-${type}`;\r\n\r\n        // Set `href` attributes\r\n        // https://github.com/sampotts/plyr/issues/460\r\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\r\n        if ('href' in use) {\r\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\r\n        } else {\r\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\r\n        }\r\n\r\n        // Add <use> to <svg>\r\n        icon.appendChild(use);\r\n\r\n        return icon;\r\n    },\r\n\r\n    // Create hidden text label\r\n    createLabel(type, attr = {}) {\r\n        // Skip i18n for abbreviations and brand names\r\n        const universals = {\r\n            pip: 'PIP',\r\n            airplay: 'AirPlay',\r\n        };\r\n        const text = universals[type] || i18n.get(type, this.config);\r\n\r\n        const attributes = Object.assign({}, attr, {\r\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\r\n        });\r\n        return createElement('span', attributes, text);\r\n    },\r\n\r\n    // Create a badge\r\n    createBadge(text) {\r\n        if (is.empty(text)) {\r\n            return null;\r\n        }\r\n\r\n        const badge = createElement('span', {\r\n            class: this.config.classNames.menu.value,\r\n        });\r\n\r\n        badge.appendChild(\r\n            createElement(\r\n                'span',\r\n                {\r\n                    class: this.config.classNames.menu.badge,\r\n                },\r\n                text,\r\n            ),\r\n        );\r\n\r\n        return badge;\r\n    },\r\n\r\n    // Create a <button>\r\n    createButton(buttonType, attr) {\r\n        const button = createElement('button');\r\n        const attributes = Object.assign({}, attr);\r\n        let type = toCamelCase(buttonType);\r\n\r\n        let toggle = false;\r\n        let label;\r\n        let icon;\r\n        let labelPressed;\r\n        let iconPressed;\r\n\r\n        if (!('type' in attributes)) {\r\n            attributes.type = 'button';\r\n        }\r\n\r\n        if ('class' in attributes) {\r\n            if (!attributes.class.includes(this.config.classNames.control)) {\r\n                attributes.class += ` ${this.config.classNames.control}`;\r\n            }\r\n        } else {\r\n            attributes.class = this.config.classNames.control;\r\n        }\r\n\r\n        // Large play button\r\n        switch (buttonType) {\r\n            case 'play':\r\n                toggle = true;\r\n                label = 'play';\r\n                labelPressed = 'pause';\r\n                icon = 'play';\r\n                iconPressed = 'pause';\r\n                break;\r\n\r\n            case 'mute':\r\n                toggle = true;\r\n                label = 'mute';\r\n                labelPressed = 'unmute';\r\n                icon = 'volume';\r\n                iconPressed = 'muted';\r\n                break;\r\n\r\n            case 'captions':\r\n                toggle = true;\r\n                label = 'enableCaptions';\r\n                labelPressed = 'disableCaptions';\r\n                icon = 'captions-off';\r\n                iconPressed = 'captions-on';\r\n                break;\r\n\r\n            case 'fullscreen':\r\n                toggle = true;\r\n                label = 'enterFullscreen';\r\n                labelPressed = 'exitFullscreen';\r\n                icon = 'enter-fullscreen';\r\n                iconPressed = 'exit-fullscreen';\r\n                break;\r\n\r\n            case 'play-large':\r\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\r\n                type = 'play';\r\n                label = 'play';\r\n                icon = 'play';\r\n                break;\r\n\r\n            default:\r\n                label = type;\r\n                icon = buttonType;\r\n        }\r\n\r\n        // Setup toggle icon and labels\r\n        if (toggle) {\r\n            // Icon\r\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\r\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\r\n\r\n            // Label/Tooltip\r\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\r\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\r\n        } else {\r\n            button.appendChild(controls.createIcon.call(this, icon));\r\n            button.appendChild(controls.createLabel.call(this, label));\r\n        }\r\n\r\n        // Merge attributes\r\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\r\n\r\n        setAttributes(button, attributes);\r\n\r\n        // We have multiple play buttons\r\n        if (type === 'play') {\r\n            if (!is.array(this.elements.buttons[type])) {\r\n                this.elements.buttons[type] = [];\r\n            }\r\n\r\n            this.elements.buttons[type].push(button);\r\n        } else {\r\n            this.elements.buttons[type] = button;\r\n        }\r\n\r\n        // Toggle classname when pressed property is set\r\n        const className = this.config.classNames.controlPressed;\r\n        Object.defineProperty(button, 'pressed', {\r\n            enumerable: true,\r\n            get() {\r\n                return hasClass(button, className);\r\n            },\r\n            set(pressed = false) {\r\n                toggleClass(button, className, pressed);\r\n            },\r\n        });\r\n\r\n        return button;\r\n    },\r\n\r\n    // Create an <input type='range'>\r\n    createRange(type, attributes) {\r\n        // Seek input\r\n        const input = createElement(\r\n            'input',\r\n            extend(\r\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\r\n                {\r\n                    type: 'range',\r\n                    min: 0,\r\n                    max: 100,\r\n                    step: 0.01,\r\n                    value: 0,\r\n                    autocomplete: 'off',\r\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\r\n                    role: 'slider',\r\n                    'aria-label': i18n.get(type, this.config),\r\n                    'aria-valuemin': 0,\r\n                    'aria-valuemax': 100,\r\n                    'aria-valuenow': 0,\r\n                },\r\n                attributes,\r\n            ),\r\n        );\r\n\r\n        this.elements.inputs[type] = input;\r\n\r\n        // Set the fill for webkit now\r\n        controls.updateRangeFill.call(this, input);\r\n\r\n        return input;\r\n    },\r\n\r\n    // Create a <progress>\r\n    createProgress(type, attributes) {\r\n        const progress = createElement(\r\n            'progress',\r\n            extend(\r\n                getAttributesFromSelector(this.config.selectors.display[type]),\r\n                {\r\n                    min: 0,\r\n                    max: 100,\r\n                    value: 0,\r\n                    role: 'presentation',\r\n                    'aria-hidden': true,\r\n                },\r\n                attributes,\r\n            ),\r\n        );\r\n\r\n        // Create the label inside\r\n        if (type !== 'volume') {\r\n            progress.appendChild(createElement('span', null, '0'));\r\n\r\n            const suffixKey = {\r\n                played: 'played',\r\n                buffer: 'buffered',\r\n            }[type];\r\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\r\n\r\n            progress.innerText = `% ${suffix.toLowerCase()}`;\r\n        }\r\n\r\n        this.elements.display[type] = progress;\r\n\r\n        return progress;\r\n    },\r\n\r\n    // Create time display\r\n    createTime(type) {\r\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\r\n\r\n        const container = createElement(\r\n            'div',\r\n            extend(attributes, {\r\n                class: `plyr__time ${attributes.class}`,\r\n                'aria-label': i18n.get(type, this.config),\r\n            }),\r\n            '00:00',\r\n        );\r\n\r\n        // Reference for updates\r\n        this.elements.display[type] = container;\r\n\r\n        return container;\r\n    },\r\n\r\n    // Create a settings menu item\r\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\r\n        const item = createElement('li');\r\n\r\n        const label = createElement('label', {\r\n            class: this.config.classNames.control,\r\n        });\r\n\r\n        const radio = createElement(\r\n            'input',\r\n            extend(getAttributesFromSelector(this.config.selectors.inputs[type]), {\r\n                type: 'radio',\r\n                name: `plyr-${type}`,\r\n                value,\r\n                checked,\r\n                class: 'plyr__sr-only',\r\n            }),\r\n        );\r\n\r\n        const faux = createElement('span', { hidden: '' });\r\n\r\n        label.appendChild(radio);\r\n        label.appendChild(faux);\r\n        label.insertAdjacentHTML('beforeend', title);\r\n\r\n        if (is.element(badge)) {\r\n            label.appendChild(badge);\r\n        }\r\n\r\n        item.appendChild(label);\r\n        list.appendChild(item);\r\n    },\r\n\r\n    // Format a time for display\r\n    formatTime(time = 0, inverted = false) {\r\n        // Bail if the value isn't a number\r\n        if (!is.number(time)) {\r\n            return time;\r\n        }\r\n\r\n        // Always display hours if duration is over an hour\r\n        const forceHours = getHours(this.duration) > 0;\r\n\r\n        return formatTime(time, forceHours, inverted);\r\n    },\r\n\r\n    // Update the displayed time\r\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\r\n        // Bail if there's no element to display or the value isn't a number\r\n        if (!is.element(target) || !is.number(time)) {\r\n            return;\r\n        }\r\n\r\n        // eslint-disable-next-line no-param-reassign\r\n        target.innerText = controls.formatTime(time, inverted);\r\n    },\r\n\r\n    // Update volume UI and storage\r\n    updateVolume() {\r\n        if (!this.supported.ui) {\r\n            return;\r\n        }\r\n\r\n        // Update range\r\n        if (is.element(this.elements.inputs.volume)) {\r\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\r\n        }\r\n\r\n        // Update mute state\r\n        if (is.element(this.elements.buttons.mute)) {\r\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\r\n        }\r\n    },\r\n\r\n    // Update seek value and lower fill\r\n    setRange(target, value = 0) {\r\n        if (!is.element(target)) {\r\n            return;\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n        target.value = value;\r\n\r\n        // Webkit range fill\r\n        controls.updateRangeFill.call(this, target);\r\n    },\r\n\r\n    // Update <progress> elements\r\n    updateProgress(event) {\r\n        if (!this.supported.ui || !is.event(event)) {\r\n            return;\r\n        }\r\n\r\n        let value = 0;\r\n\r\n        const setProgress = (target, input) => {\r\n            const value = is.number(input) ? input : 0;\r\n            const progress = is.element(target) ? target : this.elements.display.buffer;\r\n\r\n            // Update value and label\r\n            if (is.element(progress)) {\r\n                progress.value = value;\r\n\r\n                // Update text label inside\r\n                const label = progress.getElementsByTagName('span')[0];\r\n                if (is.element(label)) {\r\n                    label.childNodes[0].nodeValue = value;\r\n                }\r\n            }\r\n        };\r\n\r\n        if (event) {\r\n            switch (event.type) {\r\n                // Video playing\r\n                case 'timeupdate':\r\n                case 'seeking':\r\n                case 'seeked':\r\n                    value = getPercentage(this.currentTime, this.duration);\r\n\r\n                    // Set seek range value only if it's a 'natural' time event\r\n                    if (event.type === 'timeupdate') {\r\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\r\n                    }\r\n\r\n                    break;\r\n\r\n                // Check buffer status\r\n                case 'playing':\r\n                case 'progress':\r\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\r\n\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n\r\n    // Webkit polyfill for lower fill range\r\n    updateRangeFill(target) {\r\n        // Get range from event if event passed\r\n        const range = is.event(target) ? target.target : target;\r\n\r\n        // Needs to be a valid <input type='range'>\r\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\r\n            return;\r\n        }\r\n\r\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\r\n        if (matches(range, this.config.selectors.inputs.seek)) {\r\n            range.setAttribute('aria-valuenow', this.currentTime);\r\n            const currentTime = controls.formatTime(this.currentTime);\r\n            const duration = controls.formatTime(this.duration);\r\n            const format = i18n.get('seekLabel', this.config);\r\n            range.setAttribute(\r\n                'aria-valuetext',\r\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\r\n            );\r\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\r\n            const percent = range.value * 100;\r\n            range.setAttribute('aria-valuenow', percent);\r\n            range.setAttribute('aria-valuetext', `${percent}%`);\r\n        } else {\r\n            range.setAttribute('aria-valuenow', range.value);\r\n        }\r\n\r\n        // WebKit only\r\n        if (!browser.isWebkit) {\r\n            return;\r\n        }\r\n\r\n        // Set CSS custom property\r\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\r\n    },\r\n\r\n    // Update hover tooltip for seeking\r\n    updateSeekTooltip(event) {\r\n        // Bail if setting not true\r\n        if (\r\n            !this.config.tooltips.seek ||\r\n            !is.element(this.elements.inputs.seek) ||\r\n            !is.element(this.elements.display.seekTooltip) ||\r\n            this.duration === 0\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // Calculate percentage\r\n        let percent = 0;\r\n        const clientRect = this.elements.progress.getBoundingClientRect();\r\n        const visible = `${this.config.classNames.tooltip}--visible`;\r\n\r\n        const toggle = toggle => {\r\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\r\n        };\r\n\r\n        // Hide on touch\r\n        if (this.touch) {\r\n            toggle(false);\r\n            return;\r\n        }\r\n\r\n        // Determine percentage, if already visible\r\n        if (is.event(event)) {\r\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\r\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\r\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        // Set bounds\r\n        if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n        // Display the time a click would seek to\r\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\r\n\r\n        // Set position\r\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\r\n\r\n        // Show/hide the tooltip\r\n        // If the event is a moues in/out and percentage is inside bounds\r\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\r\n            toggle(event.type === 'mouseenter');\r\n        }\r\n    },\r\n\r\n    // Handle time change event\r\n    timeUpdate(event) {\r\n        // Only invert if only one time element is displayed and used for both duration and currentTime\r\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\r\n\r\n        // Duration\r\n        controls.updateTimeDisplay.call(\r\n            this,\r\n            this.elements.display.currentTime,\r\n            invert ? this.duration - this.currentTime : this.currentTime,\r\n            invert,\r\n        );\r\n\r\n        // Ignore updates while seeking\r\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\r\n            return;\r\n        }\r\n\r\n        // Playing progress\r\n        controls.updateProgress.call(this, event);\r\n    },\r\n\r\n    // Show the duration on metadataloaded or durationchange events\r\n    durationUpdate() {\r\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\r\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\r\n            return;\r\n        }\r\n\r\n        // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\r\n        // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\r\n        // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\r\n        // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\r\n        if (this.duration >= 2**32) {\r\n            toggleHidden(this.elements.display.currentTime, true);\r\n            toggleHidden(this.elements.progress, true);\r\n            return;\r\n        }\r\n\r\n        // Update ARIA values\r\n        if (is.element(this.elements.inputs.seek)) {\r\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\r\n        }\r\n\r\n        // If there's a spot to display duration\r\n        const hasDuration = is.element(this.elements.display.duration);\r\n\r\n        // If there's only one time display, display duration there\r\n        if (!hasDuration && this.config.displayDuration && this.paused) {\r\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\r\n        }\r\n\r\n        // If there's a duration element, update content\r\n        if (hasDuration) {\r\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\r\n        }\r\n\r\n        // Update the tooltip (if visible)\r\n        controls.updateSeekTooltip.call(this);\r\n    },\r\n\r\n    // Hide/show a tab\r\n    toggleTab(setting, toggle) {\r\n        toggleHidden(this.elements.settings.tabs[setting], !toggle);\r\n    },\r\n\r\n    // Set the quality menu\r\n    setQualityMenu(options) {\r\n        // Menu required\r\n        if (!is.element(this.elements.settings.panes.quality)) {\r\n            return;\r\n        }\r\n\r\n        const type = 'quality';\r\n        const list = this.elements.settings.panes.quality.querySelector('ul');\r\n\r\n        // Set options if passed and filter based on uniqueness and config\r\n        if (is.array(options)) {\r\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\r\n        }\r\n\r\n        // Toggle the pane and tab\r\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\r\n        controls.toggleTab.call(this, type, toggle);\r\n\r\n        // Check if we need to toggle the parent\r\n        controls.checkMenu.call(this);\r\n\r\n        // If we're hiding, nothing more to do\r\n        if (!toggle) {\r\n            return;\r\n        }\r\n\r\n        // Empty the menu\r\n        emptyElement(list);\r\n\r\n        // Get the badge HTML for HD, 4K etc\r\n        const getBadge = quality => {\r\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\r\n\r\n            if (!label.length) {\r\n                return null;\r\n            }\r\n\r\n            return controls.createBadge.call(this, label);\r\n        };\r\n\r\n        // Sort options by the config and then render options\r\n        this.options.quality\r\n            .sort((a, b) => {\r\n                const sorting = this.config.quality.options;\r\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\r\n            })\r\n            .forEach(quality => {\r\n                controls.createMenuItem.call(this, {\r\n                    value: quality,\r\n                    list,\r\n                    type,\r\n                    title: controls.getLabel.call(this, 'quality', quality),\r\n                    badge: getBadge(quality),\r\n                });\r\n            });\r\n\r\n        controls.updateSetting.call(this, type, list);\r\n    },\r\n\r\n    // Translate a value into a nice label\r\n    getLabel(setting, value) {\r\n        switch (setting) {\r\n            case 'speed':\r\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\r\n\r\n            case 'quality':\r\n                if (is.number(value)) {\r\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\r\n\r\n                    if (!label.length) {\r\n                        return `${value}p`;\r\n                    }\r\n\r\n                    return label;\r\n                }\r\n\r\n                return toTitleCase(value);\r\n\r\n            case 'captions':\r\n                return captions.getLabel.call(this);\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    },\r\n\r\n    // Update the selected setting\r\n    updateSetting(setting, container, input) {\r\n        const pane = this.elements.settings.panes[setting];\r\n        let value = null;\r\n        let list = container;\r\n\r\n        if (setting === 'captions') {\r\n            value = this.currentTrack;\r\n        } else {\r\n            value = !is.empty(input) ? input : this[setting];\r\n\r\n            // Get default\r\n            if (is.empty(value)) {\r\n                value = this.config[setting].default;\r\n            }\r\n\r\n            // Unsupported value\r\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\r\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\r\n                return;\r\n            }\r\n\r\n            // Disabled value\r\n            if (!this.config[setting].options.includes(value)) {\r\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Get the list if we need to\r\n        if (!is.element(list)) {\r\n            list = pane && pane.querySelector('ul');\r\n        }\r\n\r\n        // If there's no list it means it's not been rendered...\r\n        if (!is.element(list)) {\r\n            return;\r\n        }\r\n\r\n        // Update the label\r\n        const label = this.elements.settings.tabs[setting].querySelector(`.${this.config.classNames.menu.value}`);\r\n        label.innerHTML = controls.getLabel.call(this, setting, value);\r\n\r\n        // Find the radio option and check it\r\n        const target = list && list.querySelector(`input[value=\"${value}\"]`);\r\n\r\n        if (is.element(target)) {\r\n            target.checked = true;\r\n        }\r\n    },\r\n\r\n    // Set the looping options\r\n    /* setLoopMenu() {\r\n        // Menu required\r\n        if (!is.element(this.elements.settings.panes.loop)) {\r\n            return;\r\n        }\r\n\r\n        const options = ['start', 'end', 'all', 'reset'];\r\n        const list = this.elements.settings.panes.loop.querySelector('ul');\r\n\r\n        // Show the pane and tab\r\n        toggleHidden(this.elements.settings.tabs.loop, false);\r\n        toggleHidden(this.elements.settings.panes.loop, false);\r\n\r\n        // Toggle the pane and tab\r\n        const toggle = !is.empty(this.loop.options);\r\n        controls.toggleTab.call(this, 'loop', toggle);\r\n\r\n        // Empty the menu\r\n        emptyElement(list);\r\n\r\n        options.forEach(option => {\r\n            const item = createElement('li');\r\n\r\n            const button = createElement(\r\n                'button',\r\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\r\n                    type: 'button',\r\n                    class: this.config.classNames.control,\r\n                    'data-plyr-loop-action': option,\r\n                }),\r\n                i18n.get(option, this.config)\r\n            );\r\n\r\n            if (['start', 'end'].includes(option)) {\r\n                const badge = controls.createBadge.call(this, '00:00');\r\n                button.appendChild(badge);\r\n            }\r\n\r\n            item.appendChild(button);\r\n            list.appendChild(item);\r\n        });\r\n    }, */\r\n\r\n    // Get current selected caption language\r\n    // TODO: rework this to user the getter in the API?\r\n\r\n    // Set a list of available captions languages\r\n    setCaptionsMenu() {\r\n        // TODO: Captions or language? Currently it's mixed\r\n        const type = 'captions';\r\n        const list = this.elements.settings.panes.captions.querySelector('ul');\r\n        const tracks = captions.getTracks.call(this);\r\n\r\n        // Toggle the pane and tab\r\n        controls.toggleTab.call(this, type, tracks.length);\r\n\r\n        // Empty the menu\r\n        emptyElement(list);\r\n\r\n        // Check if we need to toggle the parent\r\n        controls.checkMenu.call(this);\r\n\r\n        // If there's no captions, bail\r\n        if (!tracks.length) {\r\n            return;\r\n        }\r\n\r\n        // Generate options data\r\n        const options = tracks.map((track, value) => ({\r\n            value,\r\n            checked: this.captions.toggled && this.currentTrack === value,\r\n            title: captions.getLabel.call(this, track),\r\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\r\n            list,\r\n            type: 'language',\r\n        }));\r\n\r\n        // Add the \"Disabled\" option to turn off captions\r\n        options.unshift({\r\n            value: -1,\r\n            checked: !this.captions.toggled,\r\n            title: i18n.get('disabled', this.config),\r\n            list,\r\n            type: 'language',\r\n        });\r\n\r\n        // Generate options\r\n        options.forEach(controls.createMenuItem.bind(this));\r\n\r\n        controls.updateSetting.call(this, type, list);\r\n    },\r\n\r\n    // Set a list of available captions languages\r\n    setSpeedMenu(options) {\r\n        // Do nothing if not selected\r\n        if (!this.config.controls.includes('settings') || !this.config.settings.includes('speed')) {\r\n            return;\r\n        }\r\n\r\n        // Menu required\r\n        if (!is.element(this.elements.settings.panes.speed)) {\r\n            return;\r\n        }\r\n\r\n        const type = 'speed';\r\n\r\n        // Set the speed options\r\n        if (is.array(options)) {\r\n            this.options.speed = options;\r\n        } else if (this.isHTML5 || this.isVimeo) {\r\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\r\n        }\r\n\r\n        // Set options if passed and filter based on config\r\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\r\n\r\n        // Toggle the pane and tab\r\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\r\n        controls.toggleTab.call(this, type, toggle);\r\n\r\n        // Check if we need to toggle the parent\r\n        controls.checkMenu.call(this);\r\n\r\n        // If we're hiding, nothing more to do\r\n        if (!toggle) {\r\n            return;\r\n        }\r\n\r\n        // Get the list to populate\r\n        const list = this.elements.settings.panes.speed.querySelector('ul');\r\n\r\n        // Empty the menu\r\n        emptyElement(list);\r\n\r\n        // Create items\r\n        this.options.speed.forEach(speed => {\r\n            controls.createMenuItem.call(this, {\r\n                value: speed,\r\n                list,\r\n                type,\r\n                title: controls.getLabel.call(this, 'speed', speed),\r\n            });\r\n        });\r\n\r\n        controls.updateSetting.call(this, type, list);\r\n    },\r\n\r\n    // Check if we need to hide/show the settings menu\r\n    checkMenu() {\r\n        const { tabs } = this.elements.settings;\r\n        const visible = !is.empty(tabs) && Object.values(tabs).some(tab => !tab.hidden);\r\n\r\n        toggleHidden(this.elements.settings.menu, !visible);\r\n    },\r\n\r\n    // Show/hide menu\r\n    toggleMenu(event) {\r\n        const { form } = this.elements.settings;\r\n        const button = this.elements.buttons.settings;\r\n\r\n        // Menu and button are required\r\n        if (!is.element(form) || !is.element(button)) {\r\n            return;\r\n        }\r\n\r\n        const show = is.boolean(event) ? event : is.element(form) && form.hasAttribute('hidden');\r\n\r\n        if (is.event(event)) {\r\n            const isMenuItem = is.element(form) && form.contains(event.target);\r\n            const isButton = event.target === this.elements.buttons.settings;\r\n\r\n            // If the click was inside the form or if the click\r\n            // wasn't the button or menu item and we're trying to\r\n            // show the menu (a doc click shouldn't show the menu)\r\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\r\n                return;\r\n            }\r\n\r\n            // Prevent the toggle being caught by the doc listener\r\n            if (isButton) {\r\n                event.stopPropagation();\r\n            }\r\n        }\r\n\r\n        // Set form and button attributes\r\n        if (is.element(button)) {\r\n            button.setAttribute('aria-expanded', show);\r\n        }\r\n\r\n        if (is.element(form)) {\r\n            toggleHidden(form, !show);\r\n            toggleClass(this.elements.container, this.config.classNames.menu.open, show);\r\n\r\n            if (show) {\r\n                form.removeAttribute('tabindex');\r\n            } else {\r\n                form.setAttribute('tabindex', -1);\r\n            }\r\n        }\r\n    },\r\n\r\n    // Get the natural size of a tab\r\n    getTabSize(tab) {\r\n        const clone = tab.cloneNode(true);\r\n        clone.style.position = 'absolute';\r\n        clone.style.opacity = 0;\r\n        clone.removeAttribute('hidden');\r\n\r\n        // Prevent input's being unchecked due to the name being identical\r\n        Array.from(clone.querySelectorAll('input[name]')).forEach(input => {\r\n            const name = input.getAttribute('name');\r\n            input.setAttribute('name', `${name}-clone`);\r\n        });\r\n\r\n        // Append to parent so we get the \"real\" size\r\n        tab.parentNode.appendChild(clone);\r\n\r\n        // Get the sizes before we remove\r\n        const width = clone.scrollWidth;\r\n        const height = clone.scrollHeight;\r\n\r\n        // Remove from the DOM\r\n        removeElement(clone);\r\n\r\n        return {\r\n            width,\r\n            height,\r\n        };\r\n    },\r\n\r\n    // Toggle Menu\r\n    showTab(target = '') {\r\n        const { menu } = this.elements.settings;\r\n        const pane = document.getElementById(target);\r\n\r\n        // Nothing to show, bail\r\n        if (!is.element(pane)) {\r\n            return;\r\n        }\r\n\r\n        // Are we targeting a tab? If not, bail\r\n        const isTab = pane.getAttribute('role') === 'tabpanel';\r\n        if (!isTab) {\r\n            return;\r\n        }\r\n\r\n        // Hide all other tabs\r\n        // Get other tabs\r\n        const current = menu.querySelector('[role=\"tabpanel\"]:not([hidden])');\r\n        const container = current.parentNode;\r\n\r\n        // Set other toggles to be expanded false\r\n        Array.from(menu.querySelectorAll(`[aria-controls=\"${current.getAttribute('id')}\"]`)).forEach(toggle => {\r\n            toggle.setAttribute('aria-expanded', false);\r\n        });\r\n\r\n        // If we can do fancy animations, we'll animate the height/width\r\n        if (support.transitions && !support.reducedMotion) {\r\n            // Set the current width as a base\r\n            container.style.width = `${current.scrollWidth}px`;\r\n            container.style.height = `${current.scrollHeight}px`;\r\n\r\n            // Get potential sizes\r\n            const size = controls.getTabSize.call(this, pane);\r\n\r\n            // Restore auto height/width\r\n            const restore = e => {\r\n                // We're only bothered about height and width on the container\r\n                if (e.target !== container || !['width', 'height'].includes(e.propertyName)) {\r\n                    return;\r\n                }\r\n\r\n                // Revert back to auto\r\n                container.style.width = '';\r\n                container.style.height = '';\r\n\r\n                // Only listen once\r\n                off.call(this, container, transitionEndEvent, restore);\r\n            };\r\n\r\n            // Listen for the transition finishing and restore auto height/width\r\n            on.call(this, container, transitionEndEvent, restore);\r\n\r\n            // Set dimensions to target\r\n            container.style.width = `${size.width}px`;\r\n            container.style.height = `${size.height}px`;\r\n        }\r\n\r\n        // Set attributes on current tab\r\n        toggleHidden(current, true);\r\n        current.setAttribute('tabindex', -1);\r\n\r\n        // Set attributes on target\r\n        toggleHidden(pane, false);\r\n\r\n        const tabs = getElements.call(this, `[aria-controls=\"${target}\"]`);\r\n        Array.from(tabs).forEach(tab => {\r\n            tab.setAttribute('aria-expanded', true);\r\n        });\r\n        pane.removeAttribute('tabindex');\r\n\r\n        // Focus the first item\r\n        pane.querySelectorAll('button:not(:disabled), input:not(:disabled), [tabindex]')[0].focus();\r\n    },\r\n\r\n    // Build the default HTML\r\n    // TODO: Set order based on order in the config.controls array?\r\n    create(data) {\r\n        // Do nothing if we want no controls\r\n        if (is.empty(this.config.controls)) {\r\n            return null;\r\n        }\r\n\r\n        // Create the container\r\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\r\n\r\n        // Restart button\r\n        if (this.config.controls.includes('restart')) {\r\n            container.appendChild(controls.createButton.call(this, 'restart'));\r\n        }\r\n\r\n        // Rewind button\r\n        if (this.config.controls.includes('rewind')) {\r\n            container.appendChild(controls.createButton.call(this, 'rewind'));\r\n        }\r\n\r\n        // Play/Pause button\r\n        if (this.config.controls.includes('play')) {\r\n            container.appendChild(controls.createButton.call(this, 'play'));\r\n        }\r\n\r\n        // Fast forward button\r\n        if (this.config.controls.includes('fast-forward')) {\r\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\r\n        }\r\n\r\n        // Progress\r\n        if (this.config.controls.includes('progress')) {\r\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\r\n\r\n            // Seek range slider\r\n            progress.appendChild(\r\n                controls.createRange.call(this, 'seek', {\r\n                    id: `plyr-seek-${data.id}`,\r\n                }),\r\n            );\r\n\r\n            // Buffer progress\r\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\r\n\r\n            // TODO: Add loop display indicator\r\n\r\n            // Seek tooltip\r\n            if (this.config.tooltips.seek) {\r\n                const tooltip = createElement(\r\n                    'span',\r\n                    {\r\n                        class: this.config.classNames.tooltip,\r\n                    },\r\n                    '00:00',\r\n                );\r\n\r\n                progress.appendChild(tooltip);\r\n                this.elements.display.seekTooltip = tooltip;\r\n            }\r\n\r\n            this.elements.progress = progress;\r\n            container.appendChild(this.elements.progress);\r\n        }\r\n\r\n        // Media current time display\r\n        if (this.config.controls.includes('current-time')) {\r\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\r\n        }\r\n\r\n        // Media duration display\r\n        if (this.config.controls.includes('duration')) {\r\n            container.appendChild(controls.createTime.call(this, 'duration'));\r\n        }\r\n\r\n        // Toggle mute button\r\n        if (this.config.controls.includes('mute')) {\r\n            container.appendChild(controls.createButton.call(this, 'mute'));\r\n        }\r\n\r\n        // Volume range control\r\n        if (this.config.controls.includes('volume')) {\r\n            const volume = createElement('div', {\r\n                class: 'plyr__volume',\r\n            });\r\n\r\n            // Set the attributes\r\n            const attributes = {\r\n                max: 1,\r\n                step: 0.05,\r\n                value: this.config.volume,\r\n            };\r\n\r\n            // Create the volume range slider\r\n            volume.appendChild(\r\n                controls.createRange.call(\r\n                    this,\r\n                    'volume',\r\n                    extend(attributes, {\r\n                        id: `plyr-volume-${data.id}`,\r\n                    }),\r\n                ),\r\n            );\r\n\r\n            this.elements.volume = volume;\r\n\r\n            container.appendChild(volume);\r\n        }\r\n\r\n        // Toggle captions button\r\n        if (this.config.controls.includes('captions')) {\r\n            container.appendChild(controls.createButton.call(this, 'captions'));\r\n        }\r\n\r\n        // Settings button / menu\r\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\r\n            const menu = createElement('div', {\r\n                class: 'plyr__menu',\r\n                hidden: '',\r\n            });\r\n\r\n            menu.appendChild(\r\n                controls.createButton.call(this, 'settings', {\r\n                    id: `plyr-settings-toggle-${data.id}`,\r\n                    'aria-haspopup': true,\r\n                    'aria-controls': `plyr-settings-${data.id}`,\r\n                    'aria-expanded': false,\r\n                }),\r\n            );\r\n\r\n            const form = createElement('form', {\r\n                class: 'plyr__menu__container',\r\n                id: `plyr-settings-${data.id}`,\r\n                hidden: '',\r\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\r\n                role: 'tablist',\r\n                tabindex: -1,\r\n            });\r\n\r\n            const inner = createElement('div');\r\n\r\n            const home = createElement('div', {\r\n                id: `plyr-settings-${data.id}-home`,\r\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\r\n                role: 'tabpanel',\r\n            });\r\n\r\n            // Create the tab list\r\n            const tabs = createElement('ul', {\r\n                role: 'tablist',\r\n            });\r\n\r\n            // Build the tabs\r\n            this.config.settings.forEach(type => {\r\n                const tab = createElement('li', {\r\n                    role: 'tab',\r\n                    hidden: '',\r\n                });\r\n\r\n                const button = createElement(\r\n                    'button',\r\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\r\n                        type: 'button',\r\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\r\n                        id: `plyr-settings-${data.id}-${type}-tab`,\r\n                        'aria-haspopup': true,\r\n                        'aria-controls': `plyr-settings-${data.id}-${type}`,\r\n                        'aria-expanded': false,\r\n                    }),\r\n                    i18n.get(type, this.config),\r\n                );\r\n\r\n                const value = createElement('span', {\r\n                    class: this.config.classNames.menu.value,\r\n                });\r\n\r\n                // Speed contains HTML entities\r\n                value.innerHTML = data[type];\r\n\r\n                button.appendChild(value);\r\n                tab.appendChild(button);\r\n                tabs.appendChild(tab);\r\n\r\n                this.elements.settings.tabs[type] = tab;\r\n            });\r\n\r\n            home.appendChild(tabs);\r\n            inner.appendChild(home);\r\n\r\n            // Build the panes\r\n            this.config.settings.forEach(type => {\r\n                const pane = createElement('div', {\r\n                    id: `plyr-settings-${data.id}-${type}`,\r\n                    hidden: '',\r\n                    'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\r\n                    role: 'tabpanel',\r\n                    tabindex: -1,\r\n                });\r\n\r\n                const back = createElement(\r\n                    'button',\r\n                    {\r\n                        type: 'button',\r\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\r\n                        'aria-haspopup': true,\r\n                        'aria-controls': `plyr-settings-${data.id}-home`,\r\n                        'aria-expanded': false,\r\n                    },\r\n                    i18n.get(type, this.config),\r\n                );\r\n\r\n                pane.appendChild(back);\r\n\r\n                const options = createElement('ul');\r\n\r\n                pane.appendChild(options);\r\n                inner.appendChild(pane);\r\n\r\n                this.elements.settings.panes[type] = pane;\r\n            });\r\n\r\n            form.appendChild(inner);\r\n            menu.appendChild(form);\r\n            container.appendChild(menu);\r\n\r\n            this.elements.settings.form = form;\r\n            this.elements.settings.menu = menu;\r\n        }\r\n\r\n        // Picture in picture button\r\n        if (this.config.controls.includes('pip') && support.pip) {\r\n            container.appendChild(controls.createButton.call(this, 'pip'));\r\n        }\r\n\r\n        // Airplay button\r\n        if (this.config.controls.includes('airplay') && support.airplay) {\r\n            container.appendChild(controls.createButton.call(this, 'airplay'));\r\n        }\r\n\r\n        // Toggle fullscreen button\r\n        if (this.config.controls.includes('fullscreen')) {\r\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\r\n        }\r\n\r\n        // Larger overlaid play button\r\n        if (this.config.controls.includes('play-large')) {\r\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\r\n        }\r\n\r\n        this.elements.controls = container;\r\n\r\n        if (this.isHTML5) {\r\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\r\n        }\r\n\r\n        controls.setSpeedMenu.call(this);\r\n\r\n        return container;\r\n    },\r\n\r\n    // Insert controls\r\n    inject() {\r\n        // Sprite\r\n        if (this.config.loadSprite) {\r\n            const icon = controls.getIconUrl.call(this);\r\n\r\n            // Only load external sprite using AJAX\r\n            if (icon.cors) {\r\n                loadSprite(icon.url, 'sprite-plyr');\r\n            }\r\n        }\r\n\r\n        // Create a unique ID\r\n        this.id = Math.floor(Math.random() * 10000);\r\n\r\n        // Null by default\r\n        let container = null;\r\n        this.elements.controls = null;\r\n\r\n        // Set template properties\r\n        const props = {\r\n            id: this.id,\r\n            seektime: this.config.seekTime,\r\n            title: this.config.title,\r\n        };\r\n        let update = true;\r\n\r\n        if (is.string(this.config.controls) || is.element(this.config.controls)) {\r\n            // String or HTMLElement passed as the option\r\n            container = this.config.controls;\r\n        } else if (is.function(this.config.controls)) {\r\n            // A custom function to build controls\r\n            // The function can return a HTMLElement or String\r\n            container = this.config.controls.call(this, props);\r\n        } else {\r\n            // Create controls\r\n            container = controls.create.call(this, {\r\n                id: this.id,\r\n                seektime: this.config.seekTime,\r\n                speed: this.speed,\r\n                quality: this.quality,\r\n                captions: captions.getLabel.call(this),\r\n                // TODO: Looping\r\n                // loop: 'None',\r\n            });\r\n            update = false;\r\n        }\r\n\r\n        // Replace props with their value\r\n        const replace = input => {\r\n            let result = input;\r\n\r\n            Object.entries(props).forEach(([key, value]) => {\r\n                result = replaceAll(result, `{${key}}`, value);\r\n            });\r\n\r\n            return result;\r\n        };\r\n\r\n        // Update markup\r\n        if (update) {\r\n            if (is.string(this.config.controls)) {\r\n                container = replace(container);\r\n            } else if (is.element(container)) {\r\n                container.innerHTML = replace(container.innerHTML);\r\n            }\r\n        }\r\n\r\n        // Controls container\r\n        let target;\r\n\r\n        // Inject to custom location\r\n        if (is.string(this.config.selectors.controls.container)) {\r\n            target = document.querySelector(this.config.selectors.controls.container);\r\n        }\r\n\r\n        // Inject into the container by default\r\n        if (!is.element(target)) {\r\n            target = this.elements.container;\r\n        }\r\n\r\n        // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\r\n        const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\r\n        target[insertMethod]('afterbegin', container);\r\n        \r\n        // jwjcmw: inject extra controls\r\n        if (is.string(this.config.extracontrols)) {\r\n            target['insertAdjacentHTML']('afterbegin', this.config.extracontrols);\r\n        }\r\n\r\n        // Find the elements if need be\r\n        if (!is.element(this.elements.controls)) {\r\n            controls.findElements.call(this);\r\n        }\r\n\r\n        // Edge sometimes doesn't finish the paint so force a redraw\r\n        if (window.navigator.userAgent.includes('Edge')) {\r\n            repaint(target);\r\n        }\r\n\r\n        // Setup tooltips\r\n        if (this.config.tooltips.controls) {\r\n            const { classNames, selectors } = this.config;\r\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\r\n            const labels = getElements.call(this, selector);\r\n\r\n            Array.from(labels).forEach(label => {\r\n                toggleClass(label, this.config.classNames.hidden, false);\r\n                toggleClass(label, this.config.classNames.tooltip, true);\r\n            });\r\n        }\r\n    },\r\n};\r\n\r\nexport default controls;\r\n","// ==========================================================================\r\n// URL utils\r\n// ==========================================================================\r\n\r\nimport is from './is';\r\n\r\n/**\r\n * Parse a string to a URL object\r\n * @param {string} input - the URL to be parsed\r\n * @param {boolean} safe - failsafe parsing\r\n */\r\nexport function parseUrl(input, safe = true) {\r\n    let url = input;\r\n\r\n    if (safe) {\r\n        const parser = document.createElement('a');\r\n        parser.href = url;\r\n        url = parser.href;\r\n    }\r\n\r\n    try {\r\n        return new URL(url);\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n}\r\n\r\n// Convert object to URLSearchParams\r\nexport function buildUrlParams(input) {\r\n    const params = new URLSearchParams();\r\n\r\n    if (is.object(input)) {\r\n        Object.entries(input).forEach(([key, value]) => {\r\n            params.set(key, value);\r\n        });\r\n    }\r\n\r\n    return params;\r\n}\r\n","// ==========================================================================\r\n// Plyr Captions\r\n// TODO: Create as class\r\n// ==========================================================================\r\n\r\nimport controls from './controls';\r\nimport i18n from './i18n';\r\nimport support from './support';\r\nimport { dedupe } from './utils/arrays';\r\nimport browser from './utils/browser';\r\nimport {\r\n    createElement,\r\n    emptyElement,\r\n    getAttributesFromSelector,\r\n    insertAfter,\r\n    removeElement,\r\n    toggleClass,\r\n} from './utils/elements';\r\nimport { on, triggerEvent } from './utils/events';\r\nimport fetch from './utils/fetch';\r\nimport is from './utils/is';\r\nimport { getHTML } from './utils/strings';\r\nimport { parseUrl } from './utils/urls';\r\n\r\nconst captions = {\r\n    // Setup captions\r\n    setup() {\r\n        // Requires UI support\r\n        if (!this.supported.ui) {\r\n            return;\r\n        }\r\n\r\n        // Only Vimeo and HTML5 video supported at this point\r\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\r\n            // Clear menu and hide\r\n            if (\r\n                is.array(this.config.controls) &&\r\n                this.config.controls.includes('settings') &&\r\n                this.config.settings.includes('captions')\r\n            ) {\r\n                controls.setCaptionsMenu.call(this);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Inject the container\r\n        if (!is.element(this.elements.captions)) {\r\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\r\n\r\n            insertAfter(this.elements.captions, this.elements.wrapper);\r\n        }\r\n\r\n        // Fix IE captions if CORS is used\r\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\r\n        if (browser.isIE && window.URL) {\r\n            const elements = this.media.querySelectorAll('track');\r\n\r\n            Array.from(elements).forEach(track => {\r\n                const src = track.getAttribute('src');\r\n                const url = parseUrl(src);\r\n\r\n                if (\r\n                    url !== null &&\r\n                    url.hostname !== window.location.href.hostname &&\r\n                    ['http:', 'https:'].includes(url.protocol)\r\n                ) {\r\n                    fetch(src, 'blob')\r\n                        .then(blob => {\r\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\r\n                        })\r\n                        .catch(() => {\r\n                            removeElement(track);\r\n                        });\r\n                }\r\n            });\r\n        }\r\n\r\n        // Get and set initial data\r\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\r\n        // * languages: Array of user's browser languages.\r\n        // * language:  The language preferred by user settings or config\r\n        // * active:    The state preferred by user settings or config\r\n        // * toggled:   The real captions state\r\n\r\n        const languages = dedupe(\r\n            Array.from(navigator.languages || navigator.language || navigator.userLanguage).map(language => language.split('-')[0]),\r\n        );\r\n\r\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\r\n\r\n        // Use first browser language when language is 'auto'\r\n        if (language === 'auto') {\r\n            [language] = languages;\r\n        }\r\n\r\n        let active = this.storage.get('captions');\r\n        if (!is.boolean(active)) {\r\n            ({ active } = this.config.captions);\r\n        }\r\n\r\n        Object.assign(this.captions, {\r\n            toggled: false,\r\n            active,\r\n            language,\r\n            languages,\r\n        });\r\n\r\n        // Watch changes to textTracks and update captions menu\r\n        if (this.isHTML5) {\r\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\r\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\r\n        }\r\n\r\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\r\n        setTimeout(captions.update.bind(this), 0);\r\n    },\r\n\r\n    // Update available language options in settings based on tracks\r\n    update() {\r\n        const tracks = captions.getTracks.call(this, true);\r\n        // Get the wanted language\r\n        const { active, language, meta, currentTrackNode } = this.captions;\r\n        const languageExists = Boolean(tracks.find(track => track.language === language));\r\n\r\n        // Handle tracks (add event listener and \"pseudo\"-default)\r\n        if (this.isHTML5 && this.isVideo) {\r\n            tracks.filter(track => !meta.get(track)).forEach(track => {\r\n                this.debug.log('Track added', track);\r\n                // Attempt to store if the original dom element was \"default\"\r\n                meta.set(track, {\r\n                    default: track.mode === 'showing',\r\n                });\r\n\r\n                // Turn off native caption rendering to avoid double captions\r\n                track.mode = 'hidden';\r\n\r\n                // Add event listener for cue changes\r\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\r\n            });\r\n        }\r\n\r\n        // Update language first time it matches, or if the previous matching track was removed\r\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\r\n            captions.setLanguage.call(this, language);\r\n            captions.toggle.call(this, active && languageExists);\r\n        }\r\n\r\n        // Enable or disable captions based on track length\r\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\r\n\r\n        // Update available languages in list\r\n        if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\r\n            controls.setCaptionsMenu.call(this);\r\n        }\r\n    },\r\n\r\n    // Toggle captions display\r\n    // Used internally for the toggleCaptions method, with the passive option forced to false\r\n    toggle(input, passive = true) {\r\n        // If there's no full support\r\n        if (!this.supported.ui) {\r\n            return;\r\n        }\r\n\r\n        const { toggled } = this.captions; // Current state\r\n        const activeClass = this.config.classNames.captions.active;\r\n\r\n        // Get the next state\r\n        // If the method is called without parameter, toggle based on current value\r\n        const active = is.nullOrUndefined(input) ? !toggled : input;\r\n\r\n        // Update state and trigger event\r\n        if (active !== toggled) {\r\n            // When passive, don't override user preferences\r\n            if (!passive) {\r\n                this.captions.active = active;\r\n                this.storage.set({ captions: active });\r\n            }\r\n\r\n            // Force language if the call isn't passive and there is no matching language to toggle to\r\n            if (!this.language && active && !passive) {\r\n                const tracks = captions.getTracks.call(this);\r\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\r\n\r\n                // Override user preferences to avoid switching languages if a matching track is added\r\n                this.captions.language = track.language;\r\n\r\n                // Set caption, but don't store in localStorage as user preference\r\n                captions.set.call(this, tracks.indexOf(track));\r\n                return;\r\n            }\r\n\r\n            // Toggle button if it's enabled\r\n            if (this.elements.buttons.captions) {\r\n                this.elements.buttons.captions.pressed = active;\r\n            }\r\n\r\n            // Add class hook\r\n            toggleClass(this.elements.container, activeClass, active);\r\n\r\n            this.captions.toggled = active;\r\n\r\n            // Update settings menu\r\n            controls.updateSetting.call(this, 'captions');\r\n\r\n            // Trigger event (not used internally)\r\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\r\n        }\r\n    },\r\n\r\n    // Set captions by track index\r\n    // Used internally for the currentTrack setter with the passive option forced to false\r\n    set(index, passive = true) {\r\n        const tracks = captions.getTracks.call(this);\r\n\r\n        // Disable captions if setting to -1\r\n        if (index === -1) {\r\n            captions.toggle.call(this, false, passive);\r\n            return;\r\n        }\r\n\r\n        if (!is.number(index)) {\r\n            this.debug.warn('Invalid caption argument', index);\r\n            return;\r\n        }\r\n\r\n        if (!(index in tracks)) {\r\n            this.debug.warn('Track not found', index);\r\n            return;\r\n        }\r\n\r\n        if (this.captions.currentTrack !== index) {\r\n            this.captions.currentTrack = index;\r\n            const track = tracks[index];\r\n            const { language } = track || {};\r\n\r\n            // Store reference to node for invalidation on remove\r\n            this.captions.currentTrackNode = track;\r\n\r\n            // Update settings menu\r\n            controls.updateSetting.call(this, 'captions');\r\n\r\n            // When passive, don't override user preferences\r\n            if (!passive) {\r\n                this.captions.language = language;\r\n                this.storage.set({ language });\r\n            }\r\n\r\n            // Handle Vimeo captions\r\n            if (this.isVimeo) {\r\n                this.embed.enableTextTrack(language);\r\n            }\r\n\r\n            // Trigger event\r\n            triggerEvent.call(this, this.media, 'languagechange');\r\n        }\r\n\r\n        // Show captions\r\n        captions.toggle.call(this, true, passive);\r\n\r\n        if (this.isHTML5 && this.isVideo) {\r\n            // If we change the active track while a cue is already displayed we need to update it\r\n            captions.updateCues.call(this);\r\n        }\r\n    },\r\n\r\n    // Set captions by language\r\n    // Used internally for the language setter with the passive option forced to false\r\n    setLanguage(input, passive = true) {\r\n        if (!is.string(input)) {\r\n            this.debug.warn('Invalid language argument', input);\r\n            return;\r\n        }\r\n        // Normalize\r\n        const language = input.toLowerCase();\r\n        this.captions.language = language;\r\n\r\n        // Set currentTrack\r\n        const tracks = captions.getTracks.call(this);\r\n        const track = captions.findTrack.call(this, [language]);\r\n        captions.set.call(this, tracks.indexOf(track), passive);\r\n    },\r\n\r\n    // Get current valid caption tracks\r\n    // If update is false it will also ignore tracks without metadata\r\n    // This is used to \"freeze\" the language options when captions.update is false\r\n    getTracks(update = false) {\r\n        // Handle media or textTracks missing or null\r\n        const tracks = Array.from((this.media || {}).textTracks || []);\r\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\r\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\r\n        return tracks\r\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\r\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\r\n    },\r\n\r\n    // Match tracks based on languages and get the first\r\n    findTrack(languages, force = false) {\r\n        const tracks = captions.getTracks.call(this);\r\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\r\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\r\n        let track;\r\n        languages.every(language => {\r\n            track = sorted.find(track => track.language === language);\r\n            return !track; // Break iteration if there is a match\r\n        });\r\n        // If no match is found but is required, get first\r\n        return track || (force ? sorted[0] : undefined);\r\n    },\r\n\r\n    // Get the current track\r\n    getCurrentTrack() {\r\n        return captions.getTracks.call(this)[this.currentTrack];\r\n    },\r\n\r\n    // Get UI label for track\r\n    getLabel(track) {\r\n        let currentTrack = track;\r\n\r\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\r\n            currentTrack = captions.getCurrentTrack.call(this);\r\n        }\r\n\r\n        if (is.track(currentTrack)) {\r\n            if (!is.empty(currentTrack.label)) {\r\n                return currentTrack.label;\r\n            }\r\n\r\n            if (!is.empty(currentTrack.language)) {\r\n                return track.language.toUpperCase();\r\n            }\r\n\r\n            return i18n.get('enabled', this.config);\r\n        }\r\n\r\n        return i18n.get('disabled', this.config);\r\n    },\r\n\r\n    // Update captions using current track's active cues\r\n    // Also optional array argument in case there isn't any track (ex: vimeo)\r\n    updateCues(input) {\r\n        // Requires UI\r\n        if (!this.supported.ui) {\r\n            return;\r\n        }\r\n\r\n        if (!is.element(this.elements.captions)) {\r\n            this.debug.warn('No captions element to render to');\r\n            return;\r\n        }\r\n\r\n        // Only accept array or empty input\r\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\r\n            this.debug.warn('updateCues: Invalid input', input);\r\n            return;\r\n        }\r\n\r\n        let cues = input;\r\n\r\n        // Get cues from track\r\n        if (!cues) {\r\n            const track = captions.getCurrentTrack.call(this);\r\n            cues = Array.from((track || {}).activeCues || [])\r\n                .map(cue => cue.getCueAsHTML())\r\n                .map(getHTML);\r\n        }\r\n\r\n        // Set new caption text\r\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\r\n        const changed = content !== this.elements.captions.innerHTML;\r\n\r\n        if (changed) {\r\n            // Empty the container and create a new child element\r\n            emptyElement(this.elements.captions);\r\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\r\n            caption.innerHTML = content;\r\n            this.elements.captions.appendChild(caption);\r\n\r\n            // Trigger event\r\n            triggerEvent.call(this, this.media, 'cuechange');\r\n        }\r\n    },\r\n};\r\n\r\nexport default captions;\r\n","// ==========================================================================\r\n// Plyr default config\r\n// ==========================================================================\r\n\r\nconst defaults = {\r\n    // Disable\r\n    enabled: true,\r\n\r\n    // Custom media title\r\n    title: '',\r\n\r\n    // Logging to console\r\n    debug: false,\r\n\r\n    // Auto play (if supported)\r\n    autoplay: false,\r\n\r\n    // Only allow one media playing at once (vimeo only)\r\n    autopause: true,\r\n\r\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\r\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\r\n    playsinline: true,\r\n\r\n    // Default time to skip when rewind/fast forward\r\n    seekTime: 10,\r\n\r\n    // Default volume\r\n    volume: 1,\r\n    muted: false,\r\n\r\n    // Pass a custom duration\r\n    duration: null,\r\n\r\n    // Display the media duration on load in the current time position\r\n    // If you have opted to display both duration and currentTime, this is ignored\r\n    displayDuration: true,\r\n\r\n    // Invert the current time to be a countdown\r\n    invertTime: true,\r\n\r\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\r\n    toggleInvert: true,\r\n\r\n    // Aspect ratio (for embeds)\r\n    ratio: '16:9',\r\n\r\n    // Click video container to play/pause\r\n    clickToPlay: true,\r\n\r\n    // Auto hide the controls\r\n    hideControls: true,\r\n\r\n    // Reset to start when playback ended\r\n    resetOnEnd: false,\r\n\r\n    // Disable the standard context menu\r\n    disableContextMenu: true,\r\n\r\n    // Sprite (for icons)\r\n    loadSprite: true,\r\n    iconPrefix: 'plyr',\r\n    iconUrl: 'https://cdn.plyr.io/3.3.12/plyr.svg',\r\n\r\n    // Blank video (used to prevent errors on source change)\r\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\r\n\r\n    // Quality default\r\n    quality: {\r\n        default: 576,\r\n        options: [\r\n            4320,\r\n            2880,\r\n            2160,\r\n            1440,\r\n            1080,\r\n            720,\r\n            576,\r\n            480,\r\n            360,\r\n            240,\r\n            'default', // YouTube's \"auto\"\r\n        ],\r\n    },\r\n\r\n    // Set loops\r\n    loop: {\r\n        active: false,\r\n        // start: null,\r\n        // end: null,\r\n    },\r\n\r\n    // Speed default and options to display\r\n    speed: {\r\n        selected: 1,\r\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\r\n    },\r\n\r\n    // Keyboard shortcut settings\r\n    keyboard: {\r\n        focused: true,\r\n        global: false,\r\n    },\r\n\r\n    // Display tooltips\r\n    tooltips: {\r\n        controls: false,\r\n        seek: true,\r\n    },\r\n\r\n    // Captions settings\r\n    captions: {\r\n        active: false,\r\n        language: 'auto',\r\n        // Listen to new tracks added after Plyr is initialized.\r\n        // This is needed for streaming captions, but may result in unselectable options\r\n        update: false,\r\n    },\r\n\r\n    // Fullscreen settings\r\n    fullscreen: {\r\n        enabled: true, // Allow fullscreen?\r\n        fallback: true, // Fallback for vintage browsers\r\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\r\n    },\r\n\r\n    // Local storage\r\n    storage: {\r\n        enabled: true,\r\n        key: 'plyr',\r\n    },\r\n\r\n    // Default controls\r\n    controls: [\r\n        'play-large',\r\n        // 'restart',\r\n        // 'rewind',\r\n        'play',\r\n        // 'fast-forward',\r\n        'progress',\r\n        'current-time',\r\n        'mute',\r\n        'volume',\r\n        'captions',\r\n        'settings',\r\n        'pip',\r\n        'airplay',\r\n        'fullscreen',\r\n    ],\r\n    \r\n    extracontrols: null,\r\n\r\n    settings: ['captions', 'quality', 'speed'],\r\n\r\n    // Localisation\r\n    i18n: {\r\n        restart: 'Restart',\r\n        rewind: 'Rewind {seektime}s',\r\n        play: 'Play',\r\n        pause: 'Pause',\r\n        fastForward: 'Forward {seektime}s',\r\n        seek: 'Seek',\r\n        seekLabel: '{currentTime} of {duration}',\r\n        played: 'Played',\r\n        buffered: 'Buffered',\r\n        currentTime: 'Current time',\r\n        duration: 'Duration',\r\n        volume: 'Volume',\r\n        mute: 'Mute',\r\n        unmute: 'Unmute',\r\n        enableCaptions: 'Enable captions',\r\n        disableCaptions: 'Disable captions',\r\n        enterFullscreen: 'Enter fullscreen',\r\n        exitFullscreen: 'Exit fullscreen',\r\n        frameTitle: 'Player for {title}',\r\n        captions: 'Captions',\r\n        settings: 'Settings',\r\n        menuBack: 'Go back to previous menu',\r\n        speed: 'Speed',\r\n        normal: 'Normal',\r\n        quality: 'Quality',\r\n        loop: 'Loop',\r\n        start: 'Start',\r\n        end: 'End',\r\n        all: 'All',\r\n        reset: 'Reset',\r\n        disabled: 'Disabled',\r\n        enabled: 'Enabled',\r\n        advertisement: 'Ad',\r\n        qualityBadge: {\r\n            2160: '4K',\r\n            1440: 'HD',\r\n            1080: 'HD',\r\n            720: 'HD',\r\n            576: 'SD',\r\n            480: 'SD',\r\n        },\r\n    },\r\n\r\n    // URLs\r\n    urls: {\r\n        vimeo: {\r\n            sdk: 'https://player.vimeo.com/api/player.js',\r\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\r\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\r\n        },\r\n        youtube: {\r\n            sdk: 'https://www.youtube.com/iframe_api',\r\n            api:\r\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\r\n        },\r\n        googleIMA: {\r\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\r\n        },\r\n    },\r\n\r\n    // Custom control listeners\r\n    listeners: {\r\n        seek: null,\r\n        play: null,\r\n        pause: null,\r\n        restart: null,\r\n        rewind: null,\r\n        fastForward: null,\r\n        mute: null,\r\n        volume: null,\r\n        captions: null,\r\n        fullscreen: null,\r\n        pip: null,\r\n        airplay: null,\r\n        speed: null,\r\n        quality: null,\r\n        loop: null,\r\n        language: null,\r\n    },\r\n\r\n    // Events to watch and bubble\r\n    events: [\r\n        // Events to watch on HTML5 media elements and bubble\r\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\r\n        'ended',\r\n        'progress',\r\n        'stalled',\r\n        'playing',\r\n        'waiting',\r\n        'canplay',\r\n        'canplaythrough',\r\n        'loadstart',\r\n        'loadeddata',\r\n        'loadedmetadata',\r\n        'timeupdate',\r\n        'volumechange',\r\n        'play',\r\n        'pause',\r\n        'error',\r\n        'seeking',\r\n        'seeked',\r\n        'emptied',\r\n        'ratechange',\r\n        'cuechange',\r\n\r\n        // Custom events\r\n        'enterfullscreen',\r\n        'exitfullscreen',\r\n        'captionsenabled',\r\n        'captionsdisabled',\r\n        'languagechange',\r\n        'controlshidden',\r\n        'controlsshown',\r\n        'ready',\r\n\r\n        // YouTube\r\n        'statechange',\r\n        'qualitychange',\r\n        'qualityrequested',\r\n\r\n        // Ads\r\n        'adsloaded',\r\n        'adscontentpause',\r\n        'adscontentresume',\r\n        'adstarted',\r\n        'adsmidpoint',\r\n        'adscomplete',\r\n        'adsallcomplete',\r\n        'adsimpression',\r\n        'adsclick',\r\n    ],\r\n\r\n    // Selectors\r\n    // Change these to match your template if using custom HTML\r\n    selectors: {\r\n        editable: 'input, textarea, select, [contenteditable]',\r\n        container: '.plyr',\r\n        controls: {\r\n            container: null,\r\n            wrapper: '.plyr__controls',\r\n        },\r\n        labels: '[data-plyr]',\r\n        buttons: {\r\n            play: '[data-plyr=\"play\"]',\r\n            pause: '[data-plyr=\"pause\"]',\r\n            restart: '[data-plyr=\"restart\"]',\r\n            rewind: '[data-plyr=\"rewind\"]',\r\n            fastForward: '[data-plyr=\"fast-forward\"]',\r\n            mute: '[data-plyr=\"mute\"]',\r\n            captions: '[data-plyr=\"captions\"]',\r\n            fullscreen: '[data-plyr=\"fullscreen\"]',\r\n            pip: '[data-plyr=\"pip\"]',\r\n            airplay: '[data-plyr=\"airplay\"]',\r\n            settings: '[data-plyr=\"settings\"]',\r\n            loop: '[data-plyr=\"loop\"]',\r\n        },\r\n        inputs: {\r\n            seek: '[data-plyr=\"seek\"]',\r\n            volume: '[data-plyr=\"volume\"]',\r\n            speed: '[data-plyr=\"speed\"]',\r\n            language: '[data-plyr=\"language\"]',\r\n            quality: '[data-plyr=\"quality\"]',\r\n        },\r\n        display: {\r\n            currentTime: '.plyr__time--current',\r\n            duration: '.plyr__time--duration',\r\n            buffer: '.plyr__progress__buffer',\r\n            loop: '.plyr__progress__loop', // Used later\r\n            volume: '.plyr__volume--display',\r\n        },\r\n        progress: '.plyr__progress',\r\n        captions: '.plyr__captions',\r\n        caption: '.plyr__caption',\r\n        menu: {\r\n            quality: '.js-plyr__menu__list--quality',\r\n        },\r\n    },\r\n\r\n    // Class hooks added to the player in different states\r\n    classNames: {\r\n        type: 'plyr--{0}',\r\n        provider: 'plyr--{0}',\r\n        video: 'plyr__video-wrapper',\r\n        embed: 'plyr__video-embed',\r\n        embedContainer: 'plyr__video-embed__container',\r\n        poster: 'plyr__poster',\r\n        posterEnabled: 'plyr__poster-enabled',\r\n        ads: 'plyr__ads',\r\n        control: 'plyr__control',\r\n        controlPressed: 'plyr__control--pressed',\r\n        playing: 'plyr--playing',\r\n        paused: 'plyr--paused',\r\n        stopped: 'plyr--stopped',\r\n        loading: 'plyr--loading',\r\n        hover: 'plyr--hover',\r\n        tooltip: 'plyr__tooltip',\r\n        cues: 'plyr__cues',\r\n        hidden: 'plyr__sr-only',\r\n        hideControls: 'plyr--hide-controls',\r\n        isIos: 'plyr--is-ios',\r\n        isTouch: 'plyr--is-touch',\r\n        uiSupported: 'plyr--full-ui',\r\n        noTransition: 'plyr--no-transition',\r\n        menu: {\r\n            value: 'plyr__menu__value',\r\n            badge: 'plyr__badge',\r\n            open: 'plyr--menu-open',\r\n        },\r\n        captions: {\r\n            enabled: 'plyr--captions-enabled',\r\n            active: 'plyr--captions-active',\r\n        },\r\n        fullscreen: {\r\n            enabled: 'plyr--fullscreen-enabled',\r\n            fallback: 'plyr--fullscreen-fallback',\r\n        },\r\n        pip: {\r\n            supported: 'plyr--pip-supported',\r\n            active: 'plyr--pip-active',\r\n        },\r\n        airplay: {\r\n            supported: 'plyr--airplay-supported',\r\n            active: 'plyr--airplay-active',\r\n        },\r\n        tabFocus: 'plyr__tab-focus',\r\n    },\r\n\r\n    // Embed attributes\r\n    attributes: {\r\n        embed: {\r\n            provider: 'data-plyr-provider',\r\n            id: 'data-plyr-embed-id',\r\n        },\r\n    },\r\n\r\n    // API keys\r\n    keys: {\r\n        google: null,\r\n    },\r\n\r\n    // Advertisements plugin\r\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\r\n    ads: {\r\n        enabled: false,\r\n        publisherId: '',\r\n    },\r\n};\r\n\r\nexport default defaults;\r\n","// ==========================================================================\r\n// Plyr supported types and providers\r\n// ==========================================================================\r\n\r\nexport const providers = {\r\n    html5: 'html5',\r\n    youtube: 'youtube',\r\n    vimeo: 'vimeo',\r\n};\r\n\r\nexport const types = {\r\n    audio: 'audio',\r\n    video: 'video',\r\n};\r\n\r\n/**\r\n * Get provider by URL\r\n * @param {string} url\r\n */\r\nexport function getProviderByUrl(url) {\r\n    // YouTube\r\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\r\n        return providers.youtube;\r\n    }\r\n\r\n    // Vimeo\r\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\r\n        return providers.vimeo;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default { providers, types };\r\n","// ==========================================================================\r\n// Console wrapper\r\n// ==========================================================================\r\n\r\nconst noop = () => {};\r\n\r\nexport default class Console {\r\n    constructor(enabled = false) {\r\n        this.enabled = window.console && enabled;\r\n\r\n        if (this.enabled) {\r\n            this.log('Debugging enabled');\r\n        }\r\n    }\r\n\r\n    get log() {\r\n        // eslint-disable-next-line no-console\r\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\r\n    }\r\n\r\n    get warn() {\r\n        // eslint-disable-next-line no-console\r\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\r\n    }\r\n\r\n    get error() {\r\n        // eslint-disable-next-line no-console\r\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\r\n    }\r\n}\r\n","// ==========================================================================\r\n// Fullscreen wrapper\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\r\n// ==========================================================================\r\n\r\nimport browser from './utils/browser';\r\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\r\nimport { on, triggerEvent } from './utils/events';\r\nimport is from './utils/is';\r\n\r\nfunction onChange() {\r\n    if (!this.enabled) {\r\n        return;\r\n    }\r\n\r\n    // Update toggle button\r\n    const button = this.player.elements.buttons.fullscreen;\r\n    if (is.element(button)) {\r\n        button.pressed = this.active;\r\n    }\r\n\r\n    // Trigger an event\r\n    triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\r\n\r\n    // Trap focus in container\r\n    if (!browser.isIos) {\r\n        trapFocus.call(this.player, this.target, this.active);\r\n    }\r\n}\r\n\r\nfunction toggleFallback(toggle = false) {\r\n    // Store or restore scroll position\r\n    if (toggle) {\r\n        this.scrollPosition = {\r\n            x: window.scrollX || 0,\r\n            y: window.scrollY || 0,\r\n        };\r\n    } else {\r\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\r\n    }\r\n\r\n    // Toggle scroll\r\n    document.body.style.overflow = toggle ? 'hidden' : '';\r\n\r\n    // Toggle class hook\r\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\r\n\r\n    // Toggle button and fire events\r\n    onChange.call(this);\r\n}\r\n\r\nclass Fullscreen {\r\n    constructor(player) {\r\n        // Keep reference to parent\r\n        this.player = player;\r\n\r\n        // Get prefix\r\n        this.prefix = Fullscreen.prefix;\r\n        this.property = Fullscreen.property;\r\n\r\n        // Scroll position\r\n        this.scrollPosition = { x: 0, y: 0 };\r\n\r\n        // Register event listeners\r\n        // Handle event (incase user presses escape etc)\r\n        on.call(\r\n            this.player,\r\n            document,\r\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\r\n            () => {\r\n                // TODO: Filter for target??\r\n                onChange.call(this);\r\n            },\r\n        );\r\n\r\n        // Fullscreen toggle on double click\r\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\r\n            // Ignore double click in controls\r\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n        });\r\n\r\n        // Update the UI\r\n        this.update();\r\n    }\r\n\r\n    // Determine if native supported\r\n    static get native() {\r\n        return !!(\r\n            document.fullscreenEnabled ||\r\n            document.webkitFullscreenEnabled ||\r\n            document.mozFullScreenEnabled ||\r\n            document.msFullscreenEnabled\r\n        );\r\n    }\r\n\r\n    // Get the prefix for handlers\r\n    static get prefix() {\r\n        // No prefix\r\n        if (is.function(document.exitFullscreen)) {\r\n            return '';\r\n        }\r\n\r\n        // Check for fullscreen support by vendor prefix\r\n        let value = '';\r\n        const prefixes = ['webkit', 'moz', 'ms'];\r\n\r\n        prefixes.some(pre => {\r\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\r\n                value = pre;\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return value;\r\n    }\r\n\r\n    static get property() {\r\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\r\n    }\r\n\r\n    // Determine if fullscreen is enabled\r\n    get enabled() {\r\n        return (\r\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\r\n            this.player.config.fullscreen.enabled &&\r\n            this.player.supported.ui &&\r\n            this.player.isVideo\r\n        );\r\n    }\r\n\r\n    // Get active state\r\n    get active() {\r\n        if (!this.enabled) {\r\n            return false;\r\n        }\r\n\r\n        // Fallback using classname\r\n        if (!Fullscreen.native) {\r\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\r\n        }\r\n\r\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\r\n\r\n        return element === this.target;\r\n    }\r\n\r\n    // Get target element\r\n    get target() {\r\n        return browser.isIos && this.player.config.fullscreen.iosNative\r\n            ? this.player.media\r\n            : this.player.elements.container;\r\n    }\r\n\r\n    // Update UI\r\n    update() {\r\n        if (this.enabled) {\r\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\r\n        } else {\r\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\r\n        }\r\n\r\n        // Add styling hook to show button\r\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\r\n    }\r\n\r\n    // Make an element fullscreen\r\n    enter() {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        // iOS native fullscreen doesn't need the request step\r\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\r\n            if (this.player.playing) {\r\n                this.target.webkitEnterFullscreen();\r\n            }\r\n        } else if (!Fullscreen.native) {\r\n            toggleFallback.call(this, true);\r\n        } else if (!this.prefix) {\r\n            this.target.requestFullscreen();\r\n        } else if (!is.empty(this.prefix)) {\r\n            this.target[`${this.prefix}Request${this.property}`]();\r\n        }\r\n    }\r\n\r\n    // Bail from fullscreen\r\n    exit() {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        // iOS native fullscreen\r\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\r\n            this.target.webkitExitFullscreen();\r\n            this.player.play();\r\n        } else if (!Fullscreen.native) {\r\n            toggleFallback.call(this, false);\r\n        } else if (!this.prefix) {\r\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\r\n        } else if (!is.empty(this.prefix)) {\r\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\r\n            document[`${this.prefix}${action}${this.property}`]();\r\n        }\r\n    }\r\n\r\n    // Toggle state\r\n    toggle() {\r\n        if (!this.active) {\r\n            this.enter();\r\n        } else {\r\n            this.exit();\r\n        }\r\n    }\r\n}\r\n\r\nexport default Fullscreen;\r\n","// ==========================================================================\r\n// Load image avoiding xhr/fetch CORS issues\r\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\r\n// By default it checks if it is at least 1px, but you can add a second argument to change this\r\n// ==========================================================================\r\n\r\nexport default function loadImage(src, minWidth = 1) {\r\n    return new Promise((resolve, reject) => {\r\n        const image = new Image();\r\n\r\n        const handler = () => {\r\n            delete image.onload;\r\n            delete image.onerror;\r\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\r\n        };\r\n\r\n        Object.assign(image, { onload: handler, onerror: handler, src });\r\n    });\r\n}\r\n","// ==========================================================================\r\n// Plyr UI\r\n// ==========================================================================\r\n\r\nimport captions from './captions';\r\nimport controls from './controls';\r\nimport i18n from './i18n';\r\nimport support from './support';\r\nimport browser from './utils/browser';\r\nimport { getElement, toggleClass } from './utils/elements';\r\nimport { ready, triggerEvent } from './utils/events';\r\nimport is from './utils/is';\r\nimport loadImage from './utils/loadImage';\r\n\r\nconst ui = {\r\n    addStyleHook() {\r\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\r\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\r\n    },\r\n\r\n    // Toggle native HTML5 media controls\r\n    toggleNativeControls(toggle = false) {\r\n        if (toggle && this.isHTML5) {\r\n            this.media.setAttribute('controls', '');\r\n        } else {\r\n            this.media.removeAttribute('controls');\r\n        }\r\n    },\r\n\r\n    // Setup the UI\r\n    build() {\r\n        // Re-attach media element listeners\r\n        // TODO: Use event bubbling?\r\n        this.listeners.media();\r\n\r\n        // Don't setup interface if no support\r\n        if (!this.supported.ui) {\r\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\r\n\r\n            // Restore native controls\r\n            ui.toggleNativeControls.call(this, true);\r\n\r\n            // Bail\r\n            return;\r\n        }\r\n\r\n        // Inject custom controls if not present\r\n        if (!is.element(this.elements.controls)) {\r\n            // Inject custom controls\r\n            controls.inject.call(this);\r\n\r\n            // Re-attach control listeners\r\n            this.listeners.controls();\r\n        }\r\n\r\n        // Remove native controls\r\n        ui.toggleNativeControls.call(this);\r\n\r\n        // Setup captions for HTML5\r\n        if (this.isHTML5) {\r\n            captions.setup.call(this);\r\n        }\r\n\r\n        // Reset volume\r\n        this.volume = null;\r\n\r\n        // Reset mute state\r\n        this.muted = null;\r\n\r\n        // Reset speed\r\n        this.speed = null;\r\n\r\n        // Reset loop state\r\n        this.loop = null;\r\n\r\n        // Reset quality setting\r\n        this.quality = null;\r\n\r\n        // Reset volume display\r\n        controls.updateVolume.call(this);\r\n\r\n        // Reset time display\r\n        controls.timeUpdate.call(this);\r\n\r\n        // Update the UI\r\n        ui.checkPlaying.call(this);\r\n\r\n        // Check for picture-in-picture support\r\n        toggleClass(\r\n            this.elements.container,\r\n            this.config.classNames.pip.supported,\r\n            support.pip && this.isHTML5 && this.isVideo,\r\n        );\r\n\r\n        // Check for airplay support\r\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\r\n\r\n        // Add iOS class\r\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\r\n\r\n        // Add touch class\r\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\r\n\r\n        // Ready for API calls\r\n        this.ready = true;\r\n\r\n        // Ready event at end of execution stack\r\n        setTimeout(() => {\r\n            triggerEvent.call(this, this.media, 'ready');\r\n        }, 0);\r\n\r\n        // Set the title\r\n        ui.setTitle.call(this);\r\n\r\n        // Assure the poster image is set, if the property was added before the element was created\r\n        if (this.poster) {\r\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\r\n        }\r\n\r\n        // Manually set the duration if user has overridden it.\r\n        // The event listeners for it doesn't get called if preload is disabled (#701)\r\n        if (this.config.duration) {\r\n            controls.durationUpdate.call(this);\r\n        }\r\n    },\r\n\r\n    // Setup aria attribute for play and iframe title\r\n    setTitle() {\r\n        // Find the current text\r\n        let label = i18n.get('play', this.config);\r\n\r\n        // If there's a media title set, use that for the label\r\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\r\n            label += `, ${this.config.title}`;\r\n        }\r\n\r\n        // If there's a play button, set label\r\n        Array.from(this.elements.buttons.play || []).forEach(button => {\r\n            button.setAttribute('aria-label', label);\r\n        });\r\n\r\n        // Set iframe title\r\n        // https://github.com/sampotts/plyr/issues/124\r\n        if (this.isEmbed) {\r\n            const iframe = getElement.call(this, 'iframe');\r\n\r\n            if (!is.element(iframe)) {\r\n                return;\r\n            }\r\n\r\n            // Default to media type\r\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\r\n            const format = i18n.get('frameTitle', this.config);\r\n\r\n            iframe.setAttribute('title', format.replace('{title}', title));\r\n        }\r\n    },\r\n\r\n    // Toggle poster\r\n    togglePoster(enable) {\r\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\r\n    },\r\n\r\n    // Set the poster image (async)\r\n    // Used internally for the poster setter, with the passive option forced to false\r\n    setPoster(poster, passive = true) {\r\n        // Don't override if call is passive\r\n        if (passive && this.poster) {\r\n            return Promise.reject(new Error('Poster already set'));\r\n        }\r\n\r\n        // Set property synchronously to respect the call order\r\n        this.media.setAttribute('poster', poster);\r\n\r\n        // Wait until ui is ready\r\n        return (\r\n            ready\r\n                .call(this)\r\n                // Load image\r\n                .then(() => loadImage(poster))\r\n                .catch(err => {\r\n                    // Hide poster on error unless it's been set by another call\r\n                    if (poster === this.poster) {\r\n                        ui.togglePoster.call(this, false);\r\n                    }\r\n                    // Rethrow\r\n                    throw err;\r\n                })\r\n                .then(() => {\r\n                    // Prevent race conditions\r\n                    if (poster !== this.poster) {\r\n                        throw new Error('setPoster cancelled by later call to setPoster');\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    Object.assign(this.elements.poster.style, {\r\n                        backgroundImage: `url('${poster}')`,\r\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\r\n                        backgroundSize: '',\r\n                    });\r\n                    ui.togglePoster.call(this, true);\r\n                    return poster;\r\n                })\r\n        );\r\n    },\r\n\r\n    // Check playing state\r\n    checkPlaying(event) {\r\n        // Class hooks\r\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\r\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\r\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\r\n\r\n        // Set state\r\n        Array.from(this.elements.buttons.play || []).forEach(target => {\r\n            target.pressed = this.playing;\r\n        });\r\n\r\n        // Only update controls on non timeupdate events\r\n        if (is.event(event) && event.type === 'timeupdate') {\r\n            return;\r\n        }\r\n\r\n        // Toggle controls\r\n        ui.toggleControls.call(this);\r\n    },\r\n\r\n    // Check if media is loading\r\n    checkLoading(event) {\r\n        this.loading = ['stalled', 'waiting'].includes(event.type);\r\n\r\n        // Clear timer\r\n        clearTimeout(this.timers.loading);\r\n\r\n        // Timer to prevent flicker when seeking\r\n        this.timers.loading = setTimeout(() => {\r\n            // Update progress bar loading class state\r\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\r\n\r\n            // Update controls visibility\r\n            ui.toggleControls.call(this);\r\n        }, this.loading ? 250 : 0);\r\n    },\r\n\r\n    // Toggle controls based on state and `force` argument\r\n    toggleControls(force) {\r\n        const { controls } = this.elements;\r\n\r\n        if (controls && this.config.hideControls) {\r\n            // Show controls if force, loading, paused, or button interaction, otherwise hide\r\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover));\r\n        }\r\n    },\r\n};\r\n\r\nexport default ui;\r\n","// ==========================================================================\r\n// Plyr Event Listeners\r\n// ==========================================================================\r\n\r\nimport controls from './controls';\r\nimport ui from './ui';\r\nimport browser from './utils/browser';\r\nimport { getElement, getElements, getFocusElement, matches, toggleClass, toggleHidden } from './utils/elements';\r\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\r\nimport is from './utils/is';\r\n\r\nclass Listeners {\r\n    constructor(player) {\r\n        this.player = player;\r\n        this.lastKey = null;\r\n\r\n        this.handleKey = this.handleKey.bind(this);\r\n        this.toggleMenu = this.toggleMenu.bind(this);\r\n        this.firstTouch = this.firstTouch.bind(this);\r\n    }\r\n\r\n    // Handle key presses\r\n    handleKey(event) {\r\n        const code = event.keyCode ? event.keyCode : event.which;\r\n        const pressed = event.type === 'keydown';\r\n        const repeat = pressed && code === this.lastKey;\r\n\r\n        // Bail if a modifier key is set\r\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r\n            return;\r\n        }\r\n\r\n        // If the event is bubbled from the media element\r\n        // Firefox doesn't get the keycode for whatever reason\r\n        if (!is.number(code)) {\r\n            return;\r\n        }\r\n\r\n        // Seek by the number keys\r\n        const seekByKey = () => {\r\n            // Divide the max duration into 10th's and times by the number value\r\n            this.player.currentTime = this.player.duration / 10 * (code - 48);\r\n        };\r\n\r\n        // Handle the key on keydown\r\n        // Reset on keyup\r\n        if (pressed) {\r\n            // Which keycodes should we prevent default\r\n            const preventDefault = [32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\r\n\r\n            // Check focused element\r\n            // and if the focused element is not editable (e.g. text input)\r\n            // and any that accept key input http://webaim.org/techniques/keyboard/\r\n            const focused = getFocusElement();\r\n            if (\r\n                is.element(focused) &&\r\n                (focused !== this.player.elements.inputs.seek &&\r\n                    matches(focused, this.player.config.selectors.editable))\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\r\n            if (preventDefault.includes(code)) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }\r\n\r\n            switch (code) {\r\n                case 48:\r\n                case 49:\r\n                case 50:\r\n                case 51:\r\n                case 52:\r\n                case 53:\r\n                case 54:\r\n                case 55:\r\n                case 56:\r\n                case 57:\r\n                    // 0-9\r\n                    if (!repeat) {\r\n                        seekByKey();\r\n                    }\r\n                    break;\r\n\r\n                case 32:\r\n                case 75:\r\n                    // Space and K key\r\n                    if (!repeat) {\r\n                        this.player.togglePlay();\r\n                    }\r\n                    break;\r\n\r\n                case 38:\r\n                    // Arrow up\r\n                    this.player.increaseVolume(0.1);\r\n                    break;\r\n\r\n                case 40:\r\n                    // Arrow down\r\n                    this.player.decreaseVolume(0.1);\r\n                    break;\r\n\r\n                case 77:\r\n                    // M key\r\n                    if (!repeat) {\r\n                        this.player.muted = !this.player.muted;\r\n                    }\r\n                    break;\r\n\r\n                case 39:\r\n                    // Arrow forward\r\n                    this.player.forward();\r\n                    break;\r\n\r\n                case 37:\r\n                    // Arrow back\r\n                    this.player.rewind();\r\n                    break;\r\n\r\n                case 70:\r\n                    // F key\r\n                    this.player.fullscreen.toggle();\r\n                    break;\r\n\r\n                case 67:\r\n                    // C key\r\n                    if (!repeat) {\r\n                        this.player.toggleCaptions();\r\n                    }\r\n                    break;\r\n\r\n                case 76:\r\n                    // L key\r\n                    this.player.loop = !this.player.loop;\r\n                    break;\r\n\r\n                /* case 73:\r\n                    this.setLoop('start');\r\n                    break;\r\n\r\n                case 76:\r\n                    this.setLoop();\r\n                    break;\r\n\r\n                case 79:\r\n                    this.setLoop('end');\r\n                    break; */\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            // Escape is handle natively when in full screen\r\n            // So we only need to worry about non native\r\n            if (!this.player.fullscreen.enabled && this.player.fullscreen.active && code === 27) {\r\n                this.player.fullscreen.toggle();\r\n            }\r\n\r\n            // Store last code for next cycle\r\n            this.lastKey = code;\r\n        } else {\r\n            this.lastKey = null;\r\n        }\r\n    }\r\n\r\n    // Toggle menu\r\n    toggleMenu(event) {\r\n        controls.toggleMenu.call(this.player, event);\r\n    }\r\n\r\n    // Device is touch enabled\r\n    firstTouch() {\r\n        this.player.touch = true;\r\n\r\n        // Add touch class\r\n        toggleClass(this.player.elements.container, this.player.config.classNames.isTouch, true);\r\n    }\r\n\r\n    // Global window & document listeners\r\n    global(toggle = true) {\r\n        // Keyboard shortcuts\r\n        if (this.player.config.keyboard.global) {\r\n            toggleListener.call(this.player, window, 'keydown keyup', this.handleKey, toggle, false);\r\n        }\r\n\r\n        // Click anywhere closes menu\r\n        toggleListener.call(this.player, document.body, 'click', this.toggleMenu, toggle);\r\n\r\n        // Detect touch by events\r\n        once.call(this.player, document.body, 'touchstart', this.firstTouch);\r\n    }\r\n\r\n    // Container listeners\r\n    container() {\r\n        // Keyboard shortcuts\r\n        if (!this.player.config.keyboard.global && this.player.config.keyboard.focused) {\r\n            on.call(this.player, this.player.elements.container, 'keydown keyup', this.handleKey, false);\r\n        }\r\n\r\n        // Detect tab focus\r\n        // Remove class on blur/focusout\r\n        on.call(this.player, this.player.elements.container, 'focusout', event => {\r\n            toggleClass(event.target, this.player.config.classNames.tabFocus, false);\r\n        });\r\n        // Add classname to tabbed elements\r\n        on.call(this.player, this.player.elements.container, 'keydown', event => {\r\n            if (event.keyCode !== 9) {\r\n                return;\r\n            }\r\n\r\n            // Delay the adding of classname until the focus has changed\r\n            // This event fires before the focusin event\r\n            setTimeout(() => {\r\n                toggleClass(getFocusElement(), this.player.config.classNames.tabFocus, true);\r\n            }, 0);\r\n        });\r\n\r\n        // Toggle controls on mouse events and entering fullscreen\r\n        on.call(\r\n            this.player,\r\n            this.player.elements.container,\r\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\r\n            event => {\r\n                const { controls } = this.player.elements;\r\n\r\n                // Remove button states for fullscreen\r\n                if (event.type === 'enterfullscreen') {\r\n                    controls.pressed = false;\r\n                    controls.hover = false;\r\n                }\r\n\r\n                // Show, then hide after a timeout unless another control event occurs\r\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\r\n\r\n                let delay = 0;\r\n\r\n                if (show) {\r\n                    ui.toggleControls.call(this.player, true);\r\n                    // Use longer timeout for touch devices\r\n                    delay = this.player.touch ? 3000 : 2000;\r\n                }\r\n\r\n                // Clear timer\r\n                clearTimeout(this.player.timers.controls);\r\n                // Timer to prevent flicker when seeking\r\n                this.player.timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\r\n            },\r\n        );\r\n    }\r\n\r\n    // Listen for media events\r\n    media() {\r\n        // Time change on media\r\n        on.call(this.player, this.player.media, 'timeupdate seeking seeked', event =>\r\n            controls.timeUpdate.call(this.player, event),\r\n        );\r\n\r\n        // Display duration\r\n        on.call(this.player, this.player.media, 'durationchange loadeddata loadedmetadata', event =>\r\n            controls.durationUpdate.call(this.player, event),\r\n        );\r\n\r\n        // Check for audio tracks on load\r\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\r\n        on.call(this.player, this.player.media, 'canplay', () => {\r\n            toggleHidden(this.player.elements.volume, !this.player.hasAudio);\r\n            toggleHidden(this.player.elements.buttons.mute, !this.player.hasAudio);\r\n        });\r\n\r\n        // Handle the media finishing\r\n        on.call(this.player, this.player.media, 'ended', () => {\r\n            // Show poster on end\r\n            if (this.player.isHTML5 && this.player.isVideo && this.player.config.resetOnEnd) {\r\n                // Restart\r\n                this.player.restart();\r\n            }\r\n        });\r\n\r\n        // Check for buffer progress\r\n        on.call(this.player, this.player.media, 'progress playing seeking seeked', event =>\r\n            controls.updateProgress.call(this.player, event),\r\n        );\r\n\r\n        // Handle volume changes\r\n        on.call(this.player, this.player.media, 'volumechange', event =>\r\n            controls.updateVolume.call(this.player, event),\r\n        );\r\n\r\n        // Handle play/pause\r\n        on.call(this.player, this.player.media, 'playing play pause ended emptied timeupdate', event =>\r\n            ui.checkPlaying.call(this.player, event),\r\n        );\r\n\r\n        // Loading state\r\n        on.call(this.player, this.player.media, 'waiting canplay seeked playing', event =>\r\n            ui.checkLoading.call(this.player, event),\r\n        );\r\n\r\n        // If autoplay, then load advertisement if required\r\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\r\n        on.call(this.player, this.player.media, 'playing', () => {\r\n            if (!this.player.ads) {\r\n                return;\r\n            }\r\n\r\n            // If ads are enabled, wait for them first\r\n            if (this.player.ads.enabled && !this.player.ads.initialized) {\r\n                // Wait for manager response\r\n                this.player.ads.managerPromise.then(() => this.player.ads.play()).catch(() => this.player.play());\r\n            }\r\n        });\r\n\r\n        // Click video\r\n        if (this.player.supported.ui && this.player.config.clickToPlay && !this.player.isAudio) {\r\n            // Re-fetch the wrapper\r\n            const wrapper = getElement.call(this.player, `.${this.player.config.classNames.video}`);\r\n\r\n            // Bail if there's no wrapper (this should never happen)\r\n            if (!is.element(wrapper)) {\r\n                return;\r\n            }\r\n\r\n            // On click play, pause ore restart\r\n            on.call(this.player, wrapper, 'click', () => {\r\n                // Touch devices will just show controls (if we're hiding controls)\r\n                if (this.player.config.hideControls && this.player.touch && !this.player.paused) {\r\n                    return;\r\n                }\r\n\r\n                if (this.player.paused) {\r\n                    this.player.play();\r\n                } else if (this.player.ended) {\r\n                    this.player.restart();\r\n                    this.player.play();\r\n                } else {\r\n                    this.player.pause();\r\n                }\r\n            });\r\n        }\r\n\r\n        // Disable right click\r\n        if (this.player.supported.ui && this.player.config.disableContextMenu) {\r\n            on.call(\r\n                this.player,\r\n                this.player.elements.wrapper,\r\n                'contextmenu',\r\n                event => {\r\n                    event.preventDefault();\r\n                },\r\n                false,\r\n            );\r\n        }\r\n\r\n        // Volume change\r\n        on.call(this.player, this.player.media, 'volumechange', () => {\r\n            // Save to storage\r\n            this.player.storage.set({ volume: this.player.volume, muted: this.player.muted });\r\n        });\r\n\r\n        // Speed change\r\n        on.call(this.player, this.player.media, 'ratechange', () => {\r\n            // Update UI\r\n            controls.updateSetting.call(this.player, 'speed');\r\n\r\n            // Save to storage\r\n            this.player.storage.set({ speed: this.player.speed });\r\n        });\r\n\r\n        // Quality request\r\n        on.call(this.player, this.player.media, 'qualityrequested', event => {\r\n            // Save to storage\r\n            this.player.storage.set({ quality: event.detail.quality });\r\n        });\r\n\r\n        // Quality change\r\n        on.call(this.player, this.player.media, 'qualitychange', event => {\r\n            // Update UI\r\n            controls.updateSetting.call(this.player, 'quality', null, event.detail.quality);\r\n        });\r\n\r\n        // Proxy events to container\r\n        // Bubble up key events for Edge\r\n        const proxyEvents = this.player.config.events.concat(['keyup', 'keydown']).join(' ');\r\n        on.call(this.player, this.player.media, proxyEvents, event => {\r\n            let { detail = {} } = event;\r\n\r\n            // Get error details from media\r\n            if (event.type === 'error') {\r\n                detail = this.player.media.error;\r\n            }\r\n\r\n            triggerEvent.call(this.player, this.player.elements.container, event.type, true, detail);\r\n        });\r\n    }\r\n\r\n    // Listen for control events\r\n    controls() {\r\n        // IE doesn't support input event, so we fallback to change\r\n        const inputEvent = browser.isIE ? 'change' : 'input';\r\n\r\n        // Run default and custom handlers\r\n        const proxy = (event, defaultHandler, customHandlerKey) => {\r\n            const customHandler = this.player.config.listeners[customHandlerKey];\r\n            const hasCustomHandler = is.function(customHandler);\r\n            let returned = true;\r\n\r\n            // Execute custom handler\r\n            if (hasCustomHandler) {\r\n                returned = customHandler.call(this.player, event);\r\n            }\r\n\r\n            // Only call default handler if not prevented in custom handler\r\n            if (returned && is.function(defaultHandler)) {\r\n                defaultHandler.call(this.player, event);\r\n            }\r\n        };\r\n\r\n        // Trigger custom and default handlers\r\n        const bind = (element, type, defaultHandler, customHandlerKey, passive = true) => {\r\n            const customHandler = this.player.config.listeners[customHandlerKey];\r\n            const hasCustomHandler = is.function(customHandler);\r\n\r\n            on.call(\r\n                this.player,\r\n                element,\r\n                type,\r\n                event => proxy(event, defaultHandler, customHandlerKey),\r\n                passive && !hasCustomHandler,\r\n            );\r\n        };\r\n\r\n        // Play/pause toggle\r\n        if (this.player.elements.buttons.play) {\r\n            Array.from(this.player.elements.buttons.play).forEach(button => {\r\n                bind(button, 'click', this.player.togglePlay, 'play');\r\n            });\r\n        }\r\n\r\n        // Pause\r\n        bind(this.player.elements.buttons.restart, 'click', this.player.restart, 'restart');\r\n\r\n        // Rewind\r\n        bind(this.player.elements.buttons.rewind, 'click', this.player.rewind, 'rewind');\r\n\r\n        // Rewind\r\n        bind(this.player.elements.buttons.fastForward, 'click', this.player.forward, 'fastForward');\r\n\r\n        // Mute toggle\r\n        bind(\r\n            this.player.elements.buttons.mute,\r\n            'click',\r\n            () => {\r\n                this.player.muted = !this.player.muted;\r\n            },\r\n            'mute',\r\n        );\r\n\r\n        // Captions toggle\r\n        bind(this.player.elements.buttons.captions, 'click', () => this.player.toggleCaptions());\r\n\r\n        // Fullscreen toggle\r\n        bind(\r\n            this.player.elements.buttons.fullscreen,\r\n            'click',\r\n            () => {\r\n                this.player.fullscreen.toggle();\r\n            },\r\n            'fullscreen',\r\n        );\r\n\r\n        // Picture-in-Picture\r\n        bind(\r\n            this.player.elements.buttons.pip,\r\n            'click',\r\n            () => {\r\n                this.player.pip = 'toggle';\r\n            },\r\n            'pip',\r\n        );\r\n\r\n        // Airplay\r\n        bind(this.player.elements.buttons.airplay, 'click', this.player.airplay, 'airplay');\r\n\r\n        // Settings menu\r\n        bind(this.player.elements.buttons.settings, 'click', event => {\r\n            controls.toggleMenu.call(this.player, event);\r\n        });\r\n\r\n        // Settings menu\r\n        bind(this.player.elements.settings.form, 'click', event => {\r\n            event.stopPropagation();\r\n\r\n            // Go back to home tab on click\r\n            const showHomeTab = () => {\r\n                const id = `plyr-settings-${this.player.id}-home`;\r\n                controls.showTab.call(this.player, id);\r\n            };\r\n\r\n            // Settings menu items - use event delegation as items are added/removed\r\n            if (matches(event.target, this.player.config.selectors.inputs.language)) {\r\n                proxy(\r\n                    event,\r\n                    () => {\r\n                        this.player.currentTrack = Number(event.target.value);\r\n                        showHomeTab();\r\n                    },\r\n                    'language',\r\n                );\r\n            } else if (matches(event.target, this.player.config.selectors.inputs.quality)) {\r\n                proxy(\r\n                    event,\r\n                    () => {\r\n                        this.player.quality = event.target.value;\r\n                        showHomeTab();\r\n                    },\r\n                    'quality',\r\n                );\r\n            } else if (matches(event.target, this.player.config.selectors.inputs.speed)) {\r\n                proxy(\r\n                    event,\r\n                    () => {\r\n                        this.player.speed = parseFloat(event.target.value);\r\n                        showHomeTab();\r\n                    },\r\n                    'speed',\r\n                );\r\n            } else {\r\n                const tab = event.target;\r\n                controls.showTab.call(this.player, tab.getAttribute('aria-controls'));\r\n            }\r\n        });\r\n\r\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\r\n        bind(this.player.elements.inputs.seek, 'mousedown mousemove', event => {\r\n            const clientRect = this.player.elements.progress.getBoundingClientRect();\r\n            const percent = 100 / clientRect.width * (event.pageX - clientRect.left);\r\n            event.currentTarget.setAttribute('seek-value', percent);\r\n        });\r\n\r\n        // Pause while seeking\r\n        bind(this.player.elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\r\n            const seek = event.currentTarget;\r\n\r\n            const code = event.keyCode ? event.keyCode : event.which;\r\n            const eventType = event.type;\r\n\r\n            if ((eventType === 'keydown' || eventType === 'keyup') && (code !== 39 && code !== 37)) {\r\n                return;\r\n            }\r\n            // Was playing before?\r\n            const play = seek.hasAttribute('play-on-seeked');\r\n\r\n            // Done seeking\r\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\r\n\r\n            // If we're done seeking and it was playing, resume playback\r\n            if (play && done) {\r\n                seek.removeAttribute('play-on-seeked');\r\n                this.player.play();\r\n            } else if (!done && this.player.playing) {\r\n                seek.setAttribute('play-on-seeked', '');\r\n                this.player.pause();\r\n            }\r\n        });\r\n\r\n        // Seek\r\n        bind(\r\n            this.player.elements.inputs.seek,\r\n            inputEvent,\r\n            event => {\r\n                const seek = event.currentTarget;\r\n\r\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\r\n                let seekTo = seek.getAttribute('seek-value');\r\n\r\n                if (is.empty(seekTo)) {\r\n                    seekTo = seek.value;\r\n                }\r\n\r\n                seek.removeAttribute('seek-value');\r\n\r\n                this.player.currentTime = seekTo / seek.max * this.player.duration;\r\n            },\r\n            'seek',\r\n        );\r\n\r\n        // Current time invert\r\n        // Only if one time element is used for both currentTime and duration\r\n        if (this.player.config.toggleInvert && !is.element(this.player.elements.display.duration)) {\r\n            bind(this.player.elements.display.currentTime, 'click', () => {\r\n                // Do nothing if we're at the start\r\n                if (this.player.currentTime === 0) {\r\n                    return;\r\n                }\r\n\r\n                this.player.config.invertTime = !this.player.config.invertTime;\r\n\r\n                controls.timeUpdate.call(this.player);\r\n            });\r\n        }\r\n\r\n        // Volume\r\n        bind(\r\n            this.player.elements.inputs.volume,\r\n            inputEvent,\r\n            event => {\r\n                this.player.volume = event.target.value;\r\n            },\r\n            'volume',\r\n        );\r\n\r\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\r\n        if (browser.isWebkit) {\r\n            Array.from(getElements.call(this.player, 'input[type=\"range\"]')).forEach(element => {\r\n                bind(element, 'input', event => controls.updateRangeFill.call(this.player, event.target));\r\n            });\r\n        }\r\n\r\n        // Seek tooltip\r\n        bind(this.player.elements.progress, 'mouseenter mouseleave mousemove', event =>\r\n            controls.updateSeekTooltip.call(this.player, event),\r\n        );\r\n\r\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\r\n        bind(this.player.elements.controls, 'mouseenter mouseleave', event => {\r\n            this.player.elements.controls.hover = !this.player.touch && event.type === 'mouseenter';\r\n        });\r\n\r\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\r\n        bind(this.player.elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\r\n            this.player.elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\r\n        });\r\n\r\n        // Focus in/out on controls\r\n        bind(this.player.elements.controls, 'focusin focusout', event => {\r\n            const { config, elements, timers } = this.player;\r\n\r\n            // Skip transition to prevent focus from scrolling the parent element\r\n            toggleClass(elements.controls, config.classNames.noTransition, event.type === 'focusin');\r\n\r\n            // Toggle\r\n            ui.toggleControls.call(this.player, event.type === 'focusin');\r\n\r\n            // If focusin, hide again after delay\r\n            if (event.type === 'focusin') {\r\n                // Restore transition\r\n                setTimeout(() => {\r\n                    toggleClass(elements.controls, config.classNames.noTransition, false);\r\n                }, 0);\r\n\r\n                // Delay a little more for keyboard users\r\n                const delay = this.touch ? 3000 : 4000;\r\n\r\n                // Clear timer\r\n                clearTimeout(timers.controls);\r\n                // Hide\r\n                timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\r\n            }\r\n        });\r\n\r\n        // Mouse wheel for volume\r\n        bind(\r\n            this.player.elements.inputs.volume,\r\n            'wheel',\r\n            event => {\r\n                // Detect \"natural\" scroll - suppored on OS X Safari only\r\n                // Other browsers on OS X will be inverted until support improves\r\n                const inverted = event.webkitDirectionInvertedFromDevice;\r\n\r\n                // Get delta from event. Invert if `inverted` is true\r\n                const [x, y] = [event.deltaX, -event.deltaY].map(value => (inverted ? -value : value));\r\n\r\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\r\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\r\n\r\n                // Change the volume by 2%\r\n                this.player.increaseVolume(direction / 50);\r\n\r\n                // Don't break page scrolling at max and min\r\n                const { volume } = this.player.media;\r\n                if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\r\n                    event.preventDefault();\r\n                }\r\n            },\r\n            'volume',\r\n            false,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Listeners;\r\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\r\n// Load an external script\r\n// ==========================================================================\r\n\r\nimport loadjs from 'loadjs';\r\n\r\nexport default function loadScript(url) {\r\n    return new Promise((resolve, reject) => {\r\n        loadjs(url, {\r\n            success: resolve,\r\n            error: reject,\r\n        });\r\n    });\r\n}\r\n","// ==========================================================================\r\n// Vimeo plugin\r\n// ==========================================================================\r\n\r\nimport captions from '../captions';\r\nimport controls from '../controls';\r\nimport ui from '../ui';\r\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\r\nimport { triggerEvent } from '../utils/events';\r\nimport fetch from '../utils/fetch';\r\nimport is from '../utils/is';\r\nimport loadScript from '../utils/loadScript';\r\nimport { format, stripHTML } from '../utils/strings';\r\nimport { buildUrlParams } from '../utils/urls';\r\n\r\n// Parse Vimeo ID from URL\r\nfunction parseId(url) {\r\n    if (is.empty(url)) {\r\n        return null;\r\n    }\r\n\r\n    if (is.number(Number(url))) {\r\n        return url;\r\n    }\r\n\r\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\r\n    return url.match(regex) ? RegExp.$2 : url;\r\n}\r\n\r\n// Get aspect ratio for dimensions\r\nfunction getAspectRatio(width, height) {\r\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\r\n    const ratio = getRatio(width, height);\r\n    return `${width / ratio}:${height / ratio}`;\r\n}\r\n\r\n// Set playback state and trigger change (only on actual change)\r\nfunction assurePlaybackState(play) {\r\n    if (play && !this.embed.hasPlayed) {\r\n        this.embed.hasPlayed = true;\r\n    }\r\n    if (this.media.paused === play) {\r\n        this.media.paused = !play;\r\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\r\n    }\r\n}\r\n\r\nconst vimeo = {\r\n    setup() {\r\n        // Add embed class for responsive\r\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\r\n\r\n        // Set intial ratio\r\n        vimeo.setAspectRatio.call(this);\r\n\r\n        // Load the API if not already\r\n        if (!is.object(window.Vimeo)) {\r\n            loadScript(this.config.urls.vimeo.sdk)\r\n                .then(() => {\r\n                    vimeo.ready.call(this);\r\n                })\r\n                .catch(error => {\r\n                    this.debug.warn('Vimeo API failed to load', error);\r\n                });\r\n        } else {\r\n            vimeo.ready.call(this);\r\n        }\r\n    },\r\n\r\n    // Set aspect ratio\r\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\r\n    setAspectRatio(input) {\r\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\r\n        const padding = 100 / x * y;\r\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\r\n\r\n        if (this.supported.ui) {\r\n            const height = 240;\r\n            const offset = (height - padding) / (height / 50);\r\n\r\n            this.media.style.transform = `translateY(-${offset}%)`;\r\n        }\r\n    },\r\n\r\n    // API Ready\r\n    ready() {\r\n        const player = this;\r\n\r\n        // Get Vimeo params for the iframe\r\n        const options = {\r\n            loop: player.config.loop.active,\r\n            autoplay: player.autoplay,\r\n            // muted: player.muted,\r\n            byline: false,\r\n            portrait: false,\r\n            title: false,\r\n            speed: true,\r\n            transparent: 0,\r\n            gesture: 'media',\r\n            playsinline: !this.config.fullscreen.iosNative,\r\n        };\r\n        const params = buildUrlParams(options);\r\n\r\n        // Get the source URL or ID\r\n        let source = player.media.getAttribute('src');\r\n\r\n        // Get from <div> if needed\r\n        if (is.empty(source)) {\r\n            source = player.media.getAttribute(player.config.attributes.embed.id);\r\n        }\r\n\r\n        const id = parseId(source);\r\n\r\n        // Build an iframe\r\n        const iframe = createElement('iframe');\r\n        const src = format(player.config.urls.vimeo.iframe, id, params);\r\n        iframe.setAttribute('src', src);\r\n        iframe.setAttribute('allowfullscreen', '');\r\n        iframe.setAttribute('allowtransparency', '');\r\n        iframe.setAttribute('allow', 'autoplay');\r\n\r\n        // Get poster, if already set\r\n        const { poster } = player;\r\n\r\n        // Inject the package\r\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\r\n        wrapper.appendChild(iframe);\r\n        player.media = replaceElement(wrapper, player.media);\r\n\r\n        // Get poster image\r\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\r\n            if (is.empty(response)) {\r\n                return;\r\n            }\r\n\r\n            // Get the URL for thumbnail\r\n            const url = new URL(response[0].thumbnail_large);\r\n\r\n            // Get original image\r\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\r\n\r\n            // Set and show poster\r\n            ui.setPoster.call(player, url.href).catch(() => {});\r\n        });\r\n\r\n        // Setup instance\r\n        // https://github.com/vimeo/player.js\r\n        player.embed = new window.Vimeo.Player(iframe, {\r\n            autopause: player.config.autopause,\r\n            muted: player.muted,\r\n        });\r\n\r\n        player.media.paused = true;\r\n        player.media.currentTime = 0;\r\n\r\n        // Disable native text track rendering\r\n        if (player.supported.ui) {\r\n            player.embed.disableTextTrack();\r\n        }\r\n\r\n        // Create a faux HTML5 API using the Vimeo API\r\n        player.media.play = () => {\r\n            assurePlaybackState.call(player, true);\r\n            return player.embed.play();\r\n        };\r\n\r\n        player.media.pause = () => {\r\n            assurePlaybackState.call(player, false);\r\n            return player.embed.pause();\r\n        };\r\n\r\n        player.media.stop = () => {\r\n            player.pause();\r\n            player.currentTime = 0;\r\n        };\r\n\r\n        // Seeking\r\n        let { currentTime } = player.media;\r\n        Object.defineProperty(player.media, 'currentTime', {\r\n            get() {\r\n                return currentTime;\r\n            },\r\n            set(time) {\r\n                // Vimeo will automatically play on seek if the video hasn't been played before\r\n\r\n                // Get current paused state and volume etc\r\n                const { embed, media, paused, volume } = player;\r\n                const restorePause = paused && !embed.hasPlayed;\r\n\r\n                // Set seeking state and trigger event\r\n                media.seeking = true;\r\n                triggerEvent.call(player, media, 'seeking');\r\n\r\n                // If paused, mute until seek is complete\r\n                Promise.resolve(restorePause && embed.setVolume(0))\r\n                    // Seek\r\n                    .then(() => embed.setCurrentTime(time))\r\n                    // Restore paused\r\n                    .then(() => restorePause && embed.pause())\r\n                    // Restore volume\r\n                    .then(() => restorePause && embed.setVolume(volume))\r\n                    .catch(() => {\r\n                        // Do nothing\r\n                    });\r\n            },\r\n        });\r\n\r\n        // Playback speed\r\n        let speed = player.config.speed.selected;\r\n        Object.defineProperty(player.media, 'playbackRate', {\r\n            get() {\r\n                return speed;\r\n            },\r\n            set(input) {\r\n                player.embed\r\n                    .setPlaybackRate(input)\r\n                    .then(() => {\r\n                        speed = input;\r\n                        triggerEvent.call(player, player.media, 'ratechange');\r\n                    })\r\n                    .catch(error => {\r\n                        // Hide menu item (and menu if empty)\r\n                        if (error.name === 'Error') {\r\n                            controls.setSpeedMenu.call(player, []);\r\n                        }\r\n                    });\r\n            },\r\n        });\r\n\r\n        // Volume\r\n        let { volume } = player.config;\r\n        Object.defineProperty(player.media, 'volume', {\r\n            get() {\r\n                return volume;\r\n            },\r\n            set(input) {\r\n                player.embed.setVolume(input).then(() => {\r\n                    volume = input;\r\n                    triggerEvent.call(player, player.media, 'volumechange');\r\n                });\r\n            },\r\n        });\r\n\r\n        // Muted\r\n        let { muted } = player.config;\r\n        Object.defineProperty(player.media, 'muted', {\r\n            get() {\r\n                return muted;\r\n            },\r\n            set(input) {\r\n                const toggle = is.boolean(input) ? input : false;\r\n\r\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\r\n                    muted = toggle;\r\n                    triggerEvent.call(player, player.media, 'volumechange');\r\n                });\r\n            },\r\n        });\r\n\r\n        // Loop\r\n        let { loop } = player.config;\r\n        Object.defineProperty(player.media, 'loop', {\r\n            get() {\r\n                return loop;\r\n            },\r\n            set(input) {\r\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\r\n\r\n                player.embed.setLoop(toggle).then(() => {\r\n                    loop = toggle;\r\n                });\r\n            },\r\n        });\r\n\r\n        // Source\r\n        let currentSrc;\r\n        player.embed\r\n            .getVideoUrl()\r\n            .then(value => {\r\n                currentSrc = value;\r\n            })\r\n            .catch(error => {\r\n                this.debug.warn(error);\r\n            });\r\n\r\n        Object.defineProperty(player.media, 'currentSrc', {\r\n            get() {\r\n                return currentSrc;\r\n            },\r\n        });\r\n\r\n        // Ended\r\n        Object.defineProperty(player.media, 'ended', {\r\n            get() {\r\n                return player.currentTime === player.duration;\r\n            },\r\n        });\r\n\r\n        // Set aspect ratio based on video size\r\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\r\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\r\n            vimeo.setAspectRatio.call(this, ratio);\r\n        });\r\n\r\n        // Set autopause\r\n        player.embed.setAutopause(player.config.autopause).then(state => {\r\n            player.config.autopause = state;\r\n        });\r\n\r\n        // Get title\r\n        player.embed.getVideoTitle().then(title => {\r\n            player.config.title = title;\r\n            ui.setTitle.call(this);\r\n        });\r\n\r\n        // Get current time\r\n        player.embed.getCurrentTime().then(value => {\r\n            currentTime = value;\r\n            triggerEvent.call(player, player.media, 'timeupdate');\r\n        });\r\n\r\n        // Get duration\r\n        player.embed.getDuration().then(value => {\r\n            player.media.duration = value;\r\n            triggerEvent.call(player, player.media, 'durationchange');\r\n        });\r\n\r\n        // Get captions\r\n        player.embed.getTextTracks().then(tracks => {\r\n            player.media.textTracks = tracks;\r\n            captions.setup.call(player);\r\n        });\r\n\r\n        player.embed.on('cuechange', ({ cues = [] }) => {\r\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\r\n            captions.updateCues.call(player, strippedCues);\r\n        });\r\n\r\n        player.embed.on('loaded', () => {\r\n            // Assure state and events are updated on autoplay\r\n            player.embed.getPaused().then(paused => {\r\n                assurePlaybackState.call(player, !paused);\r\n                if (!paused) {\r\n                    triggerEvent.call(player, player.media, 'playing');\r\n                }\r\n            });\r\n\r\n            if (is.element(player.embed.element) && player.supported.ui) {\r\n                const frame = player.embed.element;\r\n\r\n                // Fix keyboard focus issues\r\n                // https://github.com/sampotts/plyr/issues/317\r\n                frame.setAttribute('tabindex', -1);\r\n            }\r\n        });\r\n\r\n        player.embed.on('play', () => {\r\n            assurePlaybackState.call(player, true);\r\n            triggerEvent.call(player, player.media, 'playing');\r\n        });\r\n\r\n        player.embed.on('pause', () => {\r\n            assurePlaybackState.call(player, false);\r\n        });\r\n\r\n        player.embed.on('timeupdate', data => {\r\n            player.media.seeking = false;\r\n            currentTime = data.seconds;\r\n            triggerEvent.call(player, player.media, 'timeupdate');\r\n        });\r\n\r\n        player.embed.on('progress', data => {\r\n            player.media.buffered = data.percent;\r\n            triggerEvent.call(player, player.media, 'progress');\r\n\r\n            // Check all loaded\r\n            if (parseInt(data.percent, 10) === 1) {\r\n                triggerEvent.call(player, player.media, 'canplaythrough');\r\n            }\r\n\r\n            // Get duration as if we do it before load, it gives an incorrect value\r\n            // https://github.com/sampotts/plyr/issues/891\r\n            player.embed.getDuration().then(value => {\r\n                if (value !== player.media.duration) {\r\n                    player.media.duration = value;\r\n                    triggerEvent.call(player, player.media, 'durationchange');\r\n                }\r\n            });\r\n        });\r\n\r\n        player.embed.on('seeked', () => {\r\n            player.media.seeking = false;\r\n            triggerEvent.call(player, player.media, 'seeked');\r\n        });\r\n\r\n        player.embed.on('ended', () => {\r\n            player.media.paused = true;\r\n            triggerEvent.call(player, player.media, 'ended');\r\n        });\r\n\r\n        player.embed.on('error', detail => {\r\n            player.media.error = detail;\r\n            triggerEvent.call(player, player.media, 'error');\r\n        });\r\n\r\n        // Rebuild UI\r\n        setTimeout(() => ui.build.call(player), 0);\r\n    },\r\n};\r\n\r\nexport default vimeo;\r\n","// ==========================================================================\r\n// YouTube plugin\r\n// ==========================================================================\r\n\r\nimport controls from '../controls';\r\nimport ui from '../ui';\r\nimport { dedupe } from '../utils/arrays';\r\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\r\nimport { triggerEvent } from '../utils/events';\r\nimport fetch from '../utils/fetch';\r\nimport is from '../utils/is';\r\nimport loadImage from '../utils/loadImage';\r\nimport loadScript from '../utils/loadScript';\r\nimport { format, generateId } from '../utils/strings';\r\n\r\n// Parse YouTube ID from URL\r\nfunction parseId(url) {\r\n    if (is.empty(url)) {\r\n        return null;\r\n    }\r\n\r\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n    return url.match(regex) ? RegExp.$2 : url;\r\n}\r\n\r\n// Standardise YouTube quality unit\r\nfunction mapQualityUnit(input) {\r\n    const qualities = {\r\n        hd2160: 2160,\r\n        hd1440: 1440,\r\n        hd1080: 1080,\r\n        hd720: 720,\r\n        large: 480,\r\n        medium: 360,\r\n        small: 240,\r\n        tiny: 144,\r\n    };\r\n\r\n    const entry = Object.entries(qualities).find(entry => entry.includes(input));\r\n\r\n    if (entry) {\r\n        // Get the match corresponding to the input\r\n        return entry.find(value => value !== input);\r\n    }\r\n\r\n    return 'default';\r\n}\r\n\r\nfunction mapQualityUnits(levels) {\r\n    if (is.empty(levels)) {\r\n        return levels;\r\n    }\r\n\r\n    return dedupe(levels.map(level => mapQualityUnit(level)));\r\n}\r\n\r\n// Set playback state and trigger change (only on actual change)\r\nfunction assurePlaybackState(play) {\r\n    if (play && !this.embed.hasPlayed) {\r\n        this.embed.hasPlayed = true;\r\n    }\r\n    if (this.media.paused === play) {\r\n        this.media.paused = !play;\r\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\r\n    }\r\n}\r\n\r\nconst youtube = {\r\n    setup() {\r\n        // Add embed class for responsive\r\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\r\n\r\n        // Set aspect ratio\r\n        youtube.setAspectRatio.call(this);\r\n\r\n        // Setup API\r\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\r\n            youtube.ready.call(this);\r\n        } else {\r\n            // Load the API\r\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\r\n                this.debug.warn('YouTube API failed to load', error);\r\n            });\r\n\r\n            // Setup callback for the API\r\n            // YouTube has it's own system of course...\r\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\r\n\r\n            // Add to queue\r\n            window.onYouTubeReadyCallbacks.push(() => {\r\n                youtube.ready.call(this);\r\n            });\r\n\r\n            // Set callback to process queue\r\n            window.onYouTubeIframeAPIReady = () => {\r\n                window.onYouTubeReadyCallbacks.forEach(callback => {\r\n                    callback();\r\n                });\r\n            };\r\n        }\r\n    },\r\n\r\n    // Get the media title\r\n    getTitle(videoId) {\r\n        // Try via undocumented API method first\r\n        // This method disappears now and then though...\r\n        // https://github.com/sampotts/plyr/issues/709\r\n        if (is.function(this.embed.getVideoData)) {\r\n            const { title } = this.embed.getVideoData();\r\n\r\n            if (is.empty(title)) {\r\n                this.config.title = title;\r\n                ui.setTitle.call(this);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Or via Google API\r\n        const key = this.config.keys.google;\r\n        if (is.string(key) && !is.empty(key)) {\r\n            const url = format(this.config.urls.youtube.api, videoId, key);\r\n\r\n            fetch(url)\r\n                .then(result => {\r\n                    if (is.object(result)) {\r\n                        this.config.title = result.items[0].snippet.title;\r\n                        ui.setTitle.call(this);\r\n                    }\r\n                })\r\n                .catch(() => {});\r\n        }\r\n    },\r\n\r\n    // Set aspect ratio\r\n    setAspectRatio() {\r\n        const ratio = this.config.ratio.split(':');\r\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\r\n    },\r\n\r\n    // API ready\r\n    ready() {\r\n        const player = this;\r\n\r\n        // Ignore already setup (race condition)\r\n        const currentId = player.media.getAttribute('id');\r\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\r\n            return;\r\n        }\r\n\r\n        // Get the source URL or ID\r\n        let source = player.media.getAttribute('src');\r\n\r\n        // Get from <div> if needed\r\n        if (is.empty(source)) {\r\n            source = player.media.getAttribute(this.config.attributes.embed.id);\r\n        }\r\n\r\n        // Replace the <iframe> with a <div> due to YouTube API issues\r\n        const videoId = parseId(source);\r\n        const id = generateId(player.provider);\r\n\r\n        // Get poster, if already set\r\n        const { poster } = player;\r\n\r\n        // Replace media element\r\n        const container = createElement('div', { id, poster });\r\n        player.media = replaceElement(container, player.media);\r\n\r\n        // Id to poster wrapper\r\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\r\n\r\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\r\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\r\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\r\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\r\n            .then(image => ui.setPoster.call(player, image.src))\r\n            .then(posterSrc => {\r\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\r\n                if (!posterSrc.includes('maxres')) {\r\n                    player.elements.poster.style.backgroundSize = 'cover';\r\n                }\r\n            })\r\n            .catch(() => {});\r\n\r\n        // Setup instance\r\n        // https://developers.google.com/youtube/iframe_api_reference\r\n        player.embed = new window.YT.Player(id, {\r\n            videoId,\r\n            playerVars: {\r\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\r\n                hl: player.config.hl, // iframe interface language\r\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\r\n                rel: 0, // No related vids\r\n                showinfo: 0, // Hide info\r\n                iv_load_policy: 3, // Hide annotations\r\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\r\n                disablekb: 1, // Disable keyboard as we handle it\r\n                playsinline: 1, // Allow iOS inline playback\r\n\r\n                // Tracking for stats\r\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\r\n                widget_referrer: window ? window.location.href : null,\r\n\r\n                // Captions are flaky on YouTube\r\n                cc_load_policy: player.captions.active ? 1 : 0,\r\n                cc_lang_pref: player.config.captions.language,\r\n            },\r\n            events: {\r\n                onError(event) {\r\n                    // YouTube may fire onError twice, so only handle it once\r\n                    if (!player.media.error) {\r\n                        const code = event.data;\r\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\r\n                        const message =\r\n                            {\r\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\r\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\r\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\r\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\r\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\r\n                            }[code] || 'An unknown error occured';\r\n\r\n                        player.media.error = { code, message };\r\n\r\n                        triggerEvent.call(player, player.media, 'error');\r\n                    }\r\n                },\r\n                onPlaybackQualityChange() {\r\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\r\n                        quality: player.media.quality,\r\n                    });\r\n                },\r\n                onPlaybackRateChange(event) {\r\n                    // Get the instance\r\n                    const instance = event.target;\r\n\r\n                    // Get current speed\r\n                    player.media.playbackRate = instance.getPlaybackRate();\r\n\r\n                    triggerEvent.call(player, player.media, 'ratechange');\r\n                },\r\n                onReady(event) {\r\n                    // Bail if onReady has already been called. See issue #1108\r\n                    if (is.function(player.media.play)) {\r\n                        return;\r\n                    }\r\n                    // Get the instance\r\n                    const instance = event.target;\r\n\r\n                    // Get the title\r\n                    youtube.getTitle.call(player, videoId);\r\n\r\n                    // Create a faux HTML5 API using the YouTube API\r\n                    player.media.play = () => {\r\n                        assurePlaybackState.call(player, true);\r\n                        instance.playVideo();\r\n                    };\r\n\r\n                    player.media.pause = () => {\r\n                        assurePlaybackState.call(player, false);\r\n                        instance.pauseVideo();\r\n                    };\r\n\r\n                    player.media.stop = () => {\r\n                        instance.stopVideo();\r\n                    };\r\n\r\n                    player.media.duration = instance.getDuration();\r\n                    player.media.paused = true;\r\n\r\n                    // Seeking\r\n                    player.media.currentTime = 0;\r\n                    Object.defineProperty(player.media, 'currentTime', {\r\n                        get() {\r\n                            return Number(instance.getCurrentTime());\r\n                        },\r\n                        set(time) {\r\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\r\n                            if (player.paused && !player.embed.hasPlayed) {\r\n                                player.embed.mute();\r\n                            }\r\n\r\n                            // Set seeking state and trigger event\r\n                            player.media.seeking = true;\r\n                            triggerEvent.call(player, player.media, 'seeking');\r\n\r\n                            // Seek after events sent\r\n                            instance.seekTo(time);\r\n                        },\r\n                    });\r\n\r\n                    // Playback speed\r\n                    Object.defineProperty(player.media, 'playbackRate', {\r\n                        get() {\r\n                            return instance.getPlaybackRate();\r\n                        },\r\n                        set(input) {\r\n                            instance.setPlaybackRate(input);\r\n                        },\r\n                    });\r\n\r\n                    // Quality\r\n                    Object.defineProperty(player.media, 'quality', {\r\n                        get() {\r\n                            return mapQualityUnit(instance.getPlaybackQuality());\r\n                        },\r\n                        set(input) {\r\n                            instance.setPlaybackQuality(mapQualityUnit(input));\r\n                        },\r\n                    });\r\n\r\n                    // Volume\r\n                    let { volume } = player.config;\r\n                    Object.defineProperty(player.media, 'volume', {\r\n                        get() {\r\n                            return volume;\r\n                        },\r\n                        set(input) {\r\n                            volume = input;\r\n                            instance.setVolume(volume * 100);\r\n                            triggerEvent.call(player, player.media, 'volumechange');\r\n                        },\r\n                    });\r\n\r\n                    // Muted\r\n                    let { muted } = player.config;\r\n                    Object.defineProperty(player.media, 'muted', {\r\n                        get() {\r\n                            return muted;\r\n                        },\r\n                        set(input) {\r\n                            const toggle = is.boolean(input) ? input : muted;\r\n                            muted = toggle;\r\n                            instance[toggle ? 'mute' : 'unMute']();\r\n                            triggerEvent.call(player, player.media, 'volumechange');\r\n                        },\r\n                    });\r\n\r\n                    // Source\r\n                    Object.defineProperty(player.media, 'currentSrc', {\r\n                        get() {\r\n                            return instance.getVideoUrl();\r\n                        },\r\n                    });\r\n\r\n                    // Ended\r\n                    Object.defineProperty(player.media, 'ended', {\r\n                        get() {\r\n                            return player.currentTime === player.duration;\r\n                        },\r\n                    });\r\n\r\n                    // Get available speeds\r\n                    player.options.speed = instance.getAvailablePlaybackRates();\r\n\r\n                    // Set the tabindex to avoid focus entering iframe\r\n                    if (player.supported.ui) {\r\n                        player.media.setAttribute('tabindex', -1);\r\n                    }\r\n\r\n                    triggerEvent.call(player, player.media, 'timeupdate');\r\n                    triggerEvent.call(player, player.media, 'durationchange');\r\n\r\n                    // Reset timer\r\n                    clearInterval(player.timers.buffering);\r\n\r\n                    // Setup buffering\r\n                    player.timers.buffering = setInterval(() => {\r\n                        // Get loaded % from YouTube\r\n                        player.media.buffered = instance.getVideoLoadedFraction();\r\n\r\n                        // Trigger progress only when we actually buffer something\r\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\r\n                            triggerEvent.call(player, player.media, 'progress');\r\n                        }\r\n\r\n                        // Set last buffer point\r\n                        player.media.lastBuffered = player.media.buffered;\r\n\r\n                        // Bail if we're at 100%\r\n                        if (player.media.buffered === 1) {\r\n                            clearInterval(player.timers.buffering);\r\n\r\n                            // Trigger event\r\n                            triggerEvent.call(player, player.media, 'canplaythrough');\r\n                        }\r\n                    }, 200);\r\n\r\n                    // Rebuild UI\r\n                    setTimeout(() => ui.build.call(player), 50);\r\n                },\r\n                onStateChange(event) {\r\n                    // Get the instance\r\n                    const instance = event.target;\r\n\r\n                    // Reset timer\r\n                    clearInterval(player.timers.playing);\r\n\r\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\r\n\r\n                    if (seeked) {\r\n                        // Unset seeking and fire seeked event\r\n                        player.media.seeking = false;\r\n                        triggerEvent.call(player, player.media, 'seeked');\r\n                    }\r\n\r\n                    // Handle events\r\n                    // -1   Unstarted\r\n                    // 0    Ended\r\n                    // 1    Playing\r\n                    // 2    Paused\r\n                    // 3    Buffering\r\n                    // 5    Video cued\r\n                    switch (event.data) {\r\n                        case -1:\r\n                            // Update scrubber\r\n                            triggerEvent.call(player, player.media, 'timeupdate');\r\n\r\n                            // Get loaded % from YouTube\r\n                            player.media.buffered = instance.getVideoLoadedFraction();\r\n                            triggerEvent.call(player, player.media, 'progress');\r\n\r\n                            break;\r\n\r\n                        case 0:\r\n                            assurePlaybackState.call(player, false);\r\n\r\n                            // YouTube doesn't support loop for a single video, so mimick it.\r\n                            if (player.media.loop) {\r\n                                // YouTube needs a call to `stopVideo` before playing again\r\n                                instance.stopVideo();\r\n                                instance.playVideo();\r\n                            } else {\r\n                                triggerEvent.call(player, player.media, 'ended');\r\n                            }\r\n\r\n                            break;\r\n\r\n                        case 1:\r\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\r\n                            if (player.media.paused && !player.embed.hasPlayed) {\r\n                                player.media.pause();\r\n                            } else {\r\n                                assurePlaybackState.call(player, true);\r\n\r\n                                triggerEvent.call(player, player.media, 'playing');\r\n\r\n                                // Poll to get playback progress\r\n                                player.timers.playing = setInterval(() => {\r\n                                    triggerEvent.call(player, player.media, 'timeupdate');\r\n                                }, 50);\r\n\r\n                                // Check duration again due to YouTube bug\r\n                                // https://github.com/sampotts/plyr/issues/374\r\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\r\n                                if (player.media.duration !== instance.getDuration()) {\r\n                                    player.media.duration = instance.getDuration();\r\n                                    triggerEvent.call(player, player.media, 'durationchange');\r\n                                }\r\n\r\n                                // Get quality\r\n                                controls.setQualityMenu.call(\r\n                                    player,\r\n                                    mapQualityUnits(instance.getAvailableQualityLevels()),\r\n                                );\r\n                            }\r\n\r\n                            break;\r\n\r\n                        case 2:\r\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\r\n                            if (!player.muted) {\r\n                                player.embed.unMute();\r\n                            }\r\n                            assurePlaybackState.call(player, false);\r\n\r\n                            break;\r\n\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\r\n                        code: event.data,\r\n                    });\r\n                },\r\n            },\r\n        });\r\n    },\r\n};\r\n\r\nexport default youtube;\r\n","// ==========================================================================\r\n// Plyr Media\r\n// ==========================================================================\r\n\r\nimport html5 from './html5';\r\nimport vimeo from './plugins/vimeo';\r\nimport youtube from './plugins/youtube';\r\nimport { createElement, toggleClass, wrap } from './utils/elements';\r\n\r\nconst media = {\r\n    // Setup media\r\n    setup() {\r\n        // If there's no media, bail\r\n        if (!this.media) {\r\n            this.debug.warn('No media element found!');\r\n            return;\r\n        }\r\n\r\n        // Add type class\r\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\r\n\r\n        // Add provider class\r\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\r\n\r\n        // Add video class for embeds\r\n        // This will require changes if audio embeds are added\r\n        if (this.isEmbed) {\r\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\r\n        }\r\n\r\n        // Inject the player wrapper\r\n        if (this.isVideo) {\r\n            // Create the wrapper div\r\n            this.elements.wrapper = createElement('div', {\r\n                class: this.config.classNames.video,\r\n            });\r\n\r\n            // Wrap the video in a container\r\n            wrap(this.media, this.elements.wrapper);\r\n\r\n            // Faux poster container\r\n            this.elements.poster = createElement('div', {\r\n                class: this.config.classNames.poster,\r\n            });\r\n\r\n            this.elements.wrapper.appendChild(this.elements.poster);\r\n        }\r\n\r\n        if (this.isHTML5) {\r\n            html5.extend.call(this);\r\n        } else if (this.isYouTube) {\r\n            youtube.setup.call(this);\r\n        } else if (this.isVimeo) {\r\n            vimeo.setup.call(this);\r\n        }\r\n    },\r\n};\r\n\r\nexport default media;\r\n","// ==========================================================================\r\n// Advertisement plugin using Google IMA HTML5 SDK\r\n// Create an account with our ad partner, vi here:\r\n// https://www.vi.ai/publisher-video-monetization/\r\n// ==========================================================================\r\n\r\n/* global google */\r\n\r\nimport i18n from '../i18n';\r\nimport { createElement } from '../utils/elements';\r\nimport { triggerEvent } from '../utils/events';\r\nimport is from '../utils/is';\r\nimport loadScript from '../utils/loadScript';\r\nimport { formatTime } from '../utils/time';\r\nimport { buildUrlParams } from '../utils/urls';\r\n\r\nclass Ads {\r\n    /**\r\n     * Ads constructor.\r\n     * @param {object} player\r\n     * @return {Ads}\r\n     */\r\n    constructor(player) {\r\n        this.player = player;\r\n        this.publisherId = player.config.ads.publisherId;\r\n        this.playing = false;\r\n        this.initialized = false;\r\n        this.elements = {\r\n            container: null,\r\n            displayContainer: null,\r\n        };\r\n        this.manager = null;\r\n        this.loader = null;\r\n        this.cuePoints = null;\r\n        this.events = {};\r\n        this.safetyTimer = null;\r\n        this.countdownTimer = null;\r\n\r\n        // Setup a promise to resolve when the IMA manager is ready\r\n        this.managerPromise = new Promise((resolve, reject) => {\r\n            // The ad is loaded and ready\r\n            this.on('loaded', resolve);\r\n\r\n            // Ads failed\r\n            this.on('error', reject);\r\n        });\r\n\r\n        this.load();\r\n    }\r\n\r\n    get enabled() {\r\n        return (\r\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Load the IMA SDK\r\n     */\r\n    load() {\r\n        if (this.enabled) {\r\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\r\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\r\n                loadScript(this.player.config.urls.googleIMA.sdk)\r\n                    .then(() => {\r\n                        this.ready();\r\n                    })\r\n                    .catch(() => {\r\n                        // Script failed to load or is blocked\r\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\r\n                    });\r\n            } else {\r\n                this.ready();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the ads instance ready\r\n     */\r\n    ready() {\r\n        // Start ticking our safety timer. If the whole advertisement\r\n        // thing doesn't resolve within our set time; we bail\r\n        this.startSafetyTimer(12000, 'ready()');\r\n\r\n        // Clear the safety timer\r\n        this.managerPromise.then(() => {\r\n            this.clearSafetyTimer('onAdsManagerLoaded()');\r\n        });\r\n\r\n        // Set listeners on the Plyr instance\r\n        this.listeners();\r\n\r\n        // Setup the IMA SDK\r\n        this.setupIMA();\r\n    }\r\n\r\n    // Build the default tag URL\r\n    get tagUrl() {\r\n        const params = {\r\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\r\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\r\n            AV_URL: window.location.hostname,\r\n            cb: Date.now(),\r\n            AV_WIDTH: 640,\r\n            AV_HEIGHT: 480,\r\n            AV_CDIM2: this.publisherId,\r\n        };\r\n\r\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\r\n\r\n        return `${base}?${buildUrlParams(params)}`;\r\n    }\r\n\r\n    /**\r\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\r\n     * so here we define our ad container. This div is set up to render on top of the video player.\r\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\r\n     * handle to the content video player - the SDK will poll the current time of our player to\r\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\r\n     * mobile devices, this initialization is done as the result of a user action.\r\n     */\r\n    setupIMA() {\r\n        // Create the container for our advertisements\r\n        this.elements.container = createElement('div', {\r\n            class: this.player.config.classNames.ads,\r\n        });\r\n        this.player.elements.container.appendChild(this.elements.container);\r\n\r\n        // So we can run VPAID2\r\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\r\n\r\n        // Set language\r\n        google.ima.settings.setLocale(this.player.config.ads.language);\r\n\r\n        // We assume the adContainer is the video container of the plyr element\r\n        // that will house the ads\r\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\r\n\r\n        // Request video ads to be pre-loaded\r\n        this.requestAds();\r\n    }\r\n\r\n    /**\r\n     * Request advertisements\r\n     */\r\n    requestAds() {\r\n        const { container } = this.player.elements;\r\n\r\n        try {\r\n            // Create ads loader\r\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\r\n\r\n            // Listen and respond to ads loaded and error events\r\n            this.loader.addEventListener(\r\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\r\n                event => this.onAdsManagerLoaded(event),\r\n                false,\r\n            );\r\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\r\n\r\n            // Request video ads\r\n            const request = new google.ima.AdsRequest();\r\n            request.adTagUrl = this.tagUrl;\r\n\r\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\r\n            // to select the correct creative if multiple are returned\r\n            request.linearAdSlotWidth = container.offsetWidth;\r\n            request.linearAdSlotHeight = container.offsetHeight;\r\n            request.nonLinearAdSlotWidth = container.offsetWidth;\r\n            request.nonLinearAdSlotHeight = container.offsetHeight;\r\n\r\n            // We only overlay ads as we only support video.\r\n            request.forceNonLinearFullSlot = false;\r\n\r\n            // Mute based on current state\r\n            request.setAdWillPlayMuted(!this.player.muted);\r\n\r\n            this.loader.requestAds(request);\r\n        } catch (e) {\r\n            this.onAdError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the ad countdown\r\n     * @param {boolean} start\r\n     */\r\n    pollCountdown(start = false) {\r\n        if (!start) {\r\n            clearInterval(this.countdownTimer);\r\n            this.elements.container.removeAttribute('data-badge-text');\r\n            return;\r\n        }\r\n\r\n        const update = () => {\r\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\r\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\r\n            this.elements.container.setAttribute('data-badge-text', label);\r\n        };\r\n\r\n        this.countdownTimer = setInterval(update, 100);\r\n    }\r\n\r\n    /**\r\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\r\n     * @param {Event} adsManagerLoadedEvent\r\n     */\r\n    onAdsManagerLoaded(event) {\r\n        // Get the ads manager\r\n        const settings = new google.ima.AdsRenderingSettings();\r\n\r\n        // Tell the SDK to save and restore content video state on our behalf\r\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\r\n        settings.enablePreloading = true;\r\n\r\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\r\n        // so it can determine when to start the mid- and post-roll\r\n        this.manager = event.getAdsManager(this.player, settings);\r\n\r\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\r\n        this.cuePoints = this.manager.getCuePoints();\r\n\r\n        // Add advertisement cue's within the time line if available\r\n        if (!is.empty(this.cuePoints)) {\r\n            this.cuePoints.forEach(cuePoint => {\r\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\r\n                    const seekElement = this.player.elements.progress;\r\n\r\n                    if (is.element(seekElement)) {\r\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\r\n                        const cue = createElement('span', {\r\n                            class: this.player.config.classNames.cues,\r\n                        });\r\n\r\n                        cue.style.left = `${cuePercentage.toString()}%`;\r\n                        seekElement.appendChild(cue);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Get skippable state\r\n        // TODO: Skip button\r\n        // this.player.debug.warn(this.manager.getAdSkippableState());\r\n\r\n        // Set volume to match player\r\n        this.manager.setVolume(this.player.volume);\r\n\r\n        // Add listeners to the required events\r\n        // Advertisement error events\r\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\r\n\r\n        // Advertisement regular events\r\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\r\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\r\n        });\r\n\r\n        // Resolve our adsManager\r\n        this.trigger('loaded');\r\n    }\r\n\r\n    /**\r\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\r\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\r\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\r\n     * @param {Event} event\r\n     */\r\n    onAdEvent(event) {\r\n        const { container } = this.player.elements;\r\n\r\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\r\n        // don't have ad object associated\r\n        const ad = event.getAd();\r\n\r\n        // Proxy event\r\n        const dispatchEvent = type => {\r\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\r\n            triggerEvent.call(this.player, this.player.media, event);\r\n        };\r\n\r\n        switch (event.type) {\r\n            case google.ima.AdEvent.Type.LOADED:\r\n                // This is the first event sent for an ad - it is possible to determine whether the\r\n                // ad is a video ad or an overlay\r\n                this.trigger('loaded');\r\n\r\n                // Bubble event\r\n                dispatchEvent(event.type);\r\n\r\n                // Start countdown\r\n                this.pollCountdown(true);\r\n\r\n                if (!ad.isLinear()) {\r\n                    // Position AdDisplayContainer correctly for overlay\r\n                    ad.width = container.offsetWidth;\r\n                    ad.height = container.offsetHeight;\r\n                }\r\n\r\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\r\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\r\n                break;\r\n\r\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\r\n                // All ads for the current videos are done. We can now request new advertisements\r\n                // in case the video is re-played\r\n\r\n                // Fire event\r\n                dispatchEvent(event.type);\r\n\r\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\r\n                // So here we load a new video when all ads are done.\r\n                // Then we load new ads within a new adsManager. When the video\r\n                // Is started - after - the ads are loaded, then we get ads.\r\n                // You can also easily test cancelling and reloading by running\r\n                // player.ads.cancel() and player.ads.play from the console I guess.\r\n                // this.player.source = {\r\n                //     type: 'video',\r\n                //     title: 'View From A Blue Moon',\r\n                //     sources: [{\r\n                //         src:\r\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\r\n                // 'video/mp4', }], poster:\r\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\r\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\r\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\r\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\r\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\r\n                // };\r\n\r\n                // TODO: So there is still this thing where a video should only be allowed to start\r\n                // playing when the IMA SDK is ready or has failed\r\n\r\n                this.loadAds();\r\n                break;\r\n\r\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\r\n                // This event indicates the ad has started - the video player can adjust the UI,\r\n                // for example display a pause button and remaining time. Fired when content should\r\n                // be paused. This usually happens right before an ad is about to cover the content\r\n\r\n                dispatchEvent(event.type);\r\n\r\n                this.pauseContent();\r\n\r\n                break;\r\n\r\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\r\n                // This event indicates the ad has finished - the video player can perform\r\n                // appropriate UI actions, such as removing the timer for remaining time detection.\r\n                // Fired when content should be resumed. This usually happens when an ad finishes\r\n                // or collapses\r\n\r\n                dispatchEvent(event.type);\r\n\r\n                this.pollCountdown();\r\n\r\n                this.resumeContent();\r\n\r\n                break;\r\n\r\n            case google.ima.AdEvent.Type.STARTED:\r\n            case google.ima.AdEvent.Type.MIDPOINT:\r\n            case google.ima.AdEvent.Type.COMPLETE:\r\n            case google.ima.AdEvent.Type.IMPRESSION:\r\n            case google.ima.AdEvent.Type.CLICK:\r\n                dispatchEvent(event.type);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Any ad error handling comes through here\r\n     * @param {Event} event\r\n     */\r\n    onAdError(event) {\r\n        this.cancel();\r\n        this.player.debug.warn('Ads error', event);\r\n    }\r\n\r\n    /**\r\n     * Setup hooks for Plyr and window events. This ensures\r\n     * the mid- and post-roll launch at the correct time. And\r\n     * resize the advertisement when the player resizes\r\n     */\r\n    listeners() {\r\n        const { container } = this.player.elements;\r\n        let time;\r\n\r\n        // Add listeners to the required events\r\n        this.player.on('ended', () => {\r\n            this.loader.contentComplete();\r\n        });\r\n\r\n        this.player.on('seeking', () => {\r\n            time = this.player.currentTime;\r\n            return time;\r\n        });\r\n\r\n        this.player.on('seeked', () => {\r\n            const seekedTime = this.player.currentTime;\r\n\r\n            if (is.empty(this.cuePoints)) {\r\n                return;\r\n            }\r\n\r\n            this.cuePoints.forEach((cuePoint, index) => {\r\n                if (time < cuePoint && cuePoint < seekedTime) {\r\n                    this.manager.discardAdBreak();\r\n                    this.cuePoints.splice(index, 1);\r\n                }\r\n            });\r\n        });\r\n\r\n        // Listen to the resizing of the window. And resize ad accordingly\r\n        // TODO: eventually implement ResizeObserver\r\n        window.addEventListener('resize', () => {\r\n            if (this.manager) {\r\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialize the adsManager and start playing advertisements\r\n     */\r\n    play() {\r\n        const { container } = this.player.elements;\r\n\r\n        if (!this.managerPromise) {\r\n            this.resumeContent();\r\n        }\r\n\r\n        // Play the requested advertisement whenever the adsManager is ready\r\n        this.managerPromise\r\n            .then(() => {\r\n                // Initialize the container. Must be done via a user action on mobile devices\r\n                this.elements.displayContainer.initialize();\r\n\r\n                try {\r\n                    if (!this.initialized) {\r\n                        // Initialize the ads manager. Ad rules playlist will start at this time\r\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\r\n\r\n                        // Call play to start showing the ad. Single video and overlay ads will\r\n                        // start at this time; the call will be ignored for ad rules\r\n                        this.manager.start();\r\n                    }\r\n\r\n                    this.initialized = true;\r\n                } catch (adError) {\r\n                    // An error may be thrown if there was a problem with the\r\n                    // VAST response\r\n                    this.onAdError(adError);\r\n                }\r\n            })\r\n            .catch(() => {});\r\n    }\r\n\r\n    /**\r\n     * Resume our video\r\n     */\r\n    resumeContent() {\r\n        // Hide the advertisement container\r\n        this.elements.container.style.zIndex = '';\r\n\r\n        // Ad is stopped\r\n        this.playing = false;\r\n\r\n        // Play our video\r\n        if (this.player.currentTime < this.player.duration) {\r\n            this.player.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pause our video\r\n     */\r\n    pauseContent() {\r\n        // Show the advertisement container\r\n        this.elements.container.style.zIndex = 3;\r\n\r\n        // Ad is playing.\r\n        this.playing = true;\r\n\r\n        // Pause our video.\r\n        this.player.pause();\r\n    }\r\n\r\n    /**\r\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\r\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\r\n     * video requests. https://developers.google.com/interactive-\r\n     * media-ads/docs/sdks/android/faq#8\r\n     */\r\n    cancel() {\r\n        // Pause our video\r\n        if (this.initialized) {\r\n            this.resumeContent();\r\n        }\r\n\r\n        // Tell our instance that we're done for now\r\n        this.trigger('error');\r\n\r\n        // Re-create our adsManager\r\n        this.loadAds();\r\n    }\r\n\r\n    /**\r\n     * Re-create our adsManager\r\n     */\r\n    loadAds() {\r\n        // Tell our adsManager to go bye bye\r\n        this.managerPromise\r\n            .then(() => {\r\n                // Destroy our adsManager\r\n                if (this.manager) {\r\n                    this.manager.destroy();\r\n                }\r\n\r\n                // Re-set our adsManager promises\r\n                this.managerPromise = new Promise(resolve => {\r\n                    this.on('loaded', resolve);\r\n                    this.player.debug.log(this.manager);\r\n                });\r\n\r\n                // Now request some new advertisements\r\n                this.requestAds();\r\n            })\r\n            .catch(() => {});\r\n    }\r\n\r\n    /**\r\n     * Handles callbacks after an ad event was invoked\r\n     * @param {string} event - Event type\r\n     */\r\n    trigger(event, ...args) {\r\n        const handlers = this.events[event];\r\n\r\n        if (is.array(handlers)) {\r\n            handlers.forEach(handler => {\r\n                if (is.function(handler)) {\r\n                    handler.apply(this, args);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add event listeners\r\n     * @param {string} event - Event type\r\n     * @param {function} callback - Callback for when event occurs\r\n     * @return {Ads}\r\n     */\r\n    on(event, callback) {\r\n        if (!is.array(this.events[event])) {\r\n            this.events[event] = [];\r\n        }\r\n\r\n        this.events[event].push(callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\r\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\r\n     * advertisement is playing, or when a user action is required to start, then we clear the\r\n     * timer on ad ready\r\n     * @param {number} time\r\n     * @param {string} from\r\n     */\r\n    startSafetyTimer(time, from) {\r\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\r\n\r\n        this.safetyTimer = setTimeout(() => {\r\n            this.cancel();\r\n            this.clearSafetyTimer('startSafetyTimer()');\r\n        }, time);\r\n    }\r\n\r\n    /**\r\n     * Clear our safety timer(s)\r\n     * @param {string} from\r\n     */\r\n    clearSafetyTimer(from) {\r\n        if (!is.nullOrUndefined(this.safetyTimer)) {\r\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\r\n\r\n            clearTimeout(this.safetyTimer);\r\n            this.safetyTimer = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Ads;\r\n","// ==========================================================================\r\n// Plyr source update\r\n// ==========================================================================\r\n\r\nimport { providers } from './config/types';\r\nimport html5 from './html5';\r\nimport media from './media';\r\nimport support from './support';\r\nimport ui from './ui';\r\nimport { createElement, insertElement, removeElement } from './utils/elements';\r\nimport is from './utils/is';\r\nimport { getDeep } from './utils/objects';\r\n\r\nconst source = {\r\n    // Add elements to HTML5 media (source, tracks, etc)\r\n    insertElements(type, attributes) {\r\n        if (is.string(attributes)) {\r\n            insertElement(type, this.media, {\r\n                src: attributes,\r\n            });\r\n        } else if (is.array(attributes)) {\r\n            attributes.forEach(attribute => {\r\n                insertElement(type, this.media, attribute);\r\n            });\r\n        }\r\n    },\r\n\r\n    // Update source\r\n    // Sources are not checked for support so be careful\r\n    change(input) {\r\n        if (!getDeep(input, 'sources.length')) {\r\n            this.debug.warn('Invalid source format');\r\n            return;\r\n        }\r\n\r\n        // Cancel current network requests\r\n        html5.cancelRequests.call(this);\r\n\r\n        // Destroy instance and re-setup\r\n        this.destroy.call(\r\n            this,\r\n            () => {\r\n                // Reset quality options\r\n                this.options.quality = [];\r\n\r\n                // Remove elements\r\n                removeElement(this.media);\r\n                this.media = null;\r\n\r\n                // Reset class name\r\n                if (is.element(this.elements.container)) {\r\n                    this.elements.container.removeAttribute('class');\r\n                }\r\n\r\n                // Set the type and provider\r\n                const { sources, type } = input;\r\n                const [{ provider = providers.html5, src }] = sources;\r\n                const tagName = provider === 'html5' ? type : 'div';\r\n                const attributes = provider === 'html5' ? {} : { src };\r\n\r\n                Object.assign(this, {\r\n                    provider,\r\n                    type,\r\n                    // Check for support\r\n                    supported: support.check(type, provider, this.config.playsinline),\r\n                    // Create new element\r\n                    media: createElement(tagName, attributes),\r\n                });\r\n\r\n                // Inject the new element\r\n                this.elements.container.appendChild(this.media);\r\n\r\n                // Autoplay the new source?\r\n                if (is.boolean(input.autoplay)) {\r\n                    this.config.autoplay = input.autoplay;\r\n                }\r\n\r\n                // Set attributes for audio and video\r\n                if (this.isHTML5) {\r\n                    if (this.config.crossorigin) {\r\n                        this.media.setAttribute('crossorigin', '');\r\n                    }\r\n                    if (this.config.autoplay) {\r\n                        this.media.setAttribute('autoplay', '');\r\n                    }\r\n                    if (!is.empty(input.poster)) {\r\n                        this.poster = input.poster;\r\n                    }\r\n                    if (this.config.loop.active) {\r\n                        this.media.setAttribute('loop', '');\r\n                    }\r\n                    if (this.config.muted) {\r\n                        this.media.setAttribute('muted', '');\r\n                    }\r\n                    if (this.config.playsinline) {\r\n                        this.media.setAttribute('playsinline', '');\r\n                    }\r\n                }\r\n\r\n                // Restore class hook\r\n                ui.addStyleHook.call(this);\r\n\r\n                // Set new sources for html5\r\n                if (this.isHTML5) {\r\n                    source.insertElements.call(this, 'source', sources);\r\n                }\r\n\r\n                // Set video title\r\n                this.config.title = input.title;\r\n\r\n                // Set up from scratch\r\n                media.setup.call(this);\r\n\r\n                // HTML5 stuff\r\n                if (this.isHTML5) {\r\n                    // Setup captions\r\n                    if ('tracks' in input) {\r\n                        source.insertElements.call(this, 'track', input.tracks);\r\n                    }\r\n\r\n                    // Load HTML5 sources\r\n                    this.media.load();\r\n                }\r\n\r\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\r\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\r\n                    // Setup interface\r\n                    ui.build.call(this);\r\n                }\r\n\r\n                // Update the fullscreen support\r\n                this.fullscreen.update();\r\n            },\r\n            true,\r\n        );\r\n    },\r\n};\r\n\r\nexport default source;\r\n","// ==========================================================================\r\n// Plyr\r\n// plyr.js v3.3.23\r\n// https://github.com/sampotts/plyr\r\n// License: The MIT License (MIT)\r\n// ==========================================================================\r\n\r\nimport captions from './captions';\r\nimport defaults from './config/defaults';\r\nimport { getProviderByUrl, providers, types } from './config/types';\r\nimport Console from './console';\r\nimport controls from './controls';\r\nimport Fullscreen from './fullscreen';\r\nimport Listeners from './listeners';\r\nimport media from './media';\r\nimport Ads from './plugins/ads';\r\nimport source from './source';\r\nimport Storage from './storage';\r\nimport support from './support';\r\nimport ui from './ui';\r\nimport { closest } from './utils/arrays';\r\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\r\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\r\nimport is from './utils/is';\r\nimport loadSprite from './utils/loadSprite';\r\nimport { cloneDeep, extend } from './utils/objects';\r\nimport { parseUrl } from './utils/urls';\r\n\r\n// Private properties\r\n// TODO: Use a WeakMap for private globals\r\n// const globals = new WeakMap();\r\n\r\n// Plyr instance\r\nclass Plyr {\r\n    constructor(target, options) {\r\n        this.timers = {};\r\n\r\n        // State\r\n        this.ready = false;\r\n        this.loading = false;\r\n        this.failed = false;\r\n\r\n        // Touch device\r\n        this.touch = support.touch;\r\n\r\n        // Set the media element\r\n        this.media = target;\r\n\r\n        // String selector passed\r\n        if (is.string(this.media)) {\r\n            this.media = document.querySelectorAll(this.media);\r\n        }\r\n\r\n        // jQuery, NodeList or Array passed, use first element\r\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\r\n            // eslint-disable-next-line\r\n            this.media = this.media[0];\r\n        }\r\n\r\n        // Set config\r\n        this.config = extend(\r\n            {},\r\n            defaults,\r\n            Plyr.defaults,\r\n            options || {},\r\n            (() => {\r\n                try {\r\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\r\n                } catch (e) {\r\n                    return {};\r\n                }\r\n            })(),\r\n        );\r\n\r\n        // Elements cache\r\n        this.elements = {\r\n            container: null,\r\n            buttons: {},\r\n            display: {},\r\n            progress: {},\r\n            inputs: {},\r\n            settings: {\r\n                menu: null,\r\n                panes: {},\r\n                tabs: {},\r\n            },\r\n            captions: null,\r\n        };\r\n\r\n        // Captions\r\n        this.captions = {\r\n            active: null,\r\n            currentTrack: -1,\r\n            meta: new WeakMap(),\r\n        };\r\n\r\n        // Fullscreen\r\n        this.fullscreen = {\r\n            active: false,\r\n        };\r\n\r\n        // Options\r\n        this.options = {\r\n            speed: [],\r\n            quality: [],\r\n        };\r\n\r\n        // Debugging\r\n        // TODO: move to globals\r\n        this.debug = new Console(this.config.debug);\r\n\r\n        // Log config options and support\r\n        this.debug.log('Config', this.config);\r\n        this.debug.log('Support', support);\r\n\r\n        // We need an element to setup\r\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\r\n            this.debug.error('Setup failed: no suitable element passed');\r\n            return;\r\n        }\r\n\r\n        // Bail if the element is initialized\r\n        if (this.media.plyr) {\r\n            this.debug.warn('Target already setup');\r\n            return;\r\n        }\r\n\r\n        // Bail if not enabled\r\n        if (!this.config.enabled) {\r\n            this.debug.error('Setup failed: disabled by config');\r\n            return;\r\n        }\r\n\r\n        // Bail if disabled or no basic support\r\n        // You may want to disable certain UAs etc\r\n        if (!support.check().api) {\r\n            this.debug.error('Setup failed: no support');\r\n            return;\r\n        }\r\n\r\n        // Cache original element state for .destroy()\r\n        const clone = this.media.cloneNode(true);\r\n        clone.autoplay = false;\r\n        this.elements.original = clone;\r\n\r\n        // Set media type based on tag or data attribute\r\n        // Supported: video, audio, vimeo, youtube\r\n        const type = this.media.tagName.toLowerCase();\r\n\r\n        // Embed properties\r\n        let iframe = null;\r\n        let url = null;\r\n\r\n        // Different setup based on type\r\n        switch (type) {\r\n            case 'div':\r\n                // Find the frame\r\n                iframe = this.media.querySelector('iframe');\r\n\r\n                // <iframe> type\r\n                if (is.element(iframe)) {\r\n                    // Detect provider\r\n                    url = parseUrl(iframe.getAttribute('src'));\r\n                    this.provider = getProviderByUrl(url.toString());\r\n\r\n                    // Rework elements\r\n                    this.elements.container = this.media;\r\n                    this.media = iframe;\r\n\r\n                    // Reset classname\r\n                    this.elements.container.className = '';\r\n\r\n                    // Get attributes from URL and set config\r\n                    if (url.search.length) {\r\n                        const truthy = ['1', 'true'];\r\n\r\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\r\n                            this.config.autoplay = true;\r\n                        }\r\n                        if (truthy.includes(url.searchParams.get('loop'))) {\r\n                            this.config.loop.active = true;\r\n                        }\r\n\r\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\r\n                        // YouTube requires the playsinline in the URL\r\n                        if (this.isYouTube) {\r\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\r\n                            this.config.hl = url.searchParams.get('hl');\r\n                        } else {\r\n                            this.config.playsinline = true;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // <div> with attributes\r\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\r\n\r\n                    // Remove attribute\r\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\r\n                }\r\n\r\n                // Unsupported or missing provider\r\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\r\n                    this.debug.error('Setup failed: Invalid provider');\r\n                    return;\r\n                }\r\n\r\n                // Audio will come later for external providers\r\n                this.type = types.video;\r\n\r\n                break;\r\n\r\n            case 'video':\r\n            case 'audio':\r\n                this.type = type;\r\n                this.provider = providers.html5;\r\n\r\n                // Get config from attributes\r\n                if (this.media.hasAttribute('crossorigin')) {\r\n                    this.config.crossorigin = true;\r\n                }\r\n                if (this.media.hasAttribute('autoplay')) {\r\n                    this.config.autoplay = true;\r\n                }\r\n                if (this.media.hasAttribute('playsinline')) {\r\n                    this.config.playsinline = true;\r\n                }\r\n                if (this.media.hasAttribute('muted')) {\r\n                    this.config.muted = true;\r\n                }\r\n                if (this.media.hasAttribute('loop')) {\r\n                    this.config.loop.active = true;\r\n                }\r\n\r\n                break;\r\n\r\n            default:\r\n                this.debug.error('Setup failed: unsupported type');\r\n                return;\r\n        }\r\n\r\n        // Check for support again but with type\r\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\r\n\r\n        // If no support for even API, bail\r\n        if (!this.supported.api) {\r\n            this.debug.error('Setup failed: no support');\r\n            return;\r\n        }\r\n\r\n        this.eventListeners = [];\r\n\r\n        // Create listeners\r\n        this.listeners = new Listeners(this);\r\n\r\n        // Setup local storage for user settings\r\n        this.storage = new Storage(this);\r\n\r\n        // Store reference\r\n        this.media.plyr = this;\r\n\r\n        // Wrap media\r\n        if (!is.element(this.elements.container)) {\r\n            this.elements.container = createElement('div');\r\n            wrap(this.media, this.elements.container);\r\n        }\r\n\r\n        // Add style hook\r\n        ui.addStyleHook.call(this);\r\n\r\n        // Setup media\r\n        media.setup.call(this);\r\n\r\n        // Listen for events if debugging\r\n        if (this.config.debug) {\r\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\r\n                this.debug.log(`event: ${event.type}`);\r\n            });\r\n        }\r\n\r\n        // Setup interface\r\n        // If embed but not fully supported, build interface now to avoid flash of controls\r\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\r\n            ui.build.call(this);\r\n        }\r\n\r\n        // Container listeners\r\n        this.listeners.container();\r\n\r\n        // Global listeners\r\n        this.listeners.global();\r\n\r\n        // Setup fullscreen\r\n        this.fullscreen = new Fullscreen(this);\r\n\r\n        // Setup ads if provided\r\n        this.ads = new Ads(this);\r\n\r\n        // Autoplay if required\r\n        if (this.config.autoplay) {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    // ---------------------------------------\r\n    // API\r\n    // ---------------------------------------\r\n\r\n    /**\r\n     * Types and provider helpers\r\n     */\r\n    get isHTML5() {\r\n        return Boolean(this.provider === providers.html5);\r\n    }\r\n\r\n    get isEmbed() {\r\n        return Boolean(this.isYouTube || this.isVimeo);\r\n    }\r\n\r\n    get isYouTube() {\r\n        return Boolean(this.provider === providers.youtube);\r\n    }\r\n\r\n    get isVimeo() {\r\n        return Boolean(this.provider === providers.vimeo);\r\n    }\r\n\r\n    get isVideo() {\r\n        return Boolean(this.type === types.video);\r\n    }\r\n\r\n    get isAudio() {\r\n        return Boolean(this.type === types.audio);\r\n    }\r\n\r\n    /**\r\n     * Play the media, or play the advertisement (if they are not blocked)\r\n     */\r\n    play() {\r\n        if (!is.function(this.media.play)) {\r\n            return null;\r\n        }\r\n\r\n        // Return the promise (for HTML5)\r\n        return this.media.play();\r\n    }\r\n\r\n    /**\r\n     * Pause the media\r\n     */\r\n    pause() {\r\n        if (!this.playing || !is.function(this.media.pause)) {\r\n            return;\r\n        }\r\n\r\n        this.media.pause();\r\n    }\r\n\r\n    /**\r\n     * Get playing state\r\n     */\r\n    get playing() {\r\n        return Boolean(this.ready && !this.paused && !this.ended);\r\n    }\r\n\r\n    /**\r\n     * Get paused state\r\n     */\r\n    get paused() {\r\n        return Boolean(this.media.paused);\r\n    }\r\n\r\n    /**\r\n     * Get stopped state\r\n     */\r\n    get stopped() {\r\n        return Boolean(this.paused && this.currentTime === 0);\r\n    }\r\n\r\n    /**\r\n     * Get ended state\r\n     */\r\n    get ended() {\r\n        return Boolean(this.media.ended);\r\n    }\r\n\r\n    /**\r\n     * Toggle playback based on current status\r\n     * @param {boolean} input\r\n     */\r\n    togglePlay(input) {\r\n        // Toggle based on current state if nothing passed\r\n        const toggle = is.boolean(input) ? input : !this.playing;\r\n\r\n        if (toggle) {\r\n            this.play();\r\n        } else {\r\n            this.pause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stop playback\r\n     */\r\n    stop() {\r\n        if (this.isHTML5) {\r\n            this.pause();\r\n            this.restart();\r\n        } else if (is.function(this.media.stop)) {\r\n            this.media.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Restart playback\r\n     */\r\n    restart() {\r\n        this.currentTime = 0;\r\n    }\r\n\r\n    /**\r\n     * Rewind\r\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\r\n     */\r\n    rewind(seekTime) {\r\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\r\n    }\r\n\r\n    /**\r\n     * Fast forward\r\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\r\n     */\r\n    forward(seekTime) {\r\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\r\n    }\r\n\r\n    /**\r\n     * Seek to a time\r\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\r\n     */\r\n    set currentTime(input) {\r\n        // Bail if media duration isn't available yet\r\n        if (!this.duration) {\r\n            return;\r\n        }\r\n\r\n        // Validate input\r\n        const inputIsValid = is.number(input) && input > 0;\r\n\r\n        // Set\r\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\r\n\r\n        // Logging\r\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\r\n    }\r\n\r\n    /**\r\n     * Get current time\r\n     */\r\n    get currentTime() {\r\n        return Number(this.media.currentTime);\r\n    }\r\n\r\n    /**\r\n     * Get buffered\r\n     */\r\n    get buffered() {\r\n        const { buffered } = this.media;\r\n\r\n        // YouTube / Vimeo return a float between 0-1\r\n        if (is.number(buffered)) {\r\n            return buffered;\r\n        }\r\n\r\n        // HTML5\r\n        // TODO: Handle buffered chunks of the media\r\n        // (i.e. seek to another section buffers only that section)\r\n        if (buffered && buffered.length && this.duration > 0) {\r\n            return buffered.end(0) / this.duration;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Get seeking status\r\n     */\r\n    get seeking() {\r\n        return Boolean(this.media.seeking);\r\n    }\r\n\r\n    /**\r\n     * Get the duration of the current media\r\n     */\r\n    get duration() {\r\n        // Faux duration set via config\r\n        const fauxDuration = parseFloat(this.config.duration);\r\n\r\n        // Media duration can be NaN or Infinity before the media has loaded\r\n        const realDuration = (this.media || {}).duration;\r\n        const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\r\n\r\n        // If config duration is funky, use regular duration\r\n        return fauxDuration || duration;\r\n    }\r\n\r\n    /**\r\n     * Set the player volume\r\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\r\n     */\r\n    set volume(value) {\r\n        let volume = value;\r\n        const max = 1;\r\n        const min = 0;\r\n\r\n        if (is.string(volume)) {\r\n            volume = Number(volume);\r\n        }\r\n\r\n        // Load volume from storage if no value specified\r\n        if (!is.number(volume)) {\r\n            volume = this.storage.get('volume');\r\n        }\r\n\r\n        // Use config if all else fails\r\n        if (!is.number(volume)) {\r\n            ({ volume } = this.config);\r\n        }\r\n\r\n        // Maximum is volumeMax\r\n        if (volume > max) {\r\n            volume = max;\r\n        }\r\n        // Minimum is volumeMin\r\n        if (volume < min) {\r\n            volume = min;\r\n        }\r\n\r\n        // Update config\r\n        this.config.volume = volume;\r\n\r\n        // Set the player volume\r\n        this.media.volume = volume;\r\n\r\n        // If muted, and we're increasing volume manually, reset muted state\r\n        if (!is.empty(value) && this.muted && volume > 0) {\r\n            this.muted = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the current player volume\r\n     */\r\n    get volume() {\r\n        return Number(this.media.volume);\r\n    }\r\n\r\n    /**\r\n     * Increase volume\r\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\r\n     */\r\n    increaseVolume(step) {\r\n        const volume = this.media.muted ? 0 : this.volume;\r\n        this.volume = volume + (is.number(step) ? step : 0);\r\n    }\r\n\r\n    /**\r\n     * Decrease volume\r\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\r\n     */\r\n    decreaseVolume(step) {\r\n        this.increaseVolume(-step);\r\n    }\r\n\r\n    /**\r\n     * Set muted state\r\n     * @param {boolean} mute\r\n     */\r\n    set muted(mute) {\r\n        let toggle = mute;\r\n\r\n        // Load muted state from storage\r\n        if (!is.boolean(toggle)) {\r\n            toggle = this.storage.get('muted');\r\n        }\r\n\r\n        // Use config if all else fails\r\n        if (!is.boolean(toggle)) {\r\n            toggle = this.config.muted;\r\n        }\r\n\r\n        // Update config\r\n        this.config.muted = toggle;\r\n\r\n        // Set mute on the player\r\n        this.media.muted = toggle;\r\n    }\r\n\r\n    /**\r\n     * Get current muted state\r\n     */\r\n    get muted() {\r\n        return Boolean(this.media.muted);\r\n    }\r\n\r\n    /**\r\n     * Check if the media has audio\r\n     */\r\n    get hasAudio() {\r\n        // Assume yes for all non HTML5 (as we can't tell...)\r\n        if (!this.isHTML5) {\r\n            return true;\r\n        }\r\n\r\n        if (this.isAudio) {\r\n            return true;\r\n        }\r\n\r\n        // Get audio tracks\r\n        return (\r\n            Boolean(this.media.mozHasAudio) ||\r\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\r\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Set playback speed\r\n     * @param {number} speed - the speed of playback (0.5-2.0)\r\n     */\r\n    set speed(input) {\r\n        let speed = null;\r\n\r\n        if (is.number(input)) {\r\n            speed = input;\r\n        }\r\n\r\n        if (!is.number(speed)) {\r\n            speed = this.storage.get('speed');\r\n        }\r\n\r\n        if (!is.number(speed)) {\r\n            speed = this.config.speed.selected;\r\n        }\r\n\r\n        // Set min/max\r\n        if (speed < 0.1) {\r\n            speed = 0.1;\r\n        }\r\n        if (speed > 2.0) {\r\n            speed = 2.0;\r\n        }\r\n\r\n        if (!this.config.speed.options.includes(speed)) {\r\n            this.debug.warn(`Unsupported speed (${speed})`);\r\n            return;\r\n        }\r\n\r\n        // Update config\r\n        this.config.speed.selected = speed;\r\n\r\n        // Set media speed\r\n        this.media.playbackRate = speed;\r\n    }\r\n\r\n    /**\r\n     * Get current playback speed\r\n     */\r\n    get speed() {\r\n        return Number(this.media.playbackRate);\r\n    }\r\n\r\n    /**\r\n     * Set playback quality\r\n     * Currently HTML5 & YouTube only\r\n     * @param {number} input - Quality level\r\n     */\r\n    set quality(input) {\r\n        const config = this.config.quality;\r\n        const options = this.options.quality;\r\n\r\n        if (!options.length) {\r\n            return;\r\n        }\r\n\r\n        let quality = [\r\n            !is.empty(input) && Number(input),\r\n            this.storage.get('quality'),\r\n            config.selected,\r\n            config.default,\r\n        ].find(is.number);\r\n\r\n        if (!options.includes(quality)) {\r\n            const value = closest(options, quality);\r\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\r\n            quality = value;\r\n        }\r\n\r\n        // Trigger request event\r\n        triggerEvent.call(this, this.media, 'qualityrequested', false, { quality });\r\n\r\n        // Update config\r\n        config.selected = quality;\r\n\r\n        // Set quality\r\n        this.media.quality = quality;\r\n    }\r\n\r\n    /**\r\n     * Get current quality level\r\n     */\r\n    get quality() {\r\n        return this.media.quality;\r\n    }\r\n\r\n    /**\r\n     * Toggle loop\r\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\r\n     * @param {boolean} input - Whether to loop or not\r\n     */\r\n    set loop(input) {\r\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\r\n        this.config.loop.active = toggle;\r\n        this.media.loop = toggle;\r\n\r\n        // Set default to be a true toggle\r\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\r\n\r\n        switch (type) {\r\n            case 'start':\r\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\r\n                    this.config.loop.end = null;\r\n                }\r\n                this.config.loop.start = this.currentTime;\r\n                // this.config.loop.indicator.start = this.elements.display.played.value;\r\n                break;\r\n\r\n            case 'end':\r\n                if (this.config.loop.start >= this.currentTime) {\r\n                    return this;\r\n                }\r\n                this.config.loop.end = this.currentTime;\r\n                // this.config.loop.indicator.end = this.elements.display.played.value;\r\n                break;\r\n\r\n            case 'all':\r\n                this.config.loop.start = 0;\r\n                this.config.loop.end = this.duration - 2;\r\n                this.config.loop.indicator.start = 0;\r\n                this.config.loop.indicator.end = 100;\r\n                break;\r\n\r\n            case 'toggle':\r\n                if (this.config.loop.active) {\r\n                    this.config.loop.start = 0;\r\n                    this.config.loop.end = null;\r\n                } else {\r\n                    this.config.loop.start = 0;\r\n                    this.config.loop.end = this.duration - 2;\r\n                }\r\n                break;\r\n\r\n            default:\r\n                this.config.loop.start = 0;\r\n                this.config.loop.end = null;\r\n                break;\r\n        } */\r\n    }\r\n\r\n    /**\r\n     * Get current loop state\r\n     */\r\n    get loop() {\r\n        return Boolean(this.media.loop);\r\n    }\r\n\r\n    /**\r\n     * Set new media source\r\n     * @param {object} input - The new source object (see docs)\r\n     */\r\n    set source(input) {\r\n        source.change.call(this, input);\r\n    }\r\n\r\n    /**\r\n     * Get current source\r\n     */\r\n    get source() {\r\n        return this.media.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * Set the poster image for a video\r\n     * @param {input} - the URL for the new poster image\r\n     */\r\n    set poster(input) {\r\n        if (!this.isVideo) {\r\n            this.debug.warn('Poster can only be set for video');\r\n            return;\r\n        }\r\n\r\n        ui.setPoster.call(this, input, false).catch(() => {});\r\n    }\r\n\r\n    /**\r\n     * Get the current poster image\r\n     */\r\n    get poster() {\r\n        if (!this.isVideo) {\r\n            return null;\r\n        }\r\n\r\n        return this.media.getAttribute('poster');\r\n    }\r\n\r\n    /**\r\n     * Set the autoplay state\r\n     * @param {boolean} input - Whether to autoplay or not\r\n     */\r\n    set autoplay(input) {\r\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\r\n        this.config.autoplay = toggle;\r\n    }\r\n\r\n    /**\r\n     * Get the current autoplay state\r\n     */\r\n    get autoplay() {\r\n        return Boolean(this.config.autoplay);\r\n    }\r\n\r\n    /**\r\n     * Toggle captions\r\n     * @param {boolean} input - Whether to enable captions\r\n     */\r\n    toggleCaptions(input) {\r\n        captions.toggle.call(this, input, false);\r\n    }\r\n\r\n    /**\r\n     * Set the caption track by index\r\n     * @param {number} - Caption index\r\n     */\r\n    set currentTrack(input) {\r\n        captions.set.call(this, input, false);\r\n    }\r\n\r\n    /**\r\n     * Get the current caption track index (-1 if disabled)\r\n     */\r\n    get currentTrack() {\r\n        const { toggled, currentTrack } = this.captions;\r\n        return toggled ? currentTrack : -1;\r\n    }\r\n\r\n    /**\r\n     * Set the wanted language for captions\r\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\r\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\r\n     */\r\n    set language(input) {\r\n        captions.setLanguage.call(this, input, false);\r\n    }\r\n\r\n    /**\r\n     * Get the current track's language\r\n     */\r\n    get language() {\r\n        return (captions.getCurrentTrack.call(this) || {}).language;\r\n    }\r\n\r\n    /**\r\n     * Toggle picture-in-picture playback on WebKit/MacOS\r\n     * TODO: update player with state, support, enabled\r\n     * TODO: detect outside changes\r\n     */\r\n    set pip(input) {\r\n        const states = {\r\n            pip: 'picture-in-picture',\r\n            inline: 'inline',\r\n        };\r\n\r\n        // Bail if no support\r\n        if (!support.pip) {\r\n            return;\r\n        }\r\n\r\n        // Toggle based on current state if not passed\r\n        const toggle = is.boolean(input) ? input : this.pip === states.inline;\r\n\r\n        // Toggle based on current state\r\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\r\n    }\r\n\r\n    /**\r\n     * Get the current picture-in-picture state\r\n     */\r\n    get pip() {\r\n        if (!support.pip) {\r\n            return null;\r\n        }\r\n\r\n        return this.media.webkitPresentationMode;\r\n    }\r\n\r\n    /**\r\n     * Trigger the airplay dialog\r\n     * TODO: update player with state, support, enabled\r\n     */\r\n    airplay() {\r\n        // Show dialog if supported\r\n        if (support.airplay) {\r\n            this.media.webkitShowPlaybackTargetPicker();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle the player controls\r\n     * @param {boolean} [toggle] - Whether to show the controls\r\n     */\r\n    toggleControls(toggle) {\r\n        // Don't toggle if missing UI support or if it's audio\r\n        if (this.supported.ui && !this.isAudio) {\r\n            // Get state before change\r\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\r\n\r\n            // Negate the argument if not undefined since adding the class to hides the controls\r\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\r\n\r\n            // Apply and get updated state\r\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\r\n\r\n            // Close menu\r\n            if (hiding && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\r\n                controls.toggleMenu.call(this, false);\r\n            }\r\n            // Trigger event on change\r\n            if (hiding !== isHidden) {\r\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\r\n                triggerEvent.call(this, this.media, eventName);\r\n            }\r\n            return !hiding;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Add event listeners\r\n     * @param {string} event - Event type\r\n     * @param {function} callback - Callback for when event occurs\r\n     */\r\n    on(event, callback) {\r\n        on.call(this, this.elements.container, event, callback);\r\n    }\r\n\r\n    /**\r\n     * Add event listeners once\r\n     * @param {string} event - Event type\r\n     * @param {function} callback - Callback for when event occurs\r\n     */\r\n    once(event, callback) {\r\n        once.call(this, this.elements.container, event, callback);\r\n    }\r\n\r\n    /**\r\n     * Remove event listeners\r\n     * @param {string} event - Event type\r\n     * @param {function} callback - Callback for when event occurs\r\n     */\r\n    off(event, callback) {\r\n        off(this.elements.container, event, callback);\r\n    }\r\n\r\n    /**\r\n     * Destroy an instance\r\n     * Event listeners are removed when elements are removed\r\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\r\n     * @param {function} callback - Callback for when destroy is complete\r\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\r\n     */\r\n    destroy(callback, soft = false) {\r\n        if (!this.ready) {\r\n            return;\r\n        }\r\n\r\n        const done = () => {\r\n            // Reset overflow (incase destroyed while in fullscreen)\r\n            document.body.style.overflow = '';\r\n\r\n            // GC for embed\r\n            this.embed = null;\r\n\r\n            // If it's a soft destroy, make minimal changes\r\n            if (soft) {\r\n                if (Object.keys(this.elements).length) {\r\n                    // Remove elements\r\n                    removeElement(this.elements.buttons.play);\r\n                    removeElement(this.elements.captions);\r\n                    removeElement(this.elements.controls);\r\n                    removeElement(this.elements.wrapper);\r\n\r\n                    // Clear for GC\r\n                    this.elements.buttons.play = null;\r\n                    this.elements.captions = null;\r\n                    this.elements.controls = null;\r\n                    this.elements.wrapper = null;\r\n                }\r\n\r\n                // Callback\r\n                if (is.function(callback)) {\r\n                    callback();\r\n                }\r\n            } else {\r\n                // Unbind listeners\r\n                unbindListeners.call(this);\r\n\r\n                // Replace the container with the original element provided\r\n                replaceElement(this.elements.original, this.elements.container);\r\n\r\n                // Event\r\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\r\n\r\n                // Callback\r\n                if (is.function(callback)) {\r\n                    callback.call(this.elements.original);\r\n                }\r\n\r\n                // Reset state\r\n                this.ready = false;\r\n\r\n                // Clear for garbage collection\r\n                setTimeout(() => {\r\n                    this.elements = null;\r\n                    this.media = null;\r\n                }, 200);\r\n            }\r\n        };\r\n\r\n        // Stop playback\r\n        this.stop();\r\n\r\n        // Provider specific stuff\r\n        if (this.isHTML5) {\r\n            // Clear timeout\r\n            clearTimeout(this.timers.loading);\r\n\r\n            // Restore native video controls\r\n            ui.toggleNativeControls.call(this, true);\r\n\r\n            // Clean up\r\n            done();\r\n        } else if (this.isYouTube) {\r\n            // Clear timers\r\n            clearInterval(this.timers.buffering);\r\n            clearInterval(this.timers.playing);\r\n\r\n            // Destroy YouTube API\r\n            if (this.embed !== null && is.function(this.embed.destroy)) {\r\n                this.embed.destroy();\r\n            }\r\n\r\n            // Clean up\r\n            done();\r\n        } else if (this.isVimeo) {\r\n            // Destroy Vimeo API\r\n            // then clean up (wait, to prevent postmessage errors)\r\n            if (this.embed !== null) {\r\n                this.embed.unload().then(done);\r\n            }\r\n\r\n            // Vimeo does not always return\r\n            setTimeout(done, 200);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check for support for a mime type (HTML5 only)\r\n     * @param {string} type - Mime type\r\n     */\r\n    supports(type) {\r\n        return support.mime.call(this, type);\r\n    }\r\n\r\n    /**\r\n     * Check for support\r\n     * @param {string} type - Player type (audio/video)\r\n     * @param {string} provider - Provider (html5/youtube/vimeo)\r\n     * @param {bool} inline - Where player has `playsinline` sttribute\r\n     */\r\n    static supported(type, provider, inline) {\r\n        return support.check(type, provider, inline);\r\n    }\r\n\r\n    /**\r\n     * Load an SVG sprite into the page\r\n     * @param {string} url - URL for the SVG sprite\r\n     * @param {string} [id] - Unique ID\r\n     */\r\n    static loadSprite(url, id) {\r\n        return loadSprite(url, id);\r\n    }\r\n\r\n    /**\r\n     * Setup multiple instances\r\n     * @param {*} selector\r\n     * @param {object} options\r\n     */\r\n    static setup(selector, options = {}) {\r\n        let targets = null;\r\n\r\n        if (is.string(selector)) {\r\n            targets = Array.from(document.querySelectorAll(selector));\r\n        } else if (is.nodeList(selector)) {\r\n            targets = Array.from(selector);\r\n        } else if (is.array(selector)) {\r\n            targets = selector.filter(is.element);\r\n        }\r\n\r\n        if (is.empty(targets)) {\r\n            return null;\r\n        }\r\n\r\n        return targets.map(t => new Plyr(t, options));\r\n    }\r\n}\r\n\r\nPlyr.defaults = cloneDeep(defaults);\r\n\r\nexport default Plyr;\r\n"]}